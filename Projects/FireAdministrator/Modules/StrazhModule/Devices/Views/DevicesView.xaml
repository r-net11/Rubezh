<UserControl
	x:Class="StrazhModule.Views.DevicesView"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:Controls="clr-namespace:Controls;assembly=Controls"
	xmlns:Conv="clr-namespace:Controls.Converters;assembly=Controls"
	xmlns:Views="clr-namespace:StrazhModule.Views"
	xmlns:drag="clr-namespace:Infrastructure.Common.Services.DragDrop;assembly=Infrastructure.Common"
	xmlns:tree="clr-namespace:Controls.TreeList;assembly=Controls"
	xmlns:ctrl="clr-namespace:Controls.ListViewLayoutManager;assembly=Controls"
	xmlns:viewModel="clr-namespace:StrazhModule.ViewModels"
	xmlns:lang="clr-namespace:Localization.Strazh.Views;assembly=Localization"
	xmlns:langCommon="clr-namespace:Localization.Strazh.Common;assembly=Localization">
	<UserControl.Resources>
		<Conv:SwitchConverter x:Key="Tooltip" Else="{x:Null}">
			<Conv:SwitchCase Then="{x:Static lang:CommonViews.DeviceCanPlacedOnPlan}" When="Multiple" />
            <Conv:SwitchCase Then="{x:Static lang:CommonViews.DeviceNotOnPlan}" When="NotPresent" />
            <Conv:SwitchCase Then="{x:Static lang:CommonViews.DeviceShouldNotPlacedOnPlan}" When="Prohibit" />
            <Conv:SwitchCase Then="{x:Static lang:CommonViews.DeviceAvailableOnPlan}" When="Single" />
		</Conv:SwitchConverter>
		<ContextMenu x:Key="DeviceContextMenu">
			<Controls:IconedMenuItem
				Command="{Binding AddCommand}"
				ImageSource="BAdd"
				Text="{x:Static langCommon:CommonResources.AddDevice}" />
			<Controls:IconedMenuItem
				Command="{Binding RemoveCommand}"
				ImageSource="BDelete"
				Text="{x:Static langCommon:CommonResources.Delete}" />
			<Controls:IconedMenuItem
				Command="{Binding ShowPropertiesCommand}"
				ImageSource="BSettings"
				Text="{x:Static lang:CommonViews.Properties}" />
			<Separator Visibility="{Binding Driver.IsPlaceable, Converter={StaticResource BoolToVisibilityConverter}}" />
			<Controls:IconedMenuItem
				Command="{Binding AllowMultipleVizualizationCommand}"
				CommandParameter="{StaticResource True}"
				ImageSource="Eye2"
				Text="{x:Static lang:CommonViews.AllowMultiplyVisualization}" />
			<Controls:IconedMenuItem
				Command="{Binding AllowMultipleVizualizationCommand}"
				CommandParameter="{StaticResource False}"
				ImageSource="Eye3"
				Text="{x:Static lang:CommonViews.DenyMultipleVisualization}" />
		</ContextMenu>
		<viewModel:DeviceViewModelDeviceComparer x:Key="DeviceViewModelDeviceComparer" />
		<viewModel:DeviceViewModelAddressComparer x:Key="DeviceViewModelAddressComparer" />
		<viewModel:DeviceViewModelZoneComparer x:Key="DeviceViewModelZoneComparer" />
		<viewModel:DeviceViewModelDoorTypeDescriptionComparer x:Key="DeviceViewModelDoorTypeDescriptionComparer" />
	</UserControl.Resources>
	<Grid>
		<Grid.RowDefinitions>
			<RowDefinition Height="*" MinHeight="200" />
			<RowDefinition Height="Auto" />
			<RowDefinition
				Height="180"
				MinHeight="150"
				MaxHeight="300" />
		</Grid.RowDefinitions>

		<!-- Дерево устройств -->
		<tree:TreeList
			Focusable="True"
			SelectedTreeNode="{Binding SelectedDevice}"
			Source="{Binding RootDevices}"
			ctrl:ListViewLayoutManager.Enabled="True"
			tree:SortBehavior.CanUserSortColumns="True"
			tree:SortBehavior.DefaultSortComparer="{StaticResource DeviceViewModelDeviceComparer}">
			<tree:TreeList.Resources>
				<Style
					x:Key="{x:Type ComboBox}"
					BasedOn="{StaticResource {x:Type ComboBox}}"
					TargetType="ComboBox">
					<Setter Property="MinWidth" Value="0" />
					<Setter Property="MinHeight" Value="0" />
				</Style>
				<Style
					x:Key="{x:Type TextBox}"
					BasedOn="{StaticResource {x:Type TextBox}}"
					TargetType="TextBox">
					<Setter Property="MinWidth" Value="0" />
					<Setter Property="MinHeight" Value="0" />
				</Style>
			</tree:TreeList.Resources>
			<tree:TreeList.View>
				<GridView>
					<!-- Колонка "Устройство" -->
					<GridViewColumn
						Width="250"
						Header="{x:Static langCommon:CommonResources.Device}"
						tree:SortBehavior.SortComparer="{StaticResource DeviceViewModelDeviceComparer}">
						<GridViewColumn.CellTemplate>
							<DataTemplate>
								<DockPanel ContextMenu="{StaticResource DeviceContextMenu}">
									<drag:DragDropDecorator
										Margin="0 2 0 0"
										VerticalAlignment="Center"
										AllowSimulateDrag="True"
										DragCommand="{Binding CreateDragObjectCommand}"
										DragVisualProvider="{Binding CreateDragVisual}"
										DynamicCursor="True"
										IsSource="True">
										<Image
											VerticalAlignment="Center"
											Source="{Binding VisualizationState,
										                        Converter={StaticResource VisualizationStateToImageSourceConverter}}"
											ToolTip="{Binding VisualizationState,
										                         Converter={StaticResource Tooltip}}" />
									</drag:DragDropDecorator>
									<Controls:EditorPresenter>
										<Controls:EditorPresenter.ViewTemplate>
											<ControlTemplate>
												<StackPanel Orientation="Horizontal">
													<Image
														Width="16"
														Height="16"
														Margin="5 0"
														HorizontalAlignment="Left"
														VerticalAlignment="Center"
														Source="{Binding Driver.ImageSource}">
														<Image.Style>
															<Style TargetType="{x:Type Image}">
																<Style.Triggers>
																	<DataTrigger Binding="{Binding IsEnabled}" Value="False">
																		<Setter Property="Opacity" Value="0.3" />
																	</DataTrigger>
																</Style.Triggers>
															</Style>
														</Image.Style>
													</Image>
													<TextBlock
														Width="1000"
														HorizontalAlignment="Left"
														VerticalAlignment="Center"
														Text="{Binding Name}">
														<TextBlock.Style>
															<Style TargetType="TextBlock">
																<Style.Triggers>
																	<DataTrigger Binding="{Binding IsEnabled}" Value="False">
																		<Setter Property="TextBlock.Foreground" Value="Gray" />
																	</DataTrigger>
																</Style.Triggers>
															</Style>
														</TextBlock.Style>
													</TextBlock>
												</StackPanel>
											</ControlTemplate>
										</Controls:EditorPresenter.ViewTemplate>
										<Controls:EditorPresenter.EditTemplate>
											<ControlTemplate>
												<StackPanel Orientation="Horizontal">
													<Image
														Width="16"
														Height="16"
														Margin="5, 0, 5, 0"
														HorizontalAlignment="Left"
														Source="{Binding Driver.ImageSource}" />
													<TextBox
														Name="nameTextBox"
														Width="1000"
														HorizontalAlignment="Left"
														VerticalAlignment="Center"
														BorderThickness="0"
														Foreground="{DynamicResource ForegroundColorDark}"
														Text="{Binding Name,
													                        UpdateSourceTrigger=PropertyChanged}" />
												</StackPanel>
												<ControlTemplate.Triggers>
													<Trigger SourceName="nameTextBox" Property="IsVisible" Value="True">
														<Setter TargetName="nameTextBox" Property="FocusManager.FocusedElement" Value="{Binding ElementName=nameTextBox}" />
													</Trigger>
												</ControlTemplate.Triggers>
											</ControlTemplate>
										</Controls:EditorPresenter.EditTemplate>
									</Controls:EditorPresenter>
								</DockPanel>
							</DataTemplate>
						</GridViewColumn.CellTemplate>
					</GridViewColumn>

					<!-- Колонка "Адрес" -->
					<GridViewColumn
						Width="100"
						Header="{x:Static lang:CommonViews.Address}"
						tree:SortBehavior.SortComparer="{StaticResource DeviceViewModelAddressComparer}">
						<GridViewColumn.CellTemplate>
							<DataTemplate>
								<Controls:EditorPresenter>
									<Controls:EditorPresenter.ViewTemplate>
										<ControlTemplate>
											<TextBlock Text="{Binding Address}" >
												<TextBlock.Style>
													<Style TargetType="TextBlock">
														<Style.Triggers>
															<DataTrigger Binding="{Binding IsEnabled}" Value="False">
																<Setter Property="TextBlock.Foreground" Value="Gray" />
															</DataTrigger>
														</Style.Triggers>
													</Style>
												</TextBlock.Style>
											</TextBlock>
										</ControlTemplate>
									</Controls:EditorPresenter.ViewTemplate>
								</Controls:EditorPresenter>
							</DataTemplate>
						</GridViewColumn.CellTemplate>
					</GridViewColumn>

					<!-- Колонка "Режим" -->
					<GridViewColumn
						Width="100"
						Header="Режим"
						tree:SortBehavior.SortComparer="{StaticResource DeviceViewModelDoorTypeDescriptionComparer}">
						<GridViewColumn.CellTemplate>
							<DataTemplate>
								<Controls:EditorPresenter>
									<Controls:EditorPresenter.ViewTemplate>
										<ControlTemplate>
											<TextBlock Text="{Binding DoorTypeDescription}" >
												<TextBlock.Style>
													<Style TargetType="TextBlock">
														<Style.Triggers>
															<DataTrigger Binding="{Binding IsEnabled}" Value="False">
																<Setter Property="TextBlock.Foreground" Value="Gray" />
															</DataTrigger>
														</Style.Triggers>
													</Style>
												</TextBlock.Style>
											</TextBlock>
										</ControlTemplate>
									</Controls:EditorPresenter.ViewTemplate>
								</Controls:EditorPresenter>
							</DataTemplate>
						</GridViewColumn.CellTemplate>
					</GridViewColumn>

					<!-- Колонка "Ведет в зону" -->
					<GridViewColumn ctrl:ProportionalColumn.Width="1" Header="{x:Static lang:CommonViews.LeadsToZone}">
						<GridViewColumn.CellTemplate>
							<DataTemplate>
								<Controls:EditorPresenter>
									<Controls:EditorPresenter.ViewTemplate>
										<ControlTemplate>
											<TextBlock
												MinWidth="100"
												VerticalAlignment="Center"
												Cursor="Hand"
												Text="{Binding EditingPresentationZone}"
												TextWrapping="NoWrap"
												IsEnabled="{Binding IsEnabled}"
												Visibility="{Binding Driver.HasZone,
											                                Converter={StaticResource BoolToVisibilityConverter}}">
												<TextBlock.Style>
													<Style TargetType="TextBlock">
														<Style.Triggers>
															<DataTrigger Binding="{Binding IsZoneGrayed}" Value="True">
																<Setter Property="TextBlock.Foreground" Value="Gray" />
															</DataTrigger>
														</Style.Triggers>
													</Style>
												</TextBlock.Style>
												<TextBlock.InputBindings>
													<MouseBinding Command="{Binding ChangeZoneCommand}" MouseAction="LeftClick" />
												</TextBlock.InputBindings>
												<TextBlock.ToolTip>
													<WrapPanel>
														<TextBlock Text="{Binding EditingPresentationZone}" TextWrapping="Wrap" />
													</WrapPanel>
												</TextBlock.ToolTip>
											</TextBlock>
										</ControlTemplate>
									</Controls:EditorPresenter.ViewTemplate>
								</Controls:EditorPresenter>
							</DataTemplate>
						</GridViewColumn.CellTemplate>
					</GridViewColumn>
				</GridView>
			</tree:TreeList.View>
		</tree:TreeList>

		<!-- Горизонтальный разделитель -->
		<GridSplitter
			Grid.Row="1"
			Height="5"
			HorizontalAlignment="Stretch"
			VerticalAlignment="Stretch"
			Background="Transparent"
			Cursor="SizeNS" />

		<!-- Информация о текущем устройстве (выделено в дереве устройств) -->
		<Border
			Grid.Row="2"
			Margin="0, 5, 0, 0"
			Background="{DynamicResource BackgroundBrush}"
			CornerRadius="5,0,0,5"
			DataContext="{Binding SelectedDevice}">
			<Grid>
				<Grid.RowDefinitions>
					<RowDefinition Height="*" />
					<RowDefinition Height="Auto" />
				</Grid.RowDefinitions>
				<ScrollViewer Grid.Row="0" VerticalScrollBarVisibility="Auto">
					<StackPanel Margin="5" HorizontalAlignment="Left">
						<StackPanel Orientation="Horizontal">
							<Image
								Width="16"
								Margin="2 2 5 2"
								Source="{Binding Driver.ImageSource}" />
							<TextBlock
								VerticalAlignment="Center"
								FontWeight="Bold"
								Foreground="{DynamicResource ForegroundColorLight}"
								Text="{Binding Driver.Name}" />
						</StackPanel>
						<StackPanel Orientation="Horizontal">
							<TextBlock
								Width="120"
								Margin="2 2 5 2"
								Foreground="{DynamicResource ForegroundColorLight}"
								Text="{x:Static lang:CommonViews.ConnectedTo}" />
							<TextBlock
								VerticalAlignment="Center"
								FontWeight="Bold"
								Foreground="{DynamicResource ForegroundColorLight}">
								<Hyperlink Command="{Binding ShowParentCommand}" Style="{StaticResource HyperlinkStyle}">
									<StackPanel Orientation="Horizontal">
										<Image
											Width="16"
											Margin="2 2 5 2"
											Source="{Binding Device.Parent.Driver.ImageSource}" />
										<TextBlock Margin="2" Text="{Binding Device.Parent.Name}" />
									</StackPanel>
								</Hyperlink>
							</TextBlock>
							<StackPanel.Style>
								<Style>
									<Style.Triggers>
										<DataTrigger Binding="{Binding Device.Parent}" Value="{x:Null}">
											<Setter Property="StackPanel.Visibility" Value="Collapsed" />
										</DataTrigger>
									</Style.Triggers>
								</Style>
							</StackPanel.Style>
						</StackPanel>
						<WrapPanel Orientation="Horizontal" Visibility="{Binding Driver.HasZone, Converter={StaticResource BoolToVisibilityConverter}}">
							<TextBlock
								Width="120"
								Margin="2 2 5 2"
								Foreground="{DynamicResource ForegroundColorLight}"
								Text="{x:Static lang:CommonViews.LeadsToZone}" />
							<TextBlock
								Margin="2 2 5 2"
								FontStyle="Italic"
								Foreground="{DynamicResource ForegroundColorLight}"
								Text="{x:Static lang:CommonViews.ZoneNotSpecified}">
								<TextBlock.Style>
									<Style>
										<Setter Property="TextBlock.Visibility" Value="Collapsed" />
										<Style.Triggers>
											<DataTrigger Binding="{Binding PresentationZone}" Value="">
												<Setter Property="TextBlock.Visibility" Value="Visible" />
											</DataTrigger>
										</Style.Triggers>
									</Style>
								</TextBlock.Style>
							</TextBlock>
							<TextBlock VerticalAlignment="Center">
								<Hyperlink Command="{Binding ShowZoneCommand}" Style="{StaticResource HyperlinkStyle}">
									<StackPanel Orientation="Horizontal">
										<Image
											Width="16"
											Margin="2 2 5 2"
											Source="/Controls;component/Images/Zone.png" />
										<TextBlock
											Margin="2"
											Text="{Binding PresentationZone}"
											TextWrapping="Wrap" />
									</StackPanel>
								</Hyperlink>
								<TextBlock.Style>
									<Style>
										<Style.Setters>
											<Setter Property="TextBlock.ToolTip">
												<Setter.Value>
													<TextBlock Text="{Binding PresentationZone}" TextWrapping="Wrap" />
												</Setter.Value>
											</Setter>
										</Style.Setters>
										<Style.Triggers>
											<DataTrigger Binding="{Binding PresentationZone}" Value="">
												<Setter Property="TextBlock.Visibility" Value="Collapsed" />
											</DataTrigger>
										</Style.Triggers>
									</Style>
								</TextBlock.Style>
							</TextBlock>
						</WrapPanel>

						<WrapPanel Orientation="Horizontal" Visibility="{Binding HasDoor, Converter={StaticResource BoolToVisibilityConverter}}">
							<TextBlock
								Width="120"
								Margin="2 2 5 2"
								Foreground="{DynamicResource ForegroundColorLight}"
								Text="{x:Static langCommon:CommonResources.Door}" />
							<TextBlock VerticalAlignment="Center">
								<Hyperlink Command="{Binding ShowDoorCommand}" Style="{StaticResource HyperlinkStyle}">
									<StackPanel Orientation="Horizontal">
										<Image
											Width="16"
											Margin="2 2 5 2"
											Source="/Controls;component/Images/Door.png" />
										<TextBlock
											Margin="2"
											Text="{Binding Door.Name}"
											TextWrapping="Wrap"
											ToolTip="{Binding Door.Name}" />
									</StackPanel>
								</Hyperlink>
							</TextBlock>
						</WrapPanel>
						<Views:PropertiesView DataContext="{Binding PropertiesViewModel}" />
					</StackPanel>
				</ScrollViewer>
			</Grid>
		</Border>
	</Grid>
</UserControl>