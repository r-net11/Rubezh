<UserControl x:Class="StrazhModule.Views.LockPropertiesView"
			 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
			 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:extToolkit="clr-namespace:Microsoft.Windows.Controls;assembly=WPFToolkit.Extended"
			 MinWidth="500" MinHeight="300">

	<Grid>
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto" />
			<RowDefinition Height="Auto" />
			<RowDefinition Height="Auto" />
		</Grid.RowDefinitions>
		
		<TabControl Grid.Row="0" Margin="0" Height="206">
			<TabItem Header="Замок">
				<StackPanel>
					<GroupBox Header="Основные" Margin="5" Padding="5">
						<GroupBox.HeaderTemplate>
							<DataTemplate>
								<TextBlock Text="{Binding}" Foreground="{DynamicResource ForegroundColorLight}"/>
							</DataTemplate>
						</GroupBox.HeaderTemplate>
						<Grid>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="200" />
							</Grid.ColumnDefinitions>
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
							</Grid.RowDefinitions>

							<TextBlock Grid.Row="0" Grid.Column="0" Text="Метод открытия" HorizontalAlignment="Right" VerticalAlignment="Center" Foreground="{DynamicResource ForegroundColorLight}" Margin="5 2" />
							<Grid Grid.Row="0" Grid.Column="1">
								<ComboBox ItemsSource="{Binding DoorOpenMethods}" SelectedItem="{Binding DoorOpenMethod}" Margin="2">
									<ComboBox.ItemTemplate>
										<DataTemplate>
											<TextBlock Text="{Binding ., Converter={StaticResource EnumToDescriptionConverter}}" />
										</DataTemplate>
									</ComboBox.ItemTemplate>
								</ComboBox>
							</Grid>

							<TextBlock Grid.Row="1" Grid.Column="0" Text="График замка" HorizontalAlignment="Right" VerticalAlignment="Center" Foreground="{DynamicResource ForegroundColorLight}" Margin="5 2" />
							<ComboBox Grid.Row="1" Grid.Column="1" ItemsSource="{Binding AvailableWeeklyIntervals}" SelectedItem="{Binding WeeklyInterval}" IsEnabled="{Binding CanSetTimeIntervals}" Margin="2">
								<ComboBox.ItemTemplate>
									<DataTemplate>
										<TextBlock Text="{Binding Name}"/>
									</DataTemplate>
								</ComboBox.ItemTemplate>
							</ComboBox>

							<TextBlock Grid.Row="2" Grid.Column="0" Text="Время удержания, мс" HorizontalAlignment="Right" VerticalAlignment="Center" Foreground="{DynamicResource ForegroundColorLight}" Margin="5 2" />
							<extToolkit:IntegerUpDown Grid.Row="2" Grid.Column="1" Value="{Binding UnlockHoldInterval, UpdateSourceTrigger=PropertyChanged}" Minimum="2000" Maximum="34464" Margin="2" />

							<TextBlock Grid.Row="3" Grid.Column="0" Text="Альтернативное время удержания, мс" HorizontalAlignment="Right" VerticalAlignment="Center" Foreground="{DynamicResource ForegroundColorLight}" Margin="5 2" />
							<extToolkit:IntegerUpDown Grid.Row="3" Grid.Column="1" Value="{Binding HandicapUnlockHoldInterval, UpdateSourceTrigger=PropertyChanged}" Margin="2" />

							<TextBlock Grid.Row="4" Grid.Column="0" Text="Тревога по принуждению" HorizontalAlignment="Right" VerticalAlignment="Center" Foreground="{DynamicResource ForegroundColorLight}" Margin="5 2" />
							<CheckBox Grid.Row="4" Grid.Column="1" IsChecked="{Binding IsDuressAlarmEnable}" Margin="2" />

							<!--<TextBlock Grid.Row="5" Grid.Column="0" Text="Тревога по повторному проходу" HorizontalAlignment="Right" VerticalAlignment="Center" Foreground="{DynamicResource ForegroundColorLight}" Margin="5 2" />
					<CheckBox Grid.Row="5" Grid.Column="1" IsChecked="{Binding IsRepeatEnterAlarmEnable}" Margin="2" />-->
						</Grid>
					</GroupBox>
					<!-- Согласно SKDDEV-637 было принято решение скрыть данный функционал -->
					<!--<GroupBox Header="Подтверждение прохода" Margin="5" Padding="5">
						<GroupBox.HeaderTemplate>
							<DataTemplate>
								<TextBlock Text="{Binding}" Foreground="{DynamicResource ForegroundColorLight}"/>
							</DataTemplate>
						</GroupBox.HeaderTemplate>
						<Grid>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="Auto" />
							</Grid.ColumnDefinitions>
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
							</Grid.RowDefinitions>
							<CheckBox Grid.Row="0" Grid.Column="0" IsChecked="{Binding IsRemoteCheck}" Margin="2" />
							<TextBlock Grid.Row="0" Grid.Column="1" Text="Активировать" Foreground="{DynamicResource ForegroundColorLight}" Margin="5 2"/>
							<Grid Grid.Row="1" Grid.Column="1">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="Auto"/>
									<ColumnDefinition Width="200"/>
								</Grid.ColumnDefinitions>
								<Grid.RowDefinitions>
									<RowDefinition Height="Auto"/>
									<RowDefinition Height="Auto"/>
								</Grid.RowDefinitions>

								<TextBlock Grid.Row="0" Grid.Column="0" Text="Время ожидания" HorizontalAlignment="Right" Foreground="{DynamicResource ForegroundColorLight}" VerticalAlignment="Center" Margin="5 2" />
								<extToolkit:IntegerUpDown Grid.Row="0" Grid.Column="1" Value="{Binding RemoteTimeout, UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding IsRemoteCheck}" Margin="2"/>

								<TextBlock Grid.Row="1" Grid.Column="0" Text="Состояние замка по истечению времени" HorizontalAlignment="Right" VerticalAlignment="Center" Foreground="{DynamicResource ForegroundColorLight}" Margin="5 2"/>
								<ComboBox Grid.Row="1" Grid.Column="1" ItemsSource="{Binding RemoteTimeoutDoorStatuses}" SelectedItem="{Binding RemoteTimeoutDoorStatus}" IsEnabled="{Binding IsRemoteCheck}" Margin="2">
									<ComboBox.ItemTemplate>
										<DataTemplate>
											<TextBlock Text="{Binding ., Converter={StaticResource EnumToDescriptionConverter}}" />
										</DataTemplate>
									</ComboBox.ItemTemplate>
								</ComboBox>
							</Grid>
						</Grid>
						
					</GroupBox>-->
				</StackPanel>
			</TabItem>
			<TabItem Header="Датчик двери">
				<StackPanel>
					<GroupBox Margin="5" Padding="5">
						<Grid>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="20" />
								<ColumnDefinition Width="20" />
								<ColumnDefinition Width="*" />
							</Grid.ColumnDefinitions>
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
							</Grid.RowDefinitions>

							<CheckBox Grid.Row="0" Grid.Column="0" IsChecked="{Binding IsSensorEnable}" Margin="2" HorizontalAlignment="Right"/>
							<TextBlock Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="2" Text="Активен датчик контроля двери" HorizontalAlignment="Left" VerticalAlignment="Center" Foreground="{DynamicResource ForegroundColorLight}" Margin="5 2" />

							<CheckBox Grid.Row="1" Grid.Column="1" IsChecked="{Binding IsBreakInAlarmEnable}" IsEnabled="{Binding IsSensorEnable}" Margin="2" HorizontalAlignment="Right"/>
							<TextBlock Grid.Row="1" Grid.Column="2" Text="Тревога по взлому" HorizontalAlignment="Left" VerticalAlignment="Center" Foreground="{DynamicResource ForegroundColorLight}" Margin="5 2" />

							<CheckBox Grid.Row="2" Grid.Column="1" IsChecked="{Binding IsDoorNotClosedAlarmEnable}"  IsEnabled="{Binding IsSensorEnable}" Margin="2" HorizontalAlignment="Right"/>
							<TextBlock Grid.Row="2" Grid.Column="2" Text="Тревога по незакрытию" HorizontalAlignment="Left" VerticalAlignment="Center" Foreground="{DynamicResource ForegroundColorLight}" Margin="5 2" />

							<CheckBox Grid.Row="3" Grid.Column="1" IsChecked="{Binding IsCloseCheckSensorEnable}"  IsEnabled="{Binding IsSensorEnable}" Margin="2" HorizontalAlignment="Right"/>
							<TextBlock Grid.Row="3" Grid.Column="2" Text="Закрывать замок при закрытии двери" HorizontalAlignment="Left" VerticalAlignment="Center" Foreground="{DynamicResource ForegroundColorLight}" Margin="5 2" />

							<Grid Grid.Row="4" Grid.Column="2">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="Auto"/>
									<ColumnDefinition Width="*"/>
								</Grid.ColumnDefinitions>
								<Grid.RowDefinitions>
									<RowDefinition Height="Auto"/>
									<RowDefinition Height="Auto"/>
								</Grid.RowDefinitions>
								<TextBlock Grid.Row="0" Grid.Column="0" Text="Время закрытия, с" HorizontalAlignment="Right" VerticalAlignment="Center" Foreground="{DynamicResource ForegroundColorLight}" Margin="5 2" />
								<extToolkit:IntegerUpDown Grid.Row="0" Grid.Column="1" Value="{Binding CloseTimeout, UpdateSourceTrigger=PropertyChanged}" Minimum="0" Maximum="34464" IsEnabled="{Binding IsDoorNotClosedAlarmEnable}" Margin="2" />

								<TextBlock Grid.Row="1" Grid.Column="0" Text="Альтернативное время закрытия, с" HorizontalAlignment="Left" VerticalAlignment="Center" Foreground="{DynamicResource ForegroundColorLight}" Margin="5 2" />
								<extToolkit:IntegerUpDown Grid.Row="1" Grid.Column="1" Value="{Binding HandicapCloseTimeout, UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding IsDoorNotClosedAlarmEnable}" Margin="2" />
							</Grid>
						</Grid>
					</GroupBox>
				</StackPanel>
			</TabItem>
		</TabControl>

		<TextBlock Grid.Row="1"  Text="Альтернативные время удержания и время закрытия используются с пропусками, для которых задействован режим &quot;Использовать альтернативные параметры временных задержек замка&quot;" TextWrapping="Wrap" Foreground="{DynamicResource ForegroundColorLight}" Width="480" Margin="5" />
		
		<StackPanel Grid.Row="2" Orientation="Horizontal" HorizontalAlignment="Right">
			<Button Content="Считать" Command="{Binding GetDoorConfigurationCommand}" Width="100" Margin="0 4 4 0" />
			<Button Content="Записать" Command="{Binding SetDoorConfigurationCommand}" Width="100" Margin="0 4 0 0" />
		</StackPanel>
	</Grid>
</UserControl>