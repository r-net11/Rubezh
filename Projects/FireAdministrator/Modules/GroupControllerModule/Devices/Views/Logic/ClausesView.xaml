<UserControl x:Class="GKModule.Views.ClausesView"
			 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
			 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
			 xmlns:Controls="clr-namespace:Controls;assembly=Controls"
			 xmlns:Converters="clr-namespace:GKModule.Converters"
			 xmlns:Views="clr-namespace:GKModule.Views">

	<UserControl.Resources>
		<Converters:ClauseConditionConverter x:Key="ClauseConditionConverter" />
		<Converters:ClauseOperationConverter x:Key="ClauseOperationConverter" />
		<Converters:ClauseJounOperationConverter x:Key="ClauseJounOperationConverter" />
		<Converters:ClauseJoinOperatorToColorConverter x:Key="ClauseJoinOperatorToColorConverter" />
	</UserControl.Resources>

	<Grid>
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="Auto" />
			<ColumnDefinition Width="*" />
		</Grid.ColumnDefinitions>
		<Border Grid.Column="0" CornerRadius="2" Background="DarkGray" Margin="2" MouseEnter="Border_MouseEnter" MouseLeave="Border_MouseLeave">
			<Grid>
				<Grid.RowDefinitions>
					<RowDefinition Height="*" />
					<RowDefinition Height="Auto" />
				</Grid.RowDefinitions>
				<Button Grid.Row="0" Width="100"
						Foreground="{DynamicResource ForegroundColorLight}"
						Command="{Binding ChangeJoinOperatorCommand}"
						Background="{Binding JoinOperator, Converter={StaticResource ClauseJoinOperatorToColorConverter}}">
					<Button.Style>
						<Style TargetType="Button">
							<Setter Property="Template">
								<Setter.Value>
									<ControlTemplate TargetType="Button">
										<Border Name="border" 
												Margin="2" 
												Background="{TemplateBinding Background}" 
												BorderBrush="Transparent" 
												BorderThickness="1" 
												CornerRadius="2" 
												Padding="2" 
												ToolTip="{TemplateBinding ToolTip}" 
												ToolTipService.ShowOnDisabled="True">
											<ContentPresenter Margin="2" 
															  HorizontalAlignment="Center" 
															  VerticalAlignment="Center" 
															  Content="{TemplateBinding ContentControl.Content}" />
										</Border>
									</ControlTemplate>
								</Setter.Value>
							</Setter>
						</Style>
					</Button.Style>
					<TextBlock Text="{Binding JoinOperator, Converter={StaticResource ClauseJounOperationConverter}}" FontWeight="Bold" />
				</Button>
				<StackPanel Grid.Row="1" Orientation="Horizontal">
					<ToolBarButton Command="{Binding AddCommand}" ImageSource="Add"  ToolTip="Добавить условие" Height="32" Width="32" />
					<ToolBarButton Command="{Binding AddGroupCommand}" ImageSource="Add"  ToolTip="Добавить группу условий" Height="32" Width="32" />
					<ToolBarButton Command="{Binding RemoveGroupCommand2}" ImageSource="Delete"  ToolTip="Удалить группу условий" Height="32" Width="32" />
				</StackPanel>
			</Grid>
		</Border>
		<StackPanel Grid.Column="1" x:Name="stackPanel">
			<ItemsControl ItemsSource="{Binding Clauses}">
				<ItemsControl.ItemTemplate>
					<DataTemplate>
						<StackPanel Orientation="Horizontal">
							<ToolBarButton ToolTip="Удалить условие"
								Command="{Binding
								RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}, 
								Path=DataContext.RemoveCommand}"
								CommandParameter="{Binding}"
								Height="32" Width="32" Margin="2" Background="DarkGray" ImageSource="RedDeleteCross" />

							<ComboBox ItemsSource="{Binding ClauseConditionTypes}" SelectedItem="{Binding SelectedClauseConditionType}" Width="30" Margin="2">
								<ComboBox.ItemTemplate>
									<DataTemplate>
										<TextBlock Text="{Binding ., Converter={StaticResource ClauseConditionConverter}}" />
									</DataTemplate>
								</ComboBox.ItemTemplate>
							</ComboBox>

							<ComboBox ItemsSource="{Binding ClauseOperationTypes}" SelectedItem="{Binding SelectedClauseOperationType}" Width="180" Margin="2">
								<ComboBox.ItemTemplate>
									<DataTemplate>
										<Controls:IconLabel ImageSource="{Binding ., Converter={StaticResource ClauseOperationTypeToIconConverter}}" 
										Text="{Binding ., Converter={StaticResource ClauseOperationConverter}}" />
									</DataTemplate>
								</ComboBox.ItemTemplate>
							</ComboBox>

							<ComboBox Width="150" Height="30" ItemsSource="{Binding StateTypes}" SelectedItem="{Binding SelectedStateType}" VerticalAlignment="Center" Margin="2">
								<ComboBox.ItemTemplate>
									<DataTemplate>
										<Controls:IconLabel ImageSource="{Binding StateBit, Converter={StaticResource XStateTypeToIconConverter}}"
										Text="{Binding Name}" />
									</DataTemplate>
								</ComboBox.ItemTemplate>
							</ComboBox>

							<TextBlock Visibility="{Binding CanSelectZones, Converter={StaticResource BoolToVisibilityConverter}}" VerticalAlignment="Center" Margin="2">
								<Hyperlink Command="{Binding SelectZonesCommand}" Style="{StaticResource HyperlinkStyle}" IsEnabled="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TextBlock}}, Path=IsEnabled}">
									<TextBlock Margin="2">
										<TextBlock.Style>
											<Style>
												<Setter Property="TextBlock.Text" Value="{Binding PresenrationZones}" />
												<Setter Property="TextBlock.ToolTip">
													<Setter.Value>
														<WrapPanel>
															<TextBlock Text="{Binding PresenrationZones}" TextWrapping="Wrap" />
														</WrapPanel>
													</Setter.Value>
												</Setter>
												<Style.Triggers>
													<DataTrigger Binding="{Binding PresenrationZones}" Value="">
														<Setter Property="TextBlock.Text" Value="Нажмите для выбора зон" />
														<Setter Property="TextBlock.ToolTip" Value="Нажмите для выбора зон" />
													</DataTrigger>
												</Style.Triggers>
											</Style>
										</TextBlock.Style>
									</TextBlock>
								</Hyperlink>
							</TextBlock>

							<TextBlock Visibility="{Binding CanSelectDevices, Converter={StaticResource BoolToVisibilityConverter}}" VerticalAlignment="Center" Margin="2">
								<Hyperlink Command="{Binding SelectDevicesCommand}" Style="{StaticResource HyperlinkStyle}" IsEnabled="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TextBlock}}, Path=IsEnabled}"> 
									<TextBlock Margin="2">
										<TextBlock.Style>
											<Style>
												<Setter Property="TextBlock.Text" Value="{Binding PresenrationDevices}" />
												<Setter Property="TextBlock.ToolTip">
													<Setter.Value>
														<WrapPanel>
															<TextBlock Text="{Binding PresenrationDevices}" TextWrapping="Wrap" />
														</WrapPanel>
													</Setter.Value>
												</Setter>
												<Style.Triggers>
													<DataTrigger Binding="{Binding PresenrationDevices}" Value="">
														<Setter Property="TextBlock.Text" Value="Нажмите для выбора устройств" />
														<Setter Property="TextBlock.ToolTip" Value="Нажмите для выбора устройств" />
													</DataTrigger>
												</Style.Triggers>
											</Style>
										</TextBlock.Style>
									</TextBlock>
								</Hyperlink>
							</TextBlock>

							<TextBlock Visibility="{Binding CanSelectDirections, Converter={StaticResource BoolToVisibilityConverter}}" VerticalAlignment="Center" Margin="2">
								<Hyperlink Command="{Binding SelectDirectionCommand}" Style="{StaticResource HyperlinkStyle}" IsEnabled="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TextBlock}}, Path=IsEnabled}">
									<TextBlock Margin="2">
										<TextBlock.Style>
											<Style>
												<Setter Property="TextBlock.Text" Value="{Binding PresenrationDirections}" />
												<Setter Property="TextBlock.ToolTip">
													<Setter.Value>
														<WrapPanel>
															<TextBlock Text="{Binding PresenrationDirections}" TextWrapping="Wrap" />
														</WrapPanel>
													</Setter.Value>
												</Setter>
												<Style.Triggers>
													<DataTrigger Binding="{Binding PresenrationDirections}" Value="">
														<Setter Property="TextBlock.Text" Value="Нажмите для выбора направлений" />
														<Setter Property="TextBlock.ToolTip" Value="Нажмите для выбора направлений" />
													</DataTrigger>
												</Style.Triggers>
											</Style>
										</TextBlock.Style>
									</TextBlock>
								</Hyperlink>
							</TextBlock>
									
							<TextBlock Visibility="{Binding CanSelectMPTs, Converter={StaticResource BoolToVisibilityConverter}}" VerticalAlignment="Center" Margin="2">
								<Hyperlink Command="{Binding SelectMPTsCommand}" Style="{StaticResource HyperlinkStyle}" IsEnabled="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TextBlock}}, Path=IsEnabled}">
									<TextBlock Margin="2">
										<TextBlock.Style>
											<Style>
												<Setter Property="TextBlock.Text" Value="{Binding PresenrationMPTs}" />
												<Setter Property="TextBlock.ToolTip">
													<Setter.Value>
														<WrapPanel>
															<TextBlock Text="{Binding PresenrationMPTs}" TextWrapping="Wrap" />
														</WrapPanel>
													</Setter.Value>
												</Setter>
												<Style.Triggers>
													<DataTrigger Binding="{Binding PresenrationMPTs}" Value="">
														<Setter Property="TextBlock.Text" Value="Нажмите для выбора МПТ" />
														<Setter Property="TextBlock.ToolTip" Value="Нажмите для выбора МПТ" />
													</DataTrigger>
												</Style.Triggers>
											</Style>
										</TextBlock.Style>
									</TextBlock>
								</Hyperlink>
							</TextBlock>
									
							<TextBlock Visibility="{Binding CanSelectDelays, Converter={StaticResource BoolToVisibilityConverter}}" VerticalAlignment="Center" Margin="2">
								<Hyperlink Command="{Binding SelectDelaysCommand}" Style="{StaticResource HyperlinkStyle}" IsEnabled="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TextBlock}}, Path=IsEnabled}">
									<TextBlock Margin="2">
										<TextBlock.Style>
											<Style>
												<Setter Property="TextBlock.Text" Value="{Binding PresenrationDelays}" />
												<Setter Property="TextBlock.ToolTip">
													<Setter.Value>
														<WrapPanel>
															<TextBlock Text="{Binding PresenrationDelays}" TextWrapping="Wrap" />
														</WrapPanel>
													</Setter.Value>
												</Setter>
												<Style.Triggers>
													<DataTrigger Binding="{Binding PresenrationDelays}" Value="">
														<Setter Property="TextBlock.Text" Value="Нажмите для выбора задержек" />
														<Setter Property="TextBlock.ToolTip" Value="Нажмите для выбора задержек" />
													</DataTrigger>
												</Style.Triggers>
											</Style>
										</TextBlock.Style>
									</TextBlock>
								</Hyperlink>
							</TextBlock>

							<TextBlock Visibility="{Binding CanSelectGuardZones, Converter={StaticResource BoolToVisibilityConverter}}" VerticalAlignment="Center" Margin="2">
								<Hyperlink Command="{Binding SelectGuardZonesCommand}" Style="{StaticResource HyperlinkStyle}" IsEnabled="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TextBlock}}, Path=IsEnabled}">
									<TextBlock Margin="2">
										<TextBlock.Style>
											<Style>
												<Setter Property="TextBlock.Text" Value="{Binding PresenrationGuardZones}" />
												<Setter Property="TextBlock.ToolTip">
													<Setter.Value>
														<WrapPanel>
															<TextBlock Text="{Binding PresenrationGuardZones}" TextWrapping="Wrap" />
														</WrapPanel>
													</Setter.Value>
												</Setter>
												<Style.Triggers>
													<DataTrigger Binding="{Binding PresenrationGuardZones}" Value="">
														<Setter Property="TextBlock.Text" Value="Нажмите для выбора охранных зон" />
														<Setter Property="TextBlock.ToolTip" Value="Нажмите для выбора охранных зон" />
													</DataTrigger>
												</Style.Triggers>
											</Style>
										</TextBlock.Style>
									</TextBlock>
								</Hyperlink>
							</TextBlock>

							<TextBlock Visibility="{Binding CanSelectDoors, Converter={StaticResource BoolToVisibilityConverter}}" VerticalAlignment="Center" Margin="2">
								<Hyperlink Command="{Binding SelectDoorsCommand}" Style="{StaticResource HyperlinkStyle}" IsEnabled="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TextBlock}}, Path=IsEnabled}">
									<TextBlock Margin="2">
										<TextBlock.Style>
											<Style>
												<Setter Property="TextBlock.Text" Value="{Binding PresenrationDoors}" />
												<Setter Property="TextBlock.ToolTip">
													<Setter.Value>
														<WrapPanel>
															<TextBlock Text="{Binding PresenrationDoors}" TextWrapping="Wrap" />
														</WrapPanel>
													</Setter.Value>
												</Setter>
												<Style.Triggers>
													<DataTrigger Binding="{Binding PresenrationDoors}" Value="">
														<Setter Property="TextBlock.Text" Value="Нажмите для выбора точек доступа" />
														<Setter Property="TextBlock.ToolTip" Value="Нажмите для выбора точек доступа" />
													</DataTrigger>
												</Style.Triggers>
											</Style>
										</TextBlock.Style>
									</TextBlock>
								</Hyperlink>
							</TextBlock>
							
							<TextBlock Visibility="{Binding CanSelectPumpStations, Converter={StaticResource BoolToVisibilityConverter}}" VerticalAlignment="Center" Margin="2">
								<Hyperlink Command="{Binding SelectPumpStationsCommand}" Style="{StaticResource HyperlinkStyle}" IsEnabled="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TextBlock}}, Path=IsEnabled}">
									<TextBlock Margin="2">
										<TextBlock.Style>
											<Style>
												<Setter Property="TextBlock.Text" Value="{Binding PresenrationPumpStations}" />
												<Setter Property="TextBlock.ToolTip">
													<Setter.Value>
														<WrapPanel>
															<TextBlock Text="{Binding PresenrationPumpStations}" TextWrapping="Wrap" />
														</WrapPanel>
													</Setter.Value>
												</Setter>
												<Style.Triggers>
													<DataTrigger Binding="{Binding PresenrationPumpStations}" Value="">
														<Setter Property="TextBlock.Text" Value="Нажмите для выбора насосных станций" />
														<Setter Property="TextBlock.ToolTip" Value="Нажмите для выбора насосных станций" />
													</DataTrigger>
												</Style.Triggers>
											</Style>
										</TextBlock.Style>
									</TextBlock>
								</Hyperlink>
							</TextBlock>

						</StackPanel>
					</DataTemplate>
				</ItemsControl.ItemTemplate>
			</ItemsControl>
				
			<ItemsControl ItemsSource="{Binding ClauseGroups}">
				<ItemsControl.ItemTemplate>
					<DataTemplate>
						<Views:ClausesView />
					</DataTemplate>
				</ItemsControl.ItemTemplate>
			</ItemsControl>
		</StackPanel>
	</Grid>
</UserControl>