<UserControl x:Class="GKModule.Views.DevicesView"
			 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
			 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
			 xmlns:Controls="clr-namespace:Controls;assembly=Controls"
			 xmlns:Conv="clr-namespace:Controls.Converters;assembly=Controls"
			 xmlns:Converters="clr-namespace:GKModule.Converters"
			 xmlns:drag="clr-namespace:Infrastructure.Common.Services.DragDrop;assembly=Infrastructure.Common.Windows"
			 xmlns:tree="clr-namespace:Controls.TreeList;assembly=Controls"
			 xmlns:viewModel="clr-namespace:GKModule.ViewModels"
			 xmlns:Views="clr-namespace:GKModule.Views">
	<UserControl.Resources>
		<Converters:DeviceParameterMissmatchTypeToColorConverter3 x:Key="DeviceParameterMissmatchTypeToColorConverter3" />
		<Conv:SwitchConverter x:Key="Tooltip" Else="{x:Null}">
			<Conv:SwitchCase Then="Устройство может быть размещено на плане" When="Multiple" />
			<Conv:SwitchCase Then="Устройство не размещено на плане" When="NotPresent" />
			<Conv:SwitchCase Then="Устройство нельзя размещать на плане" When="Prohibit" />
			<Conv:SwitchCase Then="Устройство уже размещено на плане" When="Single" />
		</Conv:SwitchConverter>
		<ContextMenu x:Key="DeviceContextMenu" >
			<Controls:IconedMenuItem Command="{Binding CopyCommand}" ImageSource="BCopy" Text="Копировать (Ctrl+C)" />
			<Controls:IconedMenuItem Command="{Binding CutCommand}" ImageSource="BCut" Text="Вырезать (Ctrl+Х)" />
			<Controls:IconedMenuItem Command="{Binding PasteCommand}" ImageSource="BPaste" Text="Вставить (Ctrl+V)" />
			<Controls:IconedMenuItem Command="{Binding InsertIntoCommand}" ImageSource="BPaste" Text="Переместить в" />
			<Separator />
			<Controls:IconedMenuItem Command="{Binding CopyLogicCommand}" ImageSource="BCopy" Text="Копировать логику" />
			<Controls:IconedMenuItem Command="{Binding PasteLogicCommand}" ImageSource="BPaste" Text="Вставить логику" />
			<Separator />
			<Controls:IconedMenuItem ImageSource="BPaste" Text="Генерация отражения" Visibility = "{Binding IsEdit,  Converter={StaticResource BoolToVisibilityConverter}}">
				<Controls:IconedMenuItem Text="Пожарные зоны" Command="{Binding GenerateZonesCommand}" />
				<Controls:IconedMenuItem Text="Охранные зоны" Command="{Binding GenerateGuardZonesCommand}" />
				<Controls:IconedMenuItem Text="Исполнительные устройства" Command="{Binding GenerateForPerformersDevicesCommand}" />
				<Controls:IconedMenuItem Text="Извещательные устройства" Command="{Binding GenerateForDetectorDevicesCommand}" />
				<Controls:IconedMenuItem Text="Направления" Command="{Binding GenerateDirectionsCommand}" />
			</Controls:IconedMenuItem>
			<Separator />
			<Controls:IconedMenuItem Command="{Binding AddCommand}" ImageSource="BAdd" Text="Добавить дочернее устройство (Ctrl+N)" />
			<Controls:IconedMenuItem Command="{Binding AddToParentCommand}" ImageSource="BAddChild" Text="Добавить к родительскому устройству (Ctrl+M)" />
			<Controls:IconedMenuItem Command="{Binding RemoveCommand}" ImageSource="BDelete" Text="Удалить (Ctrl+Del)" />
			<Controls:IconedMenuItem Command="{Binding SelectCommand}" ImageSource="BSelect" Text="Выбрать" />
			<Controls:IconedMenuItem Command="{Binding ShowAsListCommand}" ImageSource="BSelect" Text="Показать списком" />
			<Controls:IconedMenuItem Command="{Binding ShowLogicCommand}" ImageSource="BLogic" Text="Настройка логики исполнительного устройства" />
			<Controls:IconedMenuItem Command="{Binding ShowPropertiesCommand}" ImageSource="BSettings" Text="Показать свойства" />
			<Separator Visibility="{Binding Driver.IsPlaceable, Converter={StaticResource BoolToVisibilityConverter}}" />
			<Controls:IconedMenuItem Command="{Binding AllowMultipleVizualizationCommand}" CommandParameter="{StaticResource True}" ImageSource="Eye2" Text="Разрешить множественную визуализацию" />
			<Controls:IconedMenuItem Command="{Binding AllowMultipleVizualizationCommand}" CommandParameter="{StaticResource False}" ImageSource="Eye3" Text="Запретить множественную визуализацию" />
			<Separator />
			<Controls:IconedMenuItem Command="{Binding IgnoreLogicValidationCommand}" CommandParameter="{StaticResource True}" ImageSource="Eye2" Text="Игнорировать отсутствие логики срабатывания" />
			<Controls:IconedMenuItem Command="{Binding IgnoreLogicValidationCommand}" CommandParameter="{StaticResource False}" ImageSource="Eye3" Text="Отображать отсутствие логики срабатывания" />
			<Separator />
			<Controls:IconedMenuItem Command ="{Binding ShowDependencyItemsCommand}" Text="Список зависящих объектов" />
			<Controls:IconedMenuItem ImageSource="BParametersReadWrite" Text="Параметры" IsEnabled="{Binding IsParametersEnabled}">
				<Controls:IconedMenuItem Command="{Binding ReadCommand}" ImageSource="BParametersRead" Text="Считать параметры" />
				<Controls:IconedMenuItem Command="{Binding ReadAllCommand}" ImageSource="BParametersReadAll" Text="Считать параметры дочерних устройств" />
				<Controls:IconedMenuItem Command="{Binding WriteCommand}" ImageSource="BParametersWrite" Text="Записать параметры" />
				<Controls:IconedMenuItem Command="{Binding WriteAllCommand}" ImageSource="BParametersWriteAll" Text="Записать параметры дочерних устройств" />
				<Separator />
				<Controls:IconedMenuItem Command="{Binding CopyParamCommand}" ImageSource="BCopy" Text="Копировать параметры" />
				<Controls:IconedMenuItem Command="{Binding PasteParamCommand}" ImageSource="BPaste" Text="Вставить параметры" />
				<Controls:IconedMenuItem Command="{Binding PasteAllParamCommand}" ImageSource="BPasteAll" Text="Вставить параметры во все дочерние устройства" />
				<Separator />
				<Controls:IconedMenuItem Command="{Binding PasteTemplateCommand}" ImageSource="BBriefcase" Text="Применить шаблон" />
				<Controls:IconedMenuItem Command="{Binding PasteAllTemplateCommand}" ImageSource="BBriefcaseAll" Text="Применить шаблон ко всем дочерним устройствам" />
				<Separator />
				<Controls:IconedMenuItem Command="{Binding SyncFromDeviceToSystemCommand}" ImageSource="BLeft" Text="Копировать параметры из устройства в систему" />
				<Controls:IconedMenuItem Command="{Binding SyncFromAllDeviceToSystemCommand}" ImageSource="BLeftLeft" Text="Копировать параметры из всех дочерних устройств в систему" />
			</Controls:IconedMenuItem>
			<Separator Visibility="{Binding IsPmf, Converter={StaticResource BoolToVisibilityConverter}}" />
			<Controls:IconedMenuItem Command="{Binding PmfUsersCommand}" ImageSource="BUser" Text="Пользователи ПМФ" Visibility="{Binding IsPmf, Converter={StaticResource BoolToVisibilityConverter}}" />
		</ContextMenu>
		<viewModel:DeviceViewModelDeviceComparer x:Key="DeviceViewModelDeviceComparer" />
		<viewModel:DeviceViewModelAddressComparer x:Key="DeviceViewModelAddressComparer" />
		<viewModel:DeviceViewModelZoneComparer x:Key="DeviceViewModelZoneComparer" />
		<viewModel:DeviceViewModelDescriptionComparer x:Key="DeviceViewModelDescriptionComparer" />
		<viewModel:DeviceViewModelProjectAddressComparer x:Key="DeviceViewModelProjectAddressComparer" />
	</UserControl.Resources>

	<Grid>
		<Grid.RowDefinitions>
			<RowDefinition Height="*" MinHeight="200" />
			<RowDefinition Height="Auto" />
			<RowDefinition Height="180" MinHeight="150" MaxHeight="300" />
		</Grid.RowDefinitions>
		<tree:TreeList Grid.Row="0" Focusable="True" SelectedTreeNode="{Binding SelectedDevice}" Source="{Binding RootDevices}" tree:SortBehavior.CanUserSortColumns="False">
			<tree:TreeList.Resources>
				<Style x:Key="{x:Type ComboBox}" BasedOn="{StaticResource {x:Type ComboBox}}" TargetType="ComboBox">
					<Setter Property="MinWidth" Value="0" />
					<Setter Property="MinHeight" Value="0" />
				</Style>
				<Style x:Key="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}" TargetType="TextBox">
					<Setter Property="MinWidth" Value="0" />
					<Setter Property="MinHeight" Value="0" />
				</Style>
			</tree:TreeList.Resources>
			<tree:TreeList.View>
				<GridView>
					<GridViewColumn Width="250" Header="Устройство" tree:SortBehavior.SortComparer="{StaticResource DeviceViewModelDeviceComparer}">
						<GridViewColumn.CellTemplate>
							<DataTemplate>
								<DockPanel ContextMenu="{StaticResource DeviceContextMenu}">
									<drag:DragDropDecorator AllowSimulateDrag="True"
															DragCommand="{Binding CreateDragObjectCommand}"
															DragVisualProvider="{Binding CreateDragVisual}"
															DynamicCursor="True"
															IsSource="True">
										<Image Source="{Binding VisualizationState, Converter={StaticResource VisualizationStateToImageSourceConverter}}"
											ToolTip="{Binding VisualizationState, Converter={StaticResource Tooltip}}" />
									</drag:DragDropDecorator>
									<Controls:EditorPresenter IsEnabled="{Binding CanChangeDriver}">
										<Controls:EditorPresenter.ViewTemplate>
											<ControlTemplate>
												<StackPanel Orientation="Horizontal">
													<Image Width="16" Height="16" Margin="5 0" HorizontalAlignment="Left" Source="{Binding Driver.ImageSource}" />
													<TextBlock Text="{Binding Device.ShortName}"
															Visibility="{Binding IsDisabled, Converter={StaticResource BoolToVisibilityConverter}}"
															Width="200" HorizontalAlignment="Left" VerticalAlignment="Center" Foreground="Gray" />
													<TextBlock Text="{Binding Device.ShortName}"
															Foreground="{Binding PropertiesViewModel.DeviceParameterMissmatchType, Converter={StaticResource DeviceParameterMissmatchTypeToColorConverter3}}"
															Visibility="{Binding IsDisabled, Converter={StaticResource InversedBoolToVisibilityConverter}}"
															Width="200" HorizontalAlignment="Left" VerticalAlignment="Center" />
												</StackPanel>
											</ControlTemplate>
										</Controls:EditorPresenter.ViewTemplate>
										<Controls:EditorPresenter.EditTemplate>
											<ControlTemplate>
												<ComboBox ItemsSource="{Binding AvailvableDrivers, UpdateSourceTrigger=PropertyChanged}"
														SelectedValue="{Binding Driver}"
														SelectedValuePath=""
														HorizontalAlignment="Left"
														Height="19">
													<ComboBox.ItemTemplate>
														<DataTemplate>
															<Controls:IconLabel Foreground="{DynamicResource ForegroundColorDark}"
																				ImageSource="{Binding ImageSource}"
																				Text="{Binding ShortName}" />
														</DataTemplate>
													</ComboBox.ItemTemplate>
												</ComboBox>
											</ControlTemplate>
										</Controls:EditorPresenter.EditTemplate>
									</Controls:EditorPresenter>
								</DockPanel>
							</DataTemplate>
						</GridViewColumn.CellTemplate>
					</GridViewColumn>

					<GridViewColumn Width="100" Header="Адрес" tree:SortBehavior.SortComparer="{StaticResource DeviceViewModelAddressComparer}">
						<GridViewColumn.CellTemplate>
							<DataTemplate>
								<Controls:EditorPresenter>
									<Controls:EditorPresenter.ViewTemplate>
										<ControlTemplate>
											<TextBlock Text="{Binding PresentationAddress}" />
										</ControlTemplate>
									</Controls:EditorPresenter.ViewTemplate>
									<Controls:EditorPresenter.EditTemplate>
										<ControlTemplate>
											<Grid>
												<Views:AddressEditor Address="{Binding Address}" Device="{Binding Device}"
																	 Visibility="{Binding Device.CanEditAddress, Converter={StaticResource BoolToVisibilityConverter}}" />
												<TextBlock Text="{Binding PresentationAddress}"
														Visibility="{Binding Device.CanEditAddress, Converter={StaticResource InversedBoolToVisibilityConverter}}" />
											</Grid>
										</ControlTemplate>
									</Controls:EditorPresenter.EditTemplate>
								</Controls:EditorPresenter>
							</DataTemplate>
						</GridViewColumn.CellTemplate>
					</GridViewColumn>

					<GridViewColumn Width="300" Header="Зона или Логика" tree:SortBehavior.SortComparer="{StaticResource DeviceViewModelZoneComparer}">
						<GridViewColumn.CellTemplate>
							<DataTemplate>
								<Controls:EditorPresenter>
									<Controls:EditorPresenter.ViewTemplate>
										<ControlTemplate>
											<TextBlock Text="{Binding EditingPresentationZone}"
													Visibility="{Binding IsZoneOrLogic, Converter={StaticResource BoolToVisibilityConverter}}"
													IsEnabled="{Binding IgnoreLogicValidation}"
													TextWrapping="NoWrap"
													VerticalAlignment="Top"
													Cursor="Hand"
													LineHeight="15"
													Margin="0 4 0 0"
													MinWidth="100">
												<TextBlock.Style>
													<Style TargetType="TextBlock">
														<Style.Triggers>
															<DataTrigger Binding="{Binding IsLogicGrayed}" Value="True">
																<Setter Property="TextBlock.Foreground" Value="Gray" />
															</DataTrigger>
														</Style.Triggers>
													</Style>
												</TextBlock.Style>
												<TextBlock.InputBindings>
													<MouseBinding Command="{Binding ShowZoneOrLogicCommand}" MouseAction="LeftClick" />
												</TextBlock.InputBindings>
												<TextBlock.ToolTip>
													<WrapPanel>
														<TextBlock Text="{Binding EditingPresentationZone}" TextWrapping="Wrap" />
													</WrapPanel>
												</TextBlock.ToolTip>
											</TextBlock>
										</ControlTemplate>
									</Controls:EditorPresenter.ViewTemplate>
								</Controls:EditorPresenter>
							</DataTemplate>
						</GridViewColumn.CellTemplate>
					</GridViewColumn>

					<GridViewColumn Width="110" Header="Проектный адрес" tree:SortBehavior.SortComparer="{StaticResource DeviceViewModelProjectAddressComparer}">
						<GridViewColumn.CellTemplate>
							<DataTemplate>
								<Controls:EditorPresenter>
									<Controls:EditorPresenter.ViewTemplate>
										<ControlTemplate>
											<TextBlock Text="{Binding ProjectAddress}" />
										</ControlTemplate>
									</Controls:EditorPresenter.ViewTemplate>
									<Controls:EditorPresenter.EditTemplate>
										<ControlTemplate>
											<TextBox Name="projectAddressTextBox" HorizontalAlignment="Stretch" BorderThickness="0" Foreground="{DynamicResource ForegroundColorDark}"
													 Text="{Binding ProjectAddress, UpdateSourceTrigger=PropertyChanged}" />
											<ControlTemplate.Triggers>
												<Trigger SourceName="projectAddressTextBox" Property="IsVisible" Value="True">
													<Setter TargetName="projectAddressTextBox" Property="FocusManager.FocusedElement" Value="{Binding ElementName=projectAddressTextBox}" />
												</Trigger>
											</ControlTemplate.Triggers>
										</ControlTemplate>
									</Controls:EditorPresenter.EditTemplate>
								</Controls:EditorPresenter>
							</DataTemplate>
						</GridViewColumn.CellTemplate>
					</GridViewColumn>

					<GridViewColumn Width="100" Header="Примечание" tree:SortBehavior.SortComparer="{StaticResource DeviceViewModelDescriptionComparer}">
						<GridViewColumn.CellTemplate>
							<DataTemplate>
								<Controls:EditorPresenter>
									<Controls:EditorPresenter.ViewTemplate>
										<ControlTemplate>
											<TextBlock Text="{Binding Description}" />
										</ControlTemplate>
									</Controls:EditorPresenter.ViewTemplate>
									<Controls:EditorPresenter.EditTemplate>
										<ControlTemplate>
											<TextBox Name="descriptionTextBox" HorizontalAlignment="Stretch" BorderThickness="0" Foreground="{DynamicResource ForegroundColorDark}"
													 Text="{Binding Description, UpdateSourceTrigger=PropertyChanged}" />
											<ControlTemplate.Triggers>
												<Trigger SourceName="descriptionTextBox" Property="IsVisible" Value="True">
													<Setter TargetName="descriptionTextBox" Property="FocusManager.FocusedElement" Value="{Binding ElementName=descriptionTextBox}" />
												</Trigger>
											</ControlTemplate.Triggers>
										</ControlTemplate>
									</Controls:EditorPresenter.EditTemplate>
								</Controls:EditorPresenter>
							</DataTemplate>
						</GridViewColumn.CellTemplate>
					</GridViewColumn>
				</GridView>
			</tree:TreeList.View>
		</tree:TreeList>
		<GridSplitter Grid.Row="1" Height="5" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="Transparent" Cursor="SizeNS" />
		<Border Grid.Row="2" Margin="0, 5, 0, 0" Background="{DynamicResource BackgroundBrush}" CornerRadius="5,0,0,5" DataContext="{Binding SelectedDevice}">
			<Grid Visibility="{Binding ., Converter={StaticResource NullToVisibilityConverter}}">
				<Grid.RowDefinitions>
					<RowDefinition Height="*" />
					<RowDefinition Height="Auto" />
				</Grid.RowDefinitions>
				<ScrollViewer Grid.Row="0" VerticalScrollBarVisibility="Auto">
					<StackPanel Margin="5" HorizontalAlignment="Left">
						<StackPanel Orientation="Horizontal">
							<Image Width="16" Margin="2 2 5 2" Source="{Binding Driver.ImageSource}" />
							<TextBlock VerticalAlignment="Center" FontWeight="Bold" Foreground="{DynamicResource ForegroundColorLight}" Text="{Binding Driver.Name}" />
						</StackPanel>
						<StackPanel Orientation="Horizontal">
							<TextBlock Width="120" Margin="2 2 5 2" Foreground="{DynamicResource ForegroundColorLight}" Text="Подключено к " />
							<TextBlock VerticalAlignment="Center" FontWeight="Bold" Foreground="{DynamicResource ForegroundColorLight}">
								<Hyperlink Command="{Binding ShowParentCommand}" Style="{StaticResource HyperlinkStyle}">
									<StackPanel Orientation="Horizontal">
										<Image Width="16" Margin="2 2 5 2" Source="{Binding Device.Parent.Driver.ImageSource}" />
										<TextBlock Margin="2" Text="{Binding Device.Parent.PresentationName}" />
									</StackPanel>
								</Hyperlink>
							</TextBlock>
							<StackPanel.Style>
								<Style>
									<Style.Triggers>
										<DataTrigger Binding="{Binding Device.Parent}" Value="{x:Null}">
											<Setter Property="StackPanel.Visibility" Value="Collapsed" />
										</DataTrigger>
									</Style.Triggers>
								</Style>
							</StackPanel.Style>
						</StackPanel>
						<WrapPanel Orientation="Horizontal" Visibility="{Binding IsZoneOrLogic, Converter={StaticResource BoolToVisibilityConverter}}">
							<TextBlock Width="120" Margin="2 2 5 2" Foreground="{DynamicResource ForegroundColorLight}" Text="Зона или Логика " />
							<TextBlock Margin="2 2 5 2" FontStyle="Italic" Foreground="{DynamicResource ForegroundColorLight}" Text="Зона или Логика не указана">
								<TextBlock.Style>
									<Style>
										<Setter Property="TextBlock.Visibility" Value="Collapsed" />
										<Style.Triggers>
											<DataTrigger Binding="{Binding PresentationZone}" Value="">
												<Setter Property="TextBlock.Visibility" Value="Visible" />
											</DataTrigger>
										</Style.Triggers>
									</Style>
								</TextBlock.Style>
							</TextBlock>
							<TextBlock VerticalAlignment="Center">
								<Hyperlink Command="{Binding ShowZoneCommand}" Style="{StaticResource HyperlinkStyle}">
									<StackPanel Orientation="Horizontal">
										<Image Width="16" Margin="2 2 5 2" Source="/Controls;component/Images/Zone.png" />
										<TextBlock Text="{Binding PresentationZone}" TextWrapping="Wrap" Margin="2" />
									</StackPanel>
								</Hyperlink>
								<TextBlock.Style>
									<Style>
										<Style.Setters>
											<Setter Property="TextBlock.ToolTip">
												<Setter.Value>
													<TextBlock Text="{Binding PresentationZone}" TextWrapping="Wrap" />
												</Setter.Value>
											</Setter>
										</Style.Setters>
										<Style.Triggers>
											<DataTrigger Binding="{Binding PresentationZone}" Value="">
												<Setter Property="TextBlock.Visibility" Value="Collapsed" />
											</DataTrigger>
										</Style.Triggers>
									</Style>
								</TextBlock.Style>
							</TextBlock>
						</WrapPanel>

						<WrapPanel Orientation="Horizontal" Visibility="{Binding IsFireAndGuard, Converter={StaticResource BoolToVisibilityConverter}}">
							<WrapPanel.Style>
								<Style>
									<Setter Property="WrapPanel.Visibility" Value="Collapsed" />
									<Style.Triggers>
										<DataTrigger Binding="{Binding IsFireAndGuard}" Value="">
											<Setter Property="WrapPanel.Visibility" Value="Visible" />
										</DataTrigger>
									</Style.Triggers>
								</Style>
							</WrapPanel.Style>
							<TextBlock Width="120" Margin="2 2 5 2" Foreground="{DynamicResource ForegroundColorLight}" Text="Охранная Зона" />
							<TextBlock Margin="2 2 5 2" FontStyle="Italic" Foreground="{DynamicResource ForegroundColorLight}" Text="Охранная зона не указана">
								<TextBlock.Style>
									<Style>
										<Setter Property="TextBlock.Visibility" Value="Collapsed" />
										<Style.Triggers>
											<DataTrigger Binding="{Binding GuardPresentationZone}" Value="">
												<Setter Property="TextBlock.Visibility" Value="Visible" />
											</DataTrigger>
										</Style.Triggers>
									</Style>
								</TextBlock.Style>
							</TextBlock>
							<TextBlock VerticalAlignment="Center">
								<Hyperlink Command="{Binding ShowGuardZoneCommand}" Style="{StaticResource HyperlinkStyle}">
									<StackPanel Orientation="Horizontal">
										<Image Width="16" Margin="2 2 5 2" Source="/Controls;component/Images/GuardZone.png" />
										<TextBlock Text="{Binding GuardPresentationZone}" TextWrapping="Wrap" Margin="2" />
									</StackPanel>
								</Hyperlink>
								<TextBlock.Style>
									<Style>
										<Style.Setters>
											<Setter Property="TextBlock.ToolTip">
												<Setter.Value>
													<TextBlock Text="{Binding GuardPresentationZone}" TextWrapping="Wrap" />
												</Setter.Value>
											</Setter>
										</Style.Setters>
										<Style.Triggers>
											<DataTrigger Binding="{Binding GuardPresentationZone}" Value="">
												<Setter Property="TextBlock.Visibility" Value="Collapsed" />
											</DataTrigger>
										</Style.Triggers>
									</Style>
								</TextBlock.Style>
							</TextBlock>
						</WrapPanel>

						<StackPanel Orientation="Horizontal" Visibility="{Binding IsInMPT, Converter={StaticResource BoolToVisibilityConverter}}">
							<TextBlock Width="120" Margin="2 2 5 2" Foreground="{DynamicResource ForegroundColorLight}" Text="МПТ " />

							<TextBlock VerticalAlignment="Center">
								<Hyperlink Command="{Binding ShowMPTCommand}" Style="{StaticResource HyperlinkStyle}">
									<StackPanel Orientation="Horizontal">
										<Grid Width="16" Margin="2 2 5 2" Background="{DynamicResource BMPT}" />
										<TextBlock Text="{Binding MPTName}" Margin="2" />
									</StackPanel>
								</Hyperlink>
							</TextBlock>
						</StackPanel>

						<StackPanel Orientation="Horizontal" Visibility="{Binding IsInDoor, Converter={StaticResource BoolToVisibilityConverter}}">
							<TextBlock Width="120" Margin="2 2 5 2" Foreground="{DynamicResource ForegroundColorLight}" Text="Точка доступа " />

							<TextBlock VerticalAlignment="Center">
								<Hyperlink Command="{Binding ShowDoorCommand}" Style="{StaticResource HyperlinkStyle}">
									<StackPanel Orientation="Horizontal">
										<Image Width="16" Margin="2 2 5 2" Source="/Controls;component/Images/Door.png" />
										<TextBlock Text="{Binding DoorName}" Margin="2" />
									</StackPanel>
								</Hyperlink>
							</TextBlock>
						</StackPanel>

						<Grid IsEnabled="{Binding IsParametersEnabled}">
							<Views:PropertiesView DataContext="{Binding PropertiesViewModel}" />
						</Grid>
					</StackPanel>
				</ScrollViewer>
				<Grid Grid.Row="1">
					<StackPanel IsEnabled="{Binding IsParametersEnabled}" HorizontalAlignment="Right" Orientation="Horizontal">
						<ToolBarButton Command="{Binding SyncFromAllDeviceToSystemCommand}" ImageSource="leftLeft" ToolTip="Заменить все значения параметров системы на значения параметров в устройстве" />
						<ToolBarButton Command="{Binding SyncFromDeviceToSystemCommand}" ImageSource="left" ToolTip="Заменить значения параметров системы на значения параметров в устройстве" />
						<ToolBarButton Command="{Binding ReadCommand}" ImageSource="ParametersRead" ToolTip="Считать параметры" />
						<ToolBarButton Command="{Binding WriteCommand}" ImageSource="ParametersWrite" ToolTip="Записать параметры" />
						<ToolBarButton Command="{Binding ReadAllCommand}" ImageSource="ParametersReadAll" ToolTip="Считать параметры дочерних устройств" />
						<ToolBarButton Command="{Binding WriteAllCommand}" ImageSource="ParametersWriteAll" ToolTip="Записать параметры дочерних устройств" />
						<ToolBarButton Command="{Binding CopyParamCommand}" ImageSource="Copy" ToolTip="Копировать параметры" />
						<ToolBarButton Command="{Binding PasteParamCommand}" ImageSource="Paste" ToolTip="Вставить параметры" />
						<ToolBarButton Command="{Binding PasteAllParamCommand}" ImageSource="Paste" ToolTip="Вставить параметры во все дочерние устройства" />
					</StackPanel>
				</Grid>
			</Grid>
		</Border>
	</Grid>
</UserControl>