<UserControl x:Class="AutomationModule.Views.ExplicitValuesView"
			 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
			 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
			 xmlns:automation="clr-namespace:RubezhAPI.Automation;assembly=RubezhAPI"
			 xmlns:extToolkit="http://schemas.microsoft.com/winfx/2006/xaml/presentation/toolkit/extended"
			 xmlns:xc="clr-namespace:Xceed.Wpf.Toolkit;assembly=Xceed.Wpf.Toolkit">
	<Grid>
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto" />
			<RowDefinition Height="*" />
		</Grid.RowDefinitions>

		<StackPanel Orientation="Vertical" Grid.Row="0" HorizontalAlignment="Stretch">
			<StackPanel Visibility="{Binding IsList, Converter={StaticResource InversedBoolToVisibilityConverter}}">
				<StackPanel Orientation="Horizontal" Margin="2" Visibility="{Binding Path=ExplicitType, Converter={StaticResource EnumToVisibilityConverter}, ConverterParameter={x:Static automation:ExplicitType.Integer}}" HorizontalAlignment="Right" Height="28">
					<TextBlock Text="Значение" Style="{DynamicResource TextBlockDetailsStyle}" />
					<extToolkit:IntegerUpDown Width="200" Value="{Binding ExplicitValue.IntValue, UpdateSourceTrigger=PropertyChanged}" Margin="2" />
				</StackPanel>

				<StackPanel Orientation="Horizontal" Margin="2" Visibility="{Binding Path=ExplicitType, Converter={StaticResource EnumToVisibilityConverter}, ConverterParameter={x:Static automation:ExplicitType.Float}}" HorizontalAlignment="Right" Height="28">
					<TextBlock Text="Значение" Style="{DynamicResource TextBlockDetailsStyle}" />
					<TextBox Width="200" Text="{Binding ExplicitValue.FloatValue, UpdateSourceTrigger=PropertyChanged}" Margin="2" />
				</StackPanel>

				<StackPanel Orientation="Horizontal" Margin="2" Visibility="{Binding Path=ExplicitType, Converter={StaticResource EnumToVisibilityConverter}, ConverterParameter={x:Static automation:ExplicitType.Boolean}}" HorizontalAlignment="Right" Height="28">
					<TextBlock Text="Значение" HorizontalAlignment="Left" Style="{DynamicResource TextBlockDetailsStyle}" />
					<CheckBox IsChecked="{Binding ExplicitValue.BoolValue, UpdateSourceTrigger=PropertyChanged}" Width="202" Margin="2,7,0,0" />
				</StackPanel>

				<StackPanel Orientation="Horizontal" Margin="2" Visibility="{Binding Path=ExplicitType, Converter={StaticResource EnumToVisibilityConverter}, ConverterParameter={x:Static automation:ExplicitType.String}}" HorizontalAlignment="Right" Height="28">
					<TextBlock Text="Значение" Style="{DynamicResource TextBlockDetailsStyle}" />
					<DockPanel Width="200" Margin="2">
						<TextBox Width="182" Text="{Binding ExplicitValue.StringValue, UpdateSourceTrigger=PropertyChanged}" VerticalContentAlignment="Center" />
						<Button Command="{Binding EditStringCommand}"
							Content="..."
							FontSize="20"
							Foreground="{DynamicResource ForegroundColorLight}"
							Width="20" Height="25" Margin="-5,0,0,0">
							<Button.Style>
								<Style TargetType="Button">
									<Setter Property="Template">
										<Setter.Value>
											<ControlTemplate TargetType="Button">
												<Border Name="border" Background="Orange" BorderThickness="0" CornerRadius="0,3,3,0">
													<ContentPresenter x:Name="contentPresenter"
																  Margin="{TemplateBinding Padding}"
																  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
																  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
																  Content="{TemplateBinding Content}"
																  ContentTemplate="{TemplateBinding ContentTemplate}" />
												</Border>
												<ControlTemplate.Triggers>
													<Trigger Property="UIElement.IsMouseOver" Value="True">
														<Setter TargetName="border" Property="Border.Background" Value="{DynamicResource HighlightedBackgoundBrush}" />
														<Setter TargetName="border" Property="Border.BorderBrush" Value="{DynamicResource PressedBackgroundBrush}" />
													</Trigger>
												</ControlTemplate.Triggers>
											</ControlTemplate>
										</Setter.Value>
									</Setter>
								</Style>
							</Button.Style>
						</Button>
					</DockPanel>
				</StackPanel>

				<StackPanel Visibility="{Binding Path=ExplicitType, Converter={StaticResource EnumToVisibilityConverter}, ConverterParameter={x:Static automation:ExplicitType.DateTime}}"
							HorizontalAlignment="Center"
							Orientation="Horizontal"
							Margin="2">
					
					<TextBlock Text="Значение" Style="{DynamicResource TextBlockDetailsStyle}" />
					
					<StackPanel Margin="2" HorizontalAlignment="Center" Orientation="Horizontal">
						<DatePicker SelectedDate="{Binding ExplicitValue.DateTimeValue}"
								DisplayDate="{Binding ExplicitValue.DateTimeValue}"
								Height="26"
								Padding="0"
								Margin="0 0 5 0" />
						<TimePicker TimeSpan="{Binding ExplicitValue.TimeValue}" Height="30" />
					</StackPanel>
					
				</StackPanel>
				<StackPanel Orientation="Horizontal" Margin="2" Visibility="{Binding Path=ExplicitType, Converter={StaticResource EnumToVisibilityConverter},
						ConverterParameter={x:Static automation:ExplicitType.Enum}}" HorizontalAlignment="Right" Height="28">
					<TextBlock Text="Значение" Style="{DynamicResource TextBlockDetailsStyle}" />
					<ComboBox ItemsSource="{Binding ExplicitValue.StateTypeValues}" SelectedItem="{Binding ExplicitValue.StateTypeValue}" Width="200" Margin="2" Visibility="{Binding EnumType, Converter={StaticResource EnumToVisibilityConverter}, ConverterParameter={x:Static automation:EnumType.StateType}}">
						<ComboBox.ItemTemplate>
							<DataTemplate>
								<TextBlock Text="{Binding ., Converter={StaticResource EnumToDescriptionConverter}}" />
							</DataTemplate>
						</ComboBox.ItemTemplate>
					</ComboBox>
					<ComboBox ItemsSource="{Binding ExplicitValue.DriverTypeValues}" SelectedItem="{Binding ExplicitValue.DriverTypeValue}" Width="200" Margin="2" Visibility="{Binding EnumType, Converter={StaticResource EnumToVisibilityConverter}, ConverterParameter={x:Static automation:EnumType.DriverType}}">
						<ComboBox.ItemTemplate>
							<DataTemplate>
								<TextBlock Text="{Binding ., Converter={StaticResource EnumToDescriptionConverter}}" />
							</DataTemplate>
						</ComboBox.ItemTemplate>
					</ComboBox>
					<ComboBox ItemsSource="{Binding ExplicitValue.PermissionTypeValues}" SelectedItem="{Binding ExplicitValue.PermissionTypeValue, UpdateSourceTrigger=PropertyChanged}"
					Visibility="{Binding EnumType, Converter={StaticResource EnumToVisibilityConverter}, ConverterParameter={x:Static automation:EnumType.PermissionType}}" Width="200">
						<ComboBox.ItemTemplate>
							<DataTemplate>
								<TextBlock Text="{Binding ., Converter={StaticResource EnumToDescriptionConverter}}" />
							</DataTemplate>
						</ComboBox.ItemTemplate>
					</ComboBox>
					<ComboBox ItemsSource="{Binding ExplicitValue.JournalEventNameTypeValues}" SelectedItem="{Binding ExplicitValue.JournalEventNameTypeValue, UpdateSourceTrigger=PropertyChanged}"
					Visibility="{Binding EnumType, Converter={StaticResource EnumToVisibilityConverter}, ConverterParameter={x:Static automation:EnumType.JournalEventNameType}}" Width="200">
						<ComboBox.ItemTemplate>
							<DataTemplate>
								<TextBlock Text="{Binding ., Converter={StaticResource EnumToDescriptionConverter}}" />
							</DataTemplate>
						</ComboBox.ItemTemplate>
					</ComboBox>
					<ComboBox ItemsSource="{Binding ExplicitValue.JournalEventDescriptionTypeValues}" SelectedItem="{Binding ExplicitValue.JournalEventDescriptionTypeValue, UpdateSourceTrigger=PropertyChanged}"
					Visibility="{Binding EnumType, Converter={StaticResource EnumToVisibilityConverter}, ConverterParameter={x:Static automation:EnumType.JournalEventDescriptionType}}" Width="200">
						<ComboBox.ItemTemplate>
							<DataTemplate>
								<TextBlock Text="{Binding ., Converter={StaticResource EnumToDescriptionConverter}}" />
							</DataTemplate>
						</ComboBox.ItemTemplate>
					</ComboBox>
					<ComboBox ItemsSource="{Binding ExplicitValue.JournalObjectTypeValues}" SelectedItem="{Binding ExplicitValue.JournalObjectTypeValue, UpdateSourceTrigger=PropertyChanged}"
					Visibility="{Binding EnumType, Converter={StaticResource EnumToVisibilityConverter}, ConverterParameter={x:Static automation:EnumType.JournalObjectType}}" Width="200">
						<ComboBox.ItemTemplate>
							<DataTemplate>
								<TextBlock Text="{Binding ., Converter={StaticResource EnumToDescriptionConverter}}" />
							</DataTemplate>
						</ComboBox.ItemTemplate>
					</ComboBox>
					<xc:ColorPicker SelectedColor="{Binding ExplicitValue.ColorValue, UpdateSourceTrigger=PropertyChanged}" Width="200"
						Visibility="{Binding EnumType, Converter={StaticResource EnumToVisibilityConverter}, ConverterParameter={x:Static automation:EnumType.ColorType}}"/>
				</StackPanel>

				<StackPanel Orientation="Horizontal" Margin="2" Visibility="{Binding Path=ExplicitType, Converter={StaticResource EnumToVisibilityConverter}, ConverterParameter={x:Static automation:ExplicitType.Object}}" HorizontalAlignment="Right" Height="28">
					<TextBlock Margin="0,7,0,0"  HorizontalAlignment="Right" VerticalAlignment="Top">
					<Hyperlink Command="{Binding ChangeCommand}" Style="{StaticResource HyperlinkStyle}">
						<TextBlock Text="{Binding ExplicitValue.PresentationName}" Visibility="{Binding ExplicitValue.IsEmpty, Converter={StaticResource InversedBoolToVisibilityConverter}}"/>
						<TextBlock Text="Нажмите для выбора объекта">
							<TextBlock.Style>
								<Style>
									<Setter Property="TextBlock.Visibility" Value="Collapsed" />
									<Style.Triggers>
										<DataTrigger Binding="{Binding ExplicitValue.IsEmpty}" Value="True">
											<Setter Property="TextBlock.Visibility" Value="Visible" />
										</DataTrigger>
									</Style.Triggers>
								</Style>
							</TextBlock.Style>
						</TextBlock>
					</Hyperlink>
				</TextBlock>
				</StackPanel>
			</StackPanel>
		</StackPanel>
		<Grid Grid.Row="1" Visibility="{Binding IsList, Converter={StaticResource BoolToVisibilityConverter}}">
			<Grid.RowDefinitions>
				<RowDefinition Height="Auto"/>
				<RowDefinition />
			</Grid.RowDefinitions>
			<ToolBarButton Grid.Row="0" HorizontalAlignment="Left" Command="{Binding EditListCommand}" ImageSource="Edit" ToolTip="Редактировать список" Height="32" Width="32" Visibility="{Binding IsSimpleType, Converter={StaticResource InversedBoolToVisibilityConverter}}" />
			<ToolBarButton Grid.Row="0" HorizontalAlignment="Left" Command="{Binding AddCommand}" ImageSource="Add" ToolTip="Добавить элемент" Height="32" Width="32" Visibility="{Binding IsSimpleType, Converter={StaticResource BoolToVisibilityConverter}}" />
			<ScrollViewer Grid.Row="1" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
				<ItemsControl ItemsSource="{Binding ExplicitValues}">
					<ItemsControl.ItemTemplate>
						<DataTemplate>
							<Grid>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="Auto" />
									<ColumnDefinition Width="*" />
								</Grid.ColumnDefinitions>
								<ToolBarButton Grid.Column="0" ToolTip="Удалить объект" ImageSource="DeleteCross" Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}, Path=DataContext.RemoveCommand}" CommandParameter="{Binding}" Height="28" Width="28" Background="DarkGray" />
								<TextBlock Grid.Column="1" Margin="0,7,0,0"  HorizontalAlignment="Right" VerticalAlignment="Top"
									Visibility="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}, Path=DataContext.ExplicitType, Converter={StaticResource EnumToVisibilityConverter}, ConverterParameter={x:Static automation:ExplicitType.Object}}">
									<Hyperlink  Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}, Path=DataContext.ChangeCommand}" CommandParameter="{Binding}" Style="{StaticResource HyperlinkStyle}">
										<TextBlock Text="{Binding PresentationName}" Visibility="{Binding IsEmpty, Converter={StaticResource InversedBoolToVisibilityConverter}}"/>
										<TextBlock Text="Нажмите для выбора объекта">
											<TextBlock.Style>
												<Style>
													<Setter Property="TextBlock.Visibility" Value="Collapsed" />
													<Style.Triggers>
														<DataTrigger Binding="{Binding IsEmpty}" Value="True">
															<Setter Property="TextBlock.Visibility" Value="Visible" />
														</DataTrigger>
													</Style.Triggers>
												</Style>
											</TextBlock.Style>
										</TextBlock>
									</Hyperlink>
								</TextBlock>
								<CheckBox Grid.Column="1" IsChecked="{Binding BoolValue}" Margin="0,7,0,0"  HorizontalAlignment="Right" VerticalAlignment="Top"
									Visibility="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}, Path=DataContext.ExplicitType, Converter={StaticResource EnumToVisibilityConverter}, ConverterParameter={x:Static automation:ExplicitType.Boolean}}"/>
								<StackPanel Grid.Column="1" Visibility="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}, Path=DataContext.ExplicitType, Converter={StaticResource EnumToVisibilityConverter}, ConverterParameter={x:Static automation:ExplicitType.DateTime}}"
											Width="200" Margin="2" HorizontalAlignment="Right">
									<DatePicker SelectedDate="{Binding DateTimeValue}" DisplayDate="{Binding DateTimeValue}" />
									<TimePicker TimeSpan="{Binding DateTimeValue}" />
								</StackPanel>
								
								<extToolkit:IntegerUpDown Grid.Column="1" Width="200" Value="{Binding IntValue, UpdateSourceTrigger=PropertyChanged}" Margin="2" HorizontalAlignment="Right" 
									Visibility="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}, Path=DataContext.ExplicitType, Converter={StaticResource EnumToVisibilityConverter}, ConverterParameter={x:Static automation:ExplicitType.Integer}}" />
								<TextBox Grid.Column="1"  Text="{Binding StringValue, UpdateSourceTrigger=PropertyChanged}" Width="200" Margin="2" HorizontalAlignment="Right" VerticalContentAlignment="Center"
									Visibility="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}, Path=DataContext.ExplicitType, Converter={StaticResource EnumToVisibilityConverter}, ConverterParameter={x:Static automation:ExplicitType.String}}"/>
								<StackPanel Grid.Column="1" Visibility="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}, Path=DataContext.ExplicitType, Converter={StaticResource EnumToVisibilityConverter}, ConverterParameter={x:Static automation:ExplicitType.Enum}}" >
									<ComboBox ItemsSource="{Binding StateTypeValues}" SelectedItem="{Binding StateTypeValue}" Width="200" Margin="2" HorizontalAlignment="Right"
										Visibility="{Binding Path=DataContext.EnumType, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}, Converter={StaticResource EnumToVisibilityConverter}, ConverterParameter={x:Static automation:EnumType.StateType}}">
										<ComboBox.ItemTemplate>
											<DataTemplate>
												<TextBlock Text="{Binding ., Converter={StaticResource EnumToDescriptionConverter}}" />
											</DataTemplate>
										</ComboBox.ItemTemplate>
									</ComboBox>
									<ComboBox ItemsSource="{Binding DriverTypeValues}" SelectedItem="{Binding DriverTypeValue}" Width="200" Margin="2" HorizontalAlignment="Right"
										Visibility="{Binding Path=DataContext.EnumType, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}, Converter={StaticResource EnumToVisibilityConverter}, ConverterParameter={x:Static automation:EnumType.DriverType}}">
										<ComboBox.ItemTemplate>
											<DataTemplate>
												<TextBlock Text="{Binding ., Converter={StaticResource EnumToDescriptionConverter}}" />
											</DataTemplate>
										</ComboBox.ItemTemplate>
									</ComboBox>
									<ComboBox ItemsSource="{Binding PermissionTypeValues}" SelectedItem="{Binding ExplicitValue.PermissionTypeValue, UpdateSourceTrigger=PropertyChanged}"
										Visibility="{Binding Path=DataContext.EnumType, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}, Converter={StaticResource EnumToVisibilityConverter}, ConverterParameter={x:Static automation:EnumType.PermissionType}}" Width="200" Margin="2" HorizontalAlignment="Right">
										<ComboBox.ItemTemplate>
											<DataTemplate>
												<TextBlock Text="{Binding ., Converter={StaticResource EnumToDescriptionConverter}}" />
											</DataTemplate>
										</ComboBox.ItemTemplate>
									</ComboBox>
									<ComboBox ItemsSource="{Binding JournalEventNameTypeValues}" SelectedItem="{Binding ExplicitValue.JournalEventNameTypeValue, UpdateSourceTrigger=PropertyChanged}"
										Visibility="{Binding Path=DataContext.EnumType, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}, Converter={StaticResource EnumToVisibilityConverter}, ConverterParameter={x:Static automation:EnumType.JournalEventNameType}}" Width="200" Margin="2" HorizontalAlignment="Right">
										<ComboBox.ItemTemplate>
											<DataTemplate>
												<TextBlock Text="{Binding ., Converter={StaticResource EnumToDescriptionConverter}}" />
											</DataTemplate>
										</ComboBox.ItemTemplate>
									</ComboBox>
									<ComboBox ItemsSource="{Binding JournalEventDescriptionTypeValues}" SelectedItem="{Binding ExplicitValue.JournalEventDescriptionTypeValue, UpdateSourceTrigger=PropertyChanged}"
										Visibility="{Binding Path=DataContext.EnumType, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}, Converter={StaticResource EnumToVisibilityConverter}, ConverterParameter={x:Static automation:EnumType.JournalEventDescriptionType}}" Width="200" Margin="2" HorizontalAlignment="Right">
										<ComboBox.ItemTemplate>
											<DataTemplate>
												<TextBlock Text="{Binding ., Converter={StaticResource EnumToDescriptionConverter}}" />
											</DataTemplate>
										</ComboBox.ItemTemplate>
									</ComboBox>
									<ComboBox ItemsSource="{Binding JournalObjectTypeValues}" SelectedItem="{Binding ExplicitValue.JournalObjectTypeValue, UpdateSourceTrigger=PropertyChanged}"
										Visibility="{Binding Path=DataContext.EnumType, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}, Converter={StaticResource EnumToVisibilityConverter}, ConverterParameter={x:Static automation:EnumType.JournalObjectType}}" Width="200" Margin="2" HorizontalAlignment="Right">
										<ComboBox.ItemTemplate>
											<DataTemplate>
												<TextBlock Text="{Binding ., Converter={StaticResource EnumToDescriptionConverter}}" />
											</DataTemplate>
										</ComboBox.ItemTemplate>
									</ComboBox>
									<xc:ColorPicker SelectedColor="{Binding ColorValue, UpdateSourceTrigger=PropertyChanged}" Width="200" Margin="2" HorizontalAlignment="Right"
										Visibility="{Binding Path=DataContext.EnumType, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}, Converter={StaticResource EnumToVisibilityConverter}, ConverterParameter={x:Static automation:EnumType.ColorType}}"/>
								</StackPanel>
							</Grid>
						</DataTemplate>
					</ItemsControl.ItemTemplate>
				</ItemsControl>
			</ScrollViewer>
		</Grid>
	</Grid>
</UserControl>