<UserControl x:Class="AutomationModule.Views.ExplicitValuesView"
			 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
			 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
			 xmlns:automation="clr-namespace:StrazhAPI.Automation;assembly=StrazhAPI"
			 xmlns:extToolkit="http://schemas.microsoft.com/winfx/2006/xaml/presentation/toolkit/extended"
			 xmlns:xc="clr-namespace:Xceed.Wpf.Toolkit;assembly=Xceed.Wpf.Toolkit">
	<Grid>
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto" />
		</Grid.RowDefinitions>

		<StackPanel Orientation="Vertical" Grid.Row="0" HorizontalAlignment="Stretch">
			<StackPanel>
				<StackPanel Orientation="Horizontal" Margin="2" Visibility="{Binding Path=ExplicitType, Converter={StaticResource EnumToVisibilityConverter}, ConverterParameter={x:Static automation:ExplicitType.Integer}}" HorizontalAlignment="Right" Height="28">
					<Label Content="Значение" />
					<extToolkit:IntegerUpDown Width="200" Value="{Binding ExplicitValue.IntValue, UpdateSourceTrigger=PropertyChanged}" Margin="2" />
				</StackPanel>

				<StackPanel Orientation="Horizontal" Margin="2" Visibility="{Binding Path=ExplicitType, Converter={StaticResource EnumToVisibilityConverter}, ConverterParameter={x:Static automation:ExplicitType.Boolean}}" HorizontalAlignment="Right" Height="28">
					<Label Content="Значение" HorizontalAlignment="Left" />
					<CheckBox IsChecked="{Binding ExplicitValue.BoolValue, UpdateSourceTrigger=PropertyChanged}" Width="202" Margin="2,7,0,0" />
				</StackPanel>

				<StackPanel Orientation="Horizontal" Margin="2" Visibility="{Binding Path=ExplicitType, Converter={StaticResource EnumToVisibilityConverter}, ConverterParameter={x:Static automation:ExplicitType.String}}" HorizontalAlignment="Right" Height="28">
					<Label Content="Значение" />
					<TextBox Text="{Binding ExplicitValue.StringValue, UpdateSourceTrigger=PropertyChanged}" VerticalContentAlignment="Center" Width="200" Margin="2" />
				</StackPanel>

				<StackPanel Orientation="Horizontal" Margin="2" Visibility="{Binding Path=ExplicitType, Converter={StaticResource EnumToVisibilityConverter}, ConverterParameter={x:Static automation:ExplicitType.DateTime}}" HorizontalAlignment="Right" Height="28">
					<Label Content="Значение" />
					<extToolkit:DateTimePicker Value = "{Binding ExplicitValue.DateTimeValue, UpdateSourceTrigger=PropertyChanged}" Width="200" Margin="2" />
				</StackPanel>
				<StackPanel Orientation="Horizontal" Margin="2" Visibility="{Binding Path=ExplicitType, Converter={StaticResource EnumToVisibilityConverter}, ConverterParameter={x:Static automation:ExplicitType.Time}}" HorizontalAlignment="Right" Height="28">
					<Label Content="Значение" />
					<xc:TimeSpanUpDown Value = "{Binding ExplicitValue.TimeSpanValue, UpdateSourceTrigger=PropertyChanged}" Width="200" Margin="2" />
				</StackPanel>

				<StackPanel Orientation="Horizontal" Margin="2" Visibility="{Binding Path=ExplicitType, Converter={StaticResource EnumToVisibilityConverter},
						ConverterParameter={x:Static automation:ExplicitType.Enum}}" HorizontalAlignment="Right" Height="28">
					<Label Content="Значение" />
					<ComboBox ItemsSource="{Binding ExplicitValue.StateTypeValues}" SelectedItem="{Binding ExplicitValue.StateTypeValue}" Width="200" Margin="2" Visibility="{Binding Path=EnumType, Converter={StaticResource EnumToVisibilityConverter}, ConverterParameter={x:Static automation:EnumType.StateType}}">
						<ComboBox.ItemTemplate>
							<DataTemplate>
								<TextBlock Text="{Binding ., Converter={StaticResource EnumToDescriptionConverter}}" />
							</DataTemplate>
						</ComboBox.ItemTemplate>
					</ComboBox>
					<ComboBox ItemsSource="{Binding ExplicitValue.DriverTypeValues}" SelectedItem="{Binding ExplicitValue.DriverTypeValue}" Width="200" Margin="2" Visibility="{Binding Path=EnumType, Converter={StaticResource EnumToVisibilityConverter}, ConverterParameter={x:Static automation:EnumType.DriverType}}">
						<ComboBox.ItemTemplate>
							<DataTemplate>
								<TextBlock Text="{Binding ., Converter={StaticResource EnumToDescriptionConverter}}" />
							</DataTemplate>
						</ComboBox.ItemTemplate>
					</ComboBox>
					<ComboBox ItemsSource="{Binding ExplicitValue.PermissionTypeValues}" SelectedItem="{Binding ExplicitValue.PermissionTypeValue, UpdateSourceTrigger=PropertyChanged}"
					Visibility="{Binding Path=EnumType, Converter={StaticResource EnumToVisibilityConverter}, ConverterParameter={x:Static automation:EnumType.PermissionType}}" Width="200">
						<ComboBox.ItemTemplate>
							<DataTemplate>
								<TextBlock Text="{Binding ., Converter={StaticResource EnumToDescriptionConverter}}" />
							</DataTemplate>
						</ComboBox.ItemTemplate>
					</ComboBox>
					<ComboBox ItemsSource="{Binding ExplicitValue.JournalEventNameTypeValues}" SelectedItem="{Binding ExplicitValue.JournalEventNameTypeValue, UpdateSourceTrigger=PropertyChanged}"
					Visibility="{Binding Path=EnumType, Converter={StaticResource EnumToVisibilityConverter}, ConverterParameter={x:Static automation:EnumType.JournalEventNameType}}" Width="200">
						<ComboBox.ItemTemplate>
							<DataTemplate>
								<TextBlock Text="{Binding ., Converter={StaticResource EnumToDescriptionConverter}}" />
							</DataTemplate>
						</ComboBox.ItemTemplate>
					</ComboBox>
					<ComboBox ItemsSource="{Binding ExplicitValue.JournalEventDescriptionTypeValues}" SelectedItem="{Binding ExplicitValue.JournalEventDescriptionTypeValue, UpdateSourceTrigger=PropertyChanged}"
					Visibility="{Binding Path=EnumType, Converter={StaticResource EnumToVisibilityConverter}, ConverterParameter={x:Static automation:EnumType.JournalEventDescriptionType}}" Width="200">
						<ComboBox.ItemTemplate>
							<DataTemplate>
								<TextBlock Text="{Binding ., Converter={StaticResource EnumToDescriptionConverter}}" />
							</DataTemplate>
						</ComboBox.ItemTemplate>
					</ComboBox>
					<ComboBox ItemsSource="{Binding ExplicitValue.JournalObjectTypeValues}" SelectedItem="{Binding ExplicitValue.JournalObjectTypeValue, UpdateSourceTrigger=PropertyChanged}"
					Visibility="{Binding Path=EnumType, Converter={StaticResource EnumToVisibilityConverter}, ConverterParameter={x:Static automation:EnumType.JournalObjectType}}" Width="200">
						<ComboBox.ItemTemplate>
							<DataTemplate>
								<TextBlock Text="{Binding ., Converter={StaticResource EnumToDescriptionConverter}}" />
							</DataTemplate>
						</ComboBox.ItemTemplate>
					</ComboBox>
					<xc:ColorPicker SelectedColor="{Binding ExplicitValue.ColorValue, UpdateSourceTrigger=PropertyChanged}" Width="200"
						Visibility="{Binding Path=EnumType, Converter={StaticResource EnumToVisibilityConverter}, ConverterParameter={x:Static automation:EnumType.ColorType}}"/>
					<ComboBox ItemsSource="{Binding ExplicitValue.CardTypeValues}" SelectedItem="{Binding ExplicitValue.CardTypeValue, UpdateSourceTrigger=PropertyChanged}"
					Visibility="{Binding Path=EnumType, Converter={StaticResource EnumToVisibilityConverter}, ConverterParameter={x:Static automation:EnumType.CardType}}" Width="200">
						<ComboBox.ItemTemplate>
							<DataTemplate>
								<TextBlock Text="{Binding ., Converter={StaticResource EnumToDescriptionConverter}}" />
							</DataTemplate>
						</ComboBox.ItemTemplate>
					</ComboBox>
					<FeaturedComboBox ItemsSource="{Binding ExplicitValue.AccessStateValues}" SelectedItem="{Binding ExplicitValue.AccessStateValue, UpdateSourceTrigger=PropertyChanged}"
						CanSelectNullItem="True" NullValueText="NULL"
						Visibility="{Binding Path=EnumType, Converter={StaticResource EnumToVisibilityConverter}, ConverterParameter={x:Static automation:EnumType.AccessState}}" Width="200">
						<FeaturedComboBox.ItemTemplate>
							<DataTemplate>
								<TextBlock Text="{Binding ., Converter={StaticResource EnumToDescriptionConverter}}" />
							</DataTemplate>
						</FeaturedComboBox.ItemTemplate>
					</FeaturedComboBox>
					<FeaturedComboBox ItemsSource="{Binding ExplicitValue.DoorStatusValues}" SelectedItem="{Binding ExplicitValue.DoorStatusValue, UpdateSourceTrigger=PropertyChanged}"
						CanSelectNullItem="True" NullValueText="NULL"
						Visibility="{Binding Path=EnumType, Converter={StaticResource EnumToVisibilityConverter}, ConverterParameter={x:Static automation:EnumType.DoorStatus}}" Width="200">
						<FeaturedComboBox.ItemTemplate>
							<DataTemplate>
								<TextBlock Text="{Binding ., Converter={StaticResource EnumToDescriptionConverter}}" />
							</DataTemplate>
						</FeaturedComboBox.ItemTemplate>
					</FeaturedComboBox>
					<FeaturedComboBox ItemsSource="{Binding ExplicitValue.BreakInStatusValues}" SelectedItem="{Binding ExplicitValue.BreakInStatusValue, UpdateSourceTrigger=PropertyChanged}"
						CanSelectNullItem="True" NullValueText="NULL"
						Visibility="{Binding Path=EnumType, Converter={StaticResource EnumToVisibilityConverter}, ConverterParameter={x:Static automation:EnumType.BreakInStatus}}" Width="200">
						<FeaturedComboBox.ItemTemplate>
							<DataTemplate>
								<TextBlock Text="{Binding ., Converter={StaticResource EnumToDescriptionConverter}}" />
							</DataTemplate>
						</FeaturedComboBox.ItemTemplate>
					</FeaturedComboBox>
					<FeaturedComboBox ItemsSource="{Binding ExplicitValue.ConnectionStatusValues}" SelectedItem="{Binding ExplicitValue.ConnectionStatusValue, UpdateSourceTrigger=PropertyChanged}"
						CanSelectNullItem="True" NullValueText="NULL"
						Visibility="{Binding Path=EnumType, Converter={StaticResource EnumToVisibilityConverter}, ConverterParameter={x:Static automation:EnumType.ConnectionStatus}}" Width="200">
						<FeaturedComboBox.ItemTemplate>
							<DataTemplate>
								<TextBlock Text="{Binding ., Converter={StaticResource EnumToDescriptionConverter}}" />
							</DataTemplate>
						</FeaturedComboBox.ItemTemplate>
					</FeaturedComboBox>
				</StackPanel>

				<StackPanel Orientation="Horizontal" Margin="2" Visibility="{Binding Path=ExplicitType, Converter={StaticResource EnumToVisibilityConverter}, ConverterParameter={x:Static automation:ExplicitType.Object}}" HorizontalAlignment="Right" Height="28">
					<TextBlock Margin="0,7,0,0"  HorizontalAlignment="Right" VerticalAlignment="Top">
					<Hyperlink Command="{Binding ChangeCommand}" Style="{StaticResource HyperlinkStyle}">
						<TextBlock Text="{Binding ExplicitValue.PresentationName}" Visibility="{Binding ExplicitValue.IsEmpty, Converter={StaticResource InversedBoolToVisibilityConverter}}"/>
						<TextBlock Text="Нажмите для выбора объекта">
							<TextBlock.Style>
								<Style>
									<Setter Property="TextBlock.Visibility" Value="Collapsed" />
									<Style.Triggers>
										<DataTrigger Binding="{Binding ExplicitValue.IsEmpty}" Value="True">
											<Setter Property="TextBlock.Visibility" Value="Visible" />
										</DataTrigger>
									</Style.Triggers>
								</Style>
							</TextBlock.Style>
						</TextBlock>
					</Hyperlink>
				</TextBlock>
				</StackPanel>
			</StackPanel>
		</StackPanel>
	</Grid>
</UserControl>