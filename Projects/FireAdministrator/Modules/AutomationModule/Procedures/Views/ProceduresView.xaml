<UserControl x:Class="AutomationModule.Views.ProceduresView"
			 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
			 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
			 xmlns:Views="clr-namespace:AutomationModule.Views"
			 xmlns:procedures="clr-namespace:AutomationModule.Procedures">
	<UserControl.Resources>
		<Style x:Key="ActiveStyle" BasedOn="{StaticResource {x:Type TextBlock}}" TargetType="{x:Type TextBlock}">
			<Style.Triggers>
				<DataTrigger Binding="{Binding IsActive}" Value="false">
					<Setter Property="Foreground" Value="LightGray" />
				</DataTrigger>
			</Style.Triggers>
		</Style>
		<ContextMenu x:Key="ProcedureContextMenu">
			<IconedMenuItem Command="{Binding AddCommand}" ImageSource="BAdd"  Text="Добавить процедуру (Ctrl+N)" />
			<IconedMenuItem Command="{Binding DeleteCommand}" ImageSource="BDelete"  Text="Удалить процедуру (Ctrl+Del)" />
			<IconedMenuItem Command="{Binding EditCommand}" ImageSource="BEdit"  Text="Редактировать процедуру (Ctrl+E)" />
			<IconedMenuItem Command="{Binding CopyCommand}" ImageSource="BCopy"  Text="Копировать процедуру (Ctrl+C)" />
			<IconedMenuItem Command="{Binding CutCommand}" ImageSource="BCut"  Text="Вырезать процедуру (Ctrl+X)" />
			<IconedMenuItem Command="{Binding PasteCommand}" ImageSource="BPaste"  Text="Вставить процедуру (Ctrl+V)" />
		</ContextMenu>
	</UserControl.Resources>
	<Grid>
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="7*" MinWidth="300" />
			<ColumnDefinition Width= "1" />
			<ColumnDefinition Width="15*" MinWidth="400"/>
		</Grid.ColumnDefinitions>
		<Grid>
			<Grid.RowDefinitions>
				<RowDefinition Height="*" />
			</Grid.RowDefinitions>
			<XDataGrid
				ContextMenu="{StaticResource ProcedureContextMenu}"
				ItemsSource="{Binding Procedures}"
				SelectedItem="{Binding SelectedProcedure}"
				IsReadOnly="False">
				<DataGrid.Columns>
					<DataGridTemplateColumn
						Header="Название"
						SortMemberPath="Name"
						Width="*">
						<DataGridTemplateColumn.CellTemplate>
							<DataTemplate>
								<StackPanel Orientation="Horizontal">
									<Image VerticalAlignment="Center" Source="/Controls;component/Images/ProcedureYellow.png" Margin="2 0 0 0" />
									<TextBlock Text="{Binding Name}" Style="{StaticResource ActiveStyle}" HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="2 0" />
								</StackPanel>
							</DataTemplate>
						</DataGridTemplateColumn.CellTemplate>
					</DataGridTemplateColumn>
				</DataGrid.Columns>
			</XDataGrid>
		</Grid>

		<GridSplitter Grid.Column="1" Background="Transparent" HorizontalAlignment="Stretch"/>

		<Grid Grid.Column="2" Visibility="{Binding ., Converter={StaticResource NullToVisibilityConverter}}" DataContext="{Binding SelectedProcedure}" Margin="4, -50, 0, 0">
			<Grid>
				<StackPanel Orientation="Vertical" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="280 14 0 0">
					<StackPanel Orientation="Horizontal">

						<Button Content="Шаги" Command="{Binding ShowStepsCommand}" Width="120" Foreground="{DynamicResource ForegroundColorLight}">
							<Button.Style>
								<Style BasedOn="{StaticResource ToolBarButtonStyle}" TargetType="{x:Type Button}">
									<Style.Triggers>
										<DataTrigger Binding="{Binding Path=SelectedMenuType, Converter={StaticResource EnumToBoolConverter},
											ConverterParameter={x:Static procedures:MenuType.IsSteps}}" Value="True">
											<Setter Property="Background" Value="{DynamicResource PressedBackgroundBrush}" />
										</DataTrigger>
										<DataTrigger Binding="{Binding Path=SelectedMenuType, Converter={StaticResource EnumToBoolConverter},
											ConverterParameter={x:Static procedures:MenuType.IsSteps}, Mode=OneWay}" Value="False">
											<Setter Property="Background" Value="LightGray" />
										</DataTrigger>
									</Style.Triggers>
								</Style>
							</Button.Style>
						</Button>

						<Button Content="Переменные" Command="{Binding ShowVariablesCommand}" Width="120" Foreground="{DynamicResource ForegroundColorLight}">
							<Button.Style>
								<Style BasedOn="{StaticResource ToolBarButtonStyle}" TargetType="{x:Type Button}">
									<Style.Triggers>
										<DataTrigger Binding="{Binding Path=SelectedMenuType, Converter={StaticResource EnumToBoolConverter},
											ConverterParameter={x:Static procedures:MenuType.IsVariables}, Mode=OneWay}" Value="True">
											<Setter Property="Background" Value="{DynamicResource PressedBackgroundBrush}" />
										</DataTrigger>
										<DataTrigger Binding="{Binding Path=SelectedMenuType, Converter={StaticResource EnumToBoolConverter},
											ConverterParameter={x:Static procedures:MenuType.IsVariables}, Mode=OneWay}" Value="False">
											<Setter Property="Background" Value="LightGray" />
										</DataTrigger>
									</Style.Triggers>
								</Style>
							</Button.Style>
						</Button>

						<Button Content="Аргументы" Command="{Binding ShowArgumentsCommand}" Width="120" Foreground="{DynamicResource ForegroundColorLight}">
							<Button.Style>
								<Style BasedOn="{StaticResource ToolBarButtonStyle}" TargetType="{x:Type Button}">
									<Style.Triggers>
										<DataTrigger Binding="{Binding Path=SelectedMenuType, Converter={StaticResource EnumToBoolConverter},
											ConverterParameter={x:Static procedures:MenuType.IsArguments}, Mode=OneWay}" Value="True">
											<Setter Property="Background" Value="{DynamicResource PressedBackgroundBrush}" />
										</DataTrigger>
										<DataTrigger Binding="{Binding Path=SelectedMenuType, Converter={StaticResource EnumToBoolConverter},
											ConverterParameter={x:Static procedures:MenuType.IsArguments}, Mode=OneWay}" Value="False">
											<Setter Property="Background" Value="LightGray" />
										</DataTrigger>
									</Style.Triggers>
								</Style>
							</Button.Style>
						</Button>

						<Button Content="Условия запуска" Command="{Binding ShowConditionsCommand}" Width="120" Foreground="{DynamicResource ForegroundColorLight}">
							<Button.Style>
								<Style BasedOn="{StaticResource ToolBarButtonStyle}" TargetType="{x:Type Button}">
									<Style.Triggers>
										<DataTrigger Binding="{Binding Path=SelectedMenuType, Converter={StaticResource EnumToBoolConverter},
											ConverterParameter={x:Static procedures:MenuType.IsConditions}, Mode=OneWay}" Value="True">
											<Setter Property="Background" Value="{DynamicResource PressedBackgroundBrush}" />
										</DataTrigger>
										<DataTrigger Binding="{Binding Path=SelectedMenuType, Converter={StaticResource EnumToBoolConverter},
											ConverterParameter={x:Static procedures:MenuType.IsConditions}, Mode=OneWay}" Value="False">
											<Setter Property="Background" Value="LightGray" />
										</DataTrigger>
									</Style.Triggers>
								</Style>
							</Button.Style>
						</Button>
					</StackPanel>
				</StackPanel>

				<Grid Visibility="{Binding Path=SelectedMenuType, Converter={StaticResource EnumToVisibilityConverter},
					ConverterParameter={x:Static procedures:MenuType.IsSteps}}">
					<Views:StepsView DataContext="{Binding StepsViewModel}" />
				</Grid>
				<Grid Visibility="{Binding Path=SelectedMenuType, Converter={StaticResource EnumToVisibilityConverter},
					ConverterParameter={x:Static procedures:MenuType.IsVariables}}">
					<Views:VariablesView DataContext="{Binding VariablesViewModel}" />
				</Grid >
				<Grid Visibility="{Binding Path=SelectedMenuType, Converter={StaticResource EnumToVisibilityConverter},
					ConverterParameter={x:Static procedures:MenuType.IsArguments}}">
					<Views:VariablesView DataContext="{Binding ArgumentsViewModel}" />
				</Grid>
				<Grid Visibility="{Binding Path=SelectedMenuType, Converter={StaticResource EnumToVisibilityConverter},
					ConverterParameter={x:Static procedures:MenuType.IsConditions}}">
					<Views:ConditionsView DataContext="{Binding ConditionsViewModel}" />
				</Grid>

			</Grid>
		</Grid>
	</Grid>
</UserControl>