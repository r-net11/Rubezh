<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Add" xml:space="preserve">
    <value>Add</value>
    <comment>google translate</comment>
  </data>
  <data name="AllFree" xml:space="preserve">
    <value>All free</value>
    <comment>google translate</comment>
  </data>
  <data name="AllowEnter" xml:space="preserve">
    <value>Allow ENTER</value>
    <comment>google translate</comment>
  </data>
  <data name="AllowTab" xml:space="preserve">
    <value>Allow TAB</value>
    <comment>google translate</comment>
  </data>
  <data name="Auto" xml:space="preserve">
    <value>Auto</value>
    <comment>google translate</comment>
  </data>
  <data name="AutoWrap" xml:space="preserve">
    <value>Car wrapping</value>
    <comment>google translate</comment>
  </data>
  <data name="Available" xml:space="preserve">
    <value>available</value>
    <comment>google translate</comment>
  </data>
  <data name="BackgroungColor" xml:space="preserve">
    <value>Background color</value>
    <comment>google translate</comment>
  </data>
  <data name="Bold" xml:space="preserve">
    <value>Fatty</value>
    <comment>google translate</comment>
  </data>
  <data name="BorderColor" xml:space="preserve">
    <value>The color of the border</value>
    <comment>google translate</comment>
  </data>
  <data name="BorderWidth" xml:space="preserve">
    <value>border Width</value>
    <comment>google translate</comment>
  </data>
  <data name="DeleteLayout" xml:space="preserve">
    <value>Delete layout</value>
    <comment>google translate</comment>
  </data>
  <data name="DeletePicture" xml:space="preserve">
    <value>Clear image</value>
    <comment>google translate</comment>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Description</value>
    <comment>google translate</comment>
  </data>
  <data name="EditLayout" xml:space="preserve">
    <value>Edit layout</value>
    <comment>google translate</comment>
  </data>
  <data name="ElementCanBePlaced" xml:space="preserve">
    <value>The element may be placed</value>
    <comment>google translate</comment>
  </data>
  <data name="ElementCanNotBePlaced" xml:space="preserve">
    <value>The element can not be placed</value>
    <comment>google translate</comment>
  </data>
  <data name="ElementIsNotPlaced" xml:space="preserve">
    <value>The element is not placed</value>
    <comment>google translate</comment>
  </data>
  <data name="ElementIsPlaced" xml:space="preserve">
    <value>The element is already placed</value>
    <comment>google translate</comment>
  </data>
  <data name="Elements" xml:space="preserve">
    <value>elements</value>
    <comment>google translate</comment>
  </data>
  <data name="Fix" xml:space="preserve">
    <value>Fixed</value>
    <comment>google translate</comment>
  </data>
  <data name="Font" xml:space="preserve">
    <value>Font</value>
    <comment>google translate</comment>
  </data>
  <data name="FontSize" xml:space="preserve">
    <value>Font size</value>
    <comment>google translate</comment>
  </data>
  <data name="Header" xml:space="preserve">
    <value>header</value>
    <comment>google translate</comment>
  </data>
  <data name="Height" xml:space="preserve">
    <value>Height</value>
    <comment>google translate</comment>
  </data>
  <data name="HorizontalAlign" xml:space="preserve">
    <value>Align horizontally</value>
    <comment>google translate</comment>
  </data>
  <data name="Indent" xml:space="preserve">
    <value>indent</value>
    <comment>google translate</comment>
  </data>
  <data name="IpAddress" xml:space="preserve">
    <value>IP address</value>
    <comment>google translate</comment>
  </data>
  <data name="IpAddressOrCompName" xml:space="preserve">
    <value>IP address or computer name</value>
    <comment>google translate</comment>
  </data>
  <data name="IpFilter" xml:space="preserve">
    <value>IP Filter</value>
    <comment>google translate</comment>
  </data>
  <data name="Italic" xml:space="preserve">
    <value>Italics</value>
    <comment>google translate</comment>
  </data>
  <data name="Layouts" xml:space="preserve">
    <value>Layouts</value>
    <comment>google translate</comment>
  </data>
  <data name="Login" xml:space="preserve">
    <value>Login</value>
    <comment>google translate</comment>
  </data>
  <data name="Main" xml:space="preserve">
    <value>main</value>
    <comment>google translate</comment>
  </data>
  <data name="Minimal" xml:space="preserve">
    <value>Minimum</value>
    <comment>google translate</comment>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
    <comment>google translate</comment>
  </data>
  <data name="Pixels" xml:space="preserve">
    <value>Pixels</value>
    <comment>google translate</comment>
  </data>
  <data name="Position" xml:space="preserve">
    <value>Location:</value>
    <comment>google translate</comment>
  </data>
  <data name="SelectPicture" xml:space="preserve">
    <value>Select a picture</value>
    <comment>google translate</comment>
  </data>
  <data name="SeparatorColor" xml:space="preserve">
    <value>separator Color</value>
    <comment>google translate</comment>
  </data>
  <data name="SeparatorWidth" xml:space="preserve">
    <value>The width of the separator</value>
    <comment>google translate</comment>
  </data>
  <data name="ShowMenu" xml:space="preserve">
    <value>show menu</value>
    <comment>google translate</comment>
  </data>
  <data name="Size" xml:space="preserve">
    <value>The size</value>
    <comment>google translate</comment>
  </data>
  <data name="StringLengthLimit" xml:space="preserve">
    <value>Limit the length of the string</value>
    <comment>google translate</comment>
  </data>
  <data name="Style" xml:space="preserve">
    <value>Style</value>
    <comment>google translate</comment>
  </data>
  <data name="Text" xml:space="preserve">
    <value>Text</value>
    <comment>google translate</comment>
  </data>
  <data name="TextAlign" xml:space="preserve">
    <value>align text</value>
    <comment>google translate</comment>
  </data>
  <data name="TextColor" xml:space="preserve">
    <value>Text color</value>
    <comment>google translate</comment>
  </data>
  <data name="Title" xml:space="preserve">
    <value>Name</value>
    <comment>google translate</comment>
  </data>
  <data name="Type" xml:space="preserve">
    <value>A type</value>
    <comment>google translate</comment>
  </data>
  <data name="Unavailable" xml:space="preserve">
    <value>Not available</value>
    <comment>google translate</comment>
  </data>
  <data name="Users" xml:space="preserve">
    <value>users</value>
    <comment>google translate</comment>
  </data>
  <data name="VerticalAlign" xml:space="preserve">
    <value>Align vertically</value>
    <comment>google translate</comment>
  </data>
  <data name="Width" xml:space="preserve">
    <value>Width</value>
    <comment>google translate</comment>
  </data>
</root>