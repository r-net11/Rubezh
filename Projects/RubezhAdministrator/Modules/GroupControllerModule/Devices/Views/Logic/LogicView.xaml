<UserControl x:Class="GKModule.Views.LogicView"
			 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
			 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
			 xmlns:Views="clr-namespace:GKModule.Views"
			 MinWidth="800" MinHeight="500">

	<TabControl>
		<TabItem Header="Условие включения" Visibility="{Binding HasOnClause, Converter={StaticResource BoolToVisibilityConverter}}">
			<ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
				<StackPanel>
					<Views:ClausesView DataContext="{Binding OnClausesGroup}" />
				</StackPanel>
			</ScrollViewer>
		</TabItem>
		<TabItem Header="Условие включения 2" Visibility="{Binding HasOn2Clause, Converter={StaticResource BoolToVisibilityConverter}}">
			<ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
				<StackPanel>
					<Views:ClausesView DataContext="{Binding On2ClausesGroup}" />
				</StackPanel>
			</ScrollViewer>
		</TabItem>
		<TabItem Header="Красный индикатор" Visibility="{Binding IsIC, Converter={StaticResource BoolToVisibilityConverter}}">
			<TabItem.Style>
				<Style TargetType="TabItem" BasedOn="{StaticResource {x:Type TabItem}}">
					<Style.Triggers>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsIC}" Value="True" />
							</MultiDataTrigger.Conditions>
							<MultiDataTrigger.Setters>
								<Setter Property="IsSelected" Value="True" />
							</MultiDataTrigger.Setters>
						</MultiDataTrigger>
					</Style.Triggers>
				</Style>
			</TabItem.Style>
			<TabControl DataContext="{Binding RedIndicatorLogic}">
				<TabItem Header="Мигать 1 сек">
					<ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
						<StackPanel>
							<Views:ClausesView DataContext="{Binding Blink1ClausesGroup}" />
						</StackPanel>
					</ScrollViewer>
				</TabItem>
				<TabItem Header="Мигать 3 сек">
					<ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
						<StackPanel>
							<Views:ClausesView DataContext="{Binding Blink3ClausesGroup}" />
						</StackPanel>
					</ScrollViewer>
				</TabItem>
				<TabItem Header="Отключение">
					<Grid>
						<Grid.RowDefinitions>
							<RowDefinition Height="*" />
							<RowDefinition Height="Auto" />
						</Grid.RowDefinitions>
						<ScrollViewer Grid.Row="0" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
							<StackPanel>
								<Grid IsEnabled="{Binding UseOffCounterLogic, Converter={StaticResource InverseBooleanConverter}}">
									<Views:ClausesView DataContext="{Binding OffClausesGroup}" />
								</Grid>
							</StackPanel>
						</ScrollViewer>
						<CheckBox Grid.Row="1" Margin="2" Foreground="{DynamicResource ForegroundColorLight}" IsChecked="{Binding UseOffCounterLogic}"  Content="Использовать условие включения в качестве противоположного для условия отключения" />
					</Grid>
				</TabItem>
			</TabControl>
		</TabItem>
		<TabItem Header="Жёлтый индикатор" Visibility="{Binding IsIC, Converter={StaticResource BoolToVisibilityConverter}}">
			<TabControl DataContext="{Binding YellowIndicatorLogic}">
				<TabItem Header="Мигать 1 сек">
					<ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
						<StackPanel>
							<Views:ClausesView DataContext="{Binding Blink1ClausesGroup}" />
						</StackPanel>
					</ScrollViewer>
				</TabItem>
				<TabItem Header="Отключение">
					<Grid>
						<Grid.RowDefinitions>
							<RowDefinition Height="*" />
							<RowDefinition Height="Auto" />
						</Grid.RowDefinitions>
						<ScrollViewer Grid.Row="0" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
							<StackPanel>
								<Grid IsEnabled="{Binding UseOffCounterLogic, Converter={StaticResource InverseBooleanConverter}}">
									<Views:ClausesView DataContext="{Binding OffClausesGroup}" />
								</Grid>
							</StackPanel>
						</ScrollViewer>
						<CheckBox Grid.Row="1" Margin="2" Foreground="{DynamicResource ForegroundColorLight}" IsChecked="{Binding UseOffCounterLogic}"  Content="Использовать условие включения в качестве противоположного для условия отключения" />
					</Grid>
				</TabItem>
			</TabControl>
		</TabItem>
		<TabItem Header="Зелёный индикатор" Visibility="{Binding IsIC, Converter={StaticResource BoolToVisibilityConverter}}">
			<TabControl DataContext="{Binding GreenIndicatorLogic}">
				<TabItem Header="Мигать 1 сек">
					<ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
						<StackPanel>
							<Views:ClausesView DataContext="{Binding Blink1ClausesGroup}" />
						</StackPanel>
					</ScrollViewer>
				</TabItem>
				<TabItem Header="Мигать 3 сек">
					<ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
						<StackPanel>
							<Views:ClausesView DataContext="{Binding Blink3ClausesGroup}" />
						</StackPanel>
					</ScrollViewer>
				</TabItem>
				<TabItem Header="Отключение">
					<Grid>
						<Grid.RowDefinitions>
							<RowDefinition Height="*" />
							<RowDefinition Height="Auto" />
						</Grid.RowDefinitions>
						<ScrollViewer Grid.Row="0" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
							<StackPanel>
								<Grid IsEnabled="{Binding UseOffCounterLogic, Converter={StaticResource InverseBooleanConverter}}">
									<Views:ClausesView DataContext="{Binding OffClausesGroup}" />
								</Grid>
							</StackPanel>
						</ScrollViewer>
						<CheckBox Grid.Row="1" Margin="2" Foreground="{DynamicResource ForegroundColorLight}" IsChecked="{Binding UseOffCounterLogic}"  Content="Использовать условие включения в качестве противоположного для условия отключения" />
					</Grid>
				</TabItem>
			</TabControl>
		</TabItem>
		<TabItem Header="Условие отключения" Visibility="{Binding HasOffClause, Converter={StaticResource BoolToVisibilityConverter}}">
			<TabItem.Style>
				<Style TargetType="TabItem" BasedOn="{StaticResource {x:Type TabItem}}">
					<Style.Triggers>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding HasOnClause}" Value="False" />
								<Condition Binding="{Binding HasOffClause}" Value="True" />
								<Condition Binding="{Binding HasOnNowClause}" Value="False" />
								<Condition Binding="{Binding HasOffNowClause}" Value="False" />
								<Condition Binding="{Binding HasStopClause}" Value="False" />
							</MultiDataTrigger.Conditions>
							<MultiDataTrigger.Setters>
								<Setter Property="IsSelected" Value="True" />
							</MultiDataTrigger.Setters>
						</MultiDataTrigger>
					</Style.Triggers>
				</Style>
			</TabItem.Style>
			<Grid>
				<Grid.RowDefinitions>
					<RowDefinition Height="*" />
					<RowDefinition Height="Auto" />
				</Grid.RowDefinitions>
				<ScrollViewer Grid.Row="0" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
					<StackPanel>
						<Grid IsEnabled="{Binding UseOffCounterLogic, Converter={StaticResource InverseBooleanConverter}}">
							<Views:ClausesView DataContext="{Binding OffClausesGroup}" />
						</Grid>
					</StackPanel>
				</ScrollViewer>
				<CheckBox Grid.Row="1" Margin="2" Content="Использовать условие включения в качестве противоположного для условия выключения" Foreground="{DynamicResource ForegroundColorLight}" IsChecked="{Binding UseOffCounterLogic}" />
			</Grid>
		</TabItem>
		<TabItem Header="Условие включения немедленно" Visibility="{Binding HasOnNowClause, Converter={StaticResource BoolToVisibilityConverter}}">
			<ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
				<StackPanel>
					<Views:ClausesView DataContext="{Binding OnNowClausesGroup}" />
				</StackPanel>
			</ScrollViewer>
		</TabItem>
		<TabItem Header="Условие выключения немедленно" Visibility="{Binding HasOffNowClause, Converter={StaticResource BoolToVisibilityConverter}}">
			<ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
				<StackPanel>
					<Views:ClausesView DataContext="{Binding OffNowClausesGroup}" />
				</StackPanel>
			</ScrollViewer>
		</TabItem>
		<TabItem Header="Условие останова" Visibility="{Binding HasStopClause, Converter={StaticResource BoolToVisibilityConverter}}">
			<TabItem.Style>
				<Style TargetType="TabItem" BasedOn="{StaticResource {x:Type TabItem}}">
					<Style.Triggers>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding HasOnClause}" Value="False" />
								<Condition Binding="{Binding HasOffClause}" Value="False" />
								<Condition Binding="{Binding HasOnNowClause}" Value="False" />
								<Condition Binding="{Binding HasOffNowClause}" Value="False" />
								<Condition Binding="{Binding HasStopClause}" Value="True" />
							</MultiDataTrigger.Conditions>
							<MultiDataTrigger.Setters>
								<Setter Property="IsSelected" Value="True" />
							</MultiDataTrigger.Setters>
						</MultiDataTrigger>
					</Style.Triggers>
				</Style>
			</TabItem.Style>
			<ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
				<StackPanel>
					<Views:ClausesView DataContext="{Binding StopClausesGroup}" />
				</StackPanel>
			</ScrollViewer>
		</TabItem>
	</TabControl>
</UserControl>