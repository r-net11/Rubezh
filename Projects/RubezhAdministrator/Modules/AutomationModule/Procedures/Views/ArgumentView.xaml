<UserControl x:Class="AutomationModule.Views.ArgumentView"
			 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
			 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
			 xmlns:automation="clr-namespace:RubezhAPI.Automation;assembly=RubezhAPI"
			 xmlns:extToolkit="http://schemas.microsoft.com/winfx/2006/xaml/presentation/toolkit/extended"
			 xmlns:Views="clr-namespace:AutomationModule.Views"
			 xmlns:xc="clr-namespace:Xceed.Wpf.Toolkit;assembly=Xceed.Wpf.Toolkit">
	<UserControl.Resources>
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="..\..\Steps\Views\ProcedureResources.xaml" />
			</ResourceDictionary.MergedDictionaries>
			<Style x:Key="VariableComboBox" BasedOn="{StaticResource {x:Type ComboBox}}" TargetType="{x:Type ComboBox}">
				<Setter Property="IsSynchronizedWithCurrentItem" Value="False" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="ComboBox">
							<Grid>
								<ToggleButton Name="ToggleButton" ClickMode="Press" Focusable="false" IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Template="{StaticResource ComboBoxToggleButton}" />
								<ContentPresenter Name="ContentSite" Margin="3,3,23,3" HorizontalAlignment="Left" VerticalAlignment="Center" Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" IsHitTestVisible="False" />
								<TextBox x:Name="PART_EditableTextBox" Margin="3,3,23,3" HorizontalAlignment="Left" VerticalAlignment="Center" Background="Transparent" Focusable="True" IsReadOnly="{TemplateBinding IsReadOnly}" Style="{x:Null}" Template="{StaticResource ComboBoxTextBox}" Visibility="Hidden" />
								<Popup Name="Popup" AllowsTransparency="True" Focusable="False" IsOpen="{TemplateBinding IsDropDownOpen}" Placement="Bottom" PopupAnimation="Slide">
									<Grid Name="DropDown" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}" SnapsToDevicePixels="True">
										<Border x:Name="DropDownBorder"
												Background="{DynamicResource WindowBackgroundBrush}"
												BorderBrush="Black"
												BorderThickness="1"
												CornerRadius="4"
												Margin="0 2 0 0"/>
										<DockPanel Margin="4,6,4,6">
											<Button Name="button" Command="{Binding AddVariableCommand}" Content="Создать" DockPanel.Dock="Bottom" Visibility="{Binding AddVariableVisibility, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter=True}" />
											<ScrollViewer KeyboardNavigation.DirectionalNavigation="Cycle" SnapsToDevicePixels="True">
												<StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
											</ScrollViewer>
										</DockPanel>
									</Grid>
								</Popup>
							</Grid>
							<ControlTemplate.Triggers>
								<Trigger Property="HasItems" Value="false">
									<Setter TargetName="DropDownBorder" Property="MinHeight" Value="36" />
								</Trigger>
								<Trigger Property="IsEnabled" Value="false">
									<Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
								</Trigger>
								<Trigger Property="IsGrouping" Value="true">
									<Setter Property="ScrollViewer.CanContentScroll" Value="false" />
								</Trigger>
								<Trigger Property="IsEditable" Value="true">
									<Setter Property="IsTabStop" Value="false" />
									<Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible" />
									<Setter TargetName="ContentSite" Property="Visibility" Value="Hidden" />
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
		</ResourceDictionary>
	</UserControl.Resources>

	<StackPanel Orientation="Horizontal">
		<ComboBox ItemsSource="{Binding VariableScopes}" SelectedItem="{Binding SelectedVariableScope, UpdateSourceTrigger=PropertyChanged}">
			<ComboBox.ItemTemplate>
				<DataTemplate>
					<TextBlock Text="{Binding ., Converter={StaticResource EnumToDescriptionConverter}}" />
				</DataTemplate>
			</ComboBox.ItemTemplate>
		</ComboBox>

		<ComboBox ItemsSource="{Binding LocalVariables}"
				  SelectedItem="{Binding SelectedVariable, UpdateSourceTrigger=PropertyChanged}"
				  Width="200"
				  Style="{StaticResource VariableComboBox}"
				  Visibility="{Binding Path=SelectedVariableScope, Converter={StaticResource EnumToVisibilityConverter}, ConverterParameter={x:Static automation:VariableScope.LocalVariable}}" />

		<ComboBox ItemsSource="{Binding GlobalVariables}"
				  SelectedItem="{Binding SelectedVariable, UpdateSourceTrigger=PropertyChanged}"
				  Width="200"
				  Style="{StaticResource VariableComboBox}"
				  Visibility="{Binding Path=SelectedVariableScope, Converter={StaticResource EnumToVisibilityConverter}, ConverterParameter={x:Static automation:VariableScope.GlobalVariable}}" />

		<StackPanel Visibility="{Binding SelectedVariableScope, Converter={StaticResource EnumToVisibilityConverter}, ConverterParameter={x:Static automation:VariableScope.ExplicitValue}}">
			<Views:ExplicitValueView DataContext="{Binding ExplicitValue}" />
		</StackPanel>
	</StackPanel>
</UserControl>