<UserControl x:Class="DevicesModule.Views.DevicesView" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:Controls="clr-namespace:Controls;assembly=Controls" xmlns:Conv="clr-namespace:Controls.Converters;assembly=Controls" xmlns:Converters="clr-namespace:DevicesModule.Converters"
		xmlns:drag="clr-namespace:Infrastructure.Common.Services.DragDrop;assembly=Infrastructure.Common"
		xmlns:toolkit="clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls.Input.Toolkit" xmlns:tree="clr-namespace:Controls.TreeList;assembly=Controls"
		xmlns:viewModel="clr-namespace:DevicesModule.ViewModels" xmlns:Views="clr-namespace:DevicesModule.Views" Focusable="True">

	<UserControl.Resources>
		<Conv:SwitchConverter x:Key="Tooltip" Else="{x:Null}">
			<Conv:SwitchCase Then="Устройство может быть размещено на плане" When="Multiple" />
			<Conv:SwitchCase Then="Устройство не размещено на плане" When="NotPresent" />
			<Conv:SwitchCase Then="Устройство нельзя размещать на плане" When="Prohibit" />
			<Conv:SwitchCase Then="Устройство уже размещено на плане" When="Single" />
		</Conv:SwitchConverter>

		<ContextMenu x:Key="DeviceContextMenu">
			<MenuItem Command="{Binding CopyCommand}" Header="Копировать (Ctrl+C)" />
			<MenuItem Command="{Binding CutCommand}" Header="Вырезать (Ctrl+X)" />
			<MenuItem Command="{Binding PasteCommand}" Header="Вставить (Ctrl+V)" />
			<MenuItem Command="{Binding PasteAsCommand}" Header="Вставить как" />
			<Separator />
			<MenuItem Command="{Binding AddCommand}" Header="Добавить дочернее устройство (Ctrl+N)" />
			<MenuItem Command="{Binding AddToParentCommand}" Header="Добавить к родительскому устройству (Ctrl+M)" />
			<MenuItem Command="{Binding RemoveCommand}" Header="Удалить (Ctrl+Del)" />
			<MenuItem Command="{Binding ShowZoneLogicCommand}" Header="Настройка логики исполнительного устройства по состоянию зон" />
			<MenuItem Command="{Binding ShowPropertiesCommand}" Header="Свойства" />
			<Separator Visibility="{Binding Driver.IsPlaceable, Converter={StaticResource BoolToVisibilityConverter}}" />
			<MenuItem Command="{Binding AllowMultipleVizualizationCommand}" CommandParameter="{StaticResource True}" Header="Разрешить множественную визуализацию"
					Visibility="{Binding Driver.IsPlaceable, Converter={StaticResource BoolToVisibilityConverter}}" />
			<MenuItem Command="{Binding AllowMultipleVizualizationCommand}" CommandParameter="{StaticResource False}" Header="Запретить множественную визуализацию"
					Visibility="{Binding Driver.IsPlaceable, Converter={StaticResource BoolToVisibilityConverter}}" />
		</ContextMenu>

		<viewModel:DeviceViewModelDeviceComparer x:Key="DeviceViewModelDeviceComparer" />
		<viewModel:DeviceViewModelAddressComparer x:Key="DeviceViewModelAddressComparer" />
		<viewModel:DeviceViewModelZoneComparer x:Key="DeviceViewModelZoneComparer" />
		<viewModel:DeviceViewModelDescriptionComparer x:Key="DeviceViewModelDescriptionComparer" />
	</UserControl.Resources>

	<Grid>
		<Grid.RowDefinitions>
			<RowDefinition Height="*" MinHeight="200" />
			<RowDefinition Height="Auto" />
			<RowDefinition Height="150" MinHeight="150" />
		</Grid.RowDefinitions>
		<tree:TreeList Grid.Row="0" Focusable="True" SelectedTreeNode="{Binding SelectedDevice}" Source="{Binding RootDevices}" tree:SortBehavior.CanUserSortColumns="True">
			<tree:TreeList.Resources>
				<Style x:Key="{x:Type ComboBox}" BasedOn="{StaticResource {x:Type ComboBox}}" TargetType="ComboBox">
					<Setter Property="MinWidth" Value="0" />
					<Setter Property="MinHeight" Value="0" />
				</Style>
				<Style x:Key="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}" TargetType="TextBox">
					<Setter Property="MinWidth" Value="0" />
					<Setter Property="MinHeight" Value="0" />
				</Style>
			</tree:TreeList.Resources>
			<tree:TreeList.View>
				<GridView>
					<GridViewColumn Width="250" Header="Устройство" tree:SortBehavior.SortComparer="{StaticResource DeviceViewModelDeviceComparer}">
						<GridViewColumn.CellTemplate>
							<DataTemplate>
								<DockPanel ContextMenu="{StaticResource DeviceContextMenu}">
									<StackPanel DockPanel.Dock="Left" Orientation="Horizontal">
										<CheckBox Focusable="False" IsChecked="{Binding IsUsed, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
												Visibility="{Binding Device.CanBeNotUsed, Converter={StaticResource BoolToVisibilityConverter}}" />
										<drag:DragDropDecorator AllowSimulateDrag="True" DragCommand="{Binding CreateDragObjectCommand}" DragVisualProvider="{Binding CreateDragVisual}"
												DynamicCursor="True" IsSource="True">
											<Image Source="{Binding VisualizationState, Converter={StaticResource VisualizationStateToImageSourceConverter}}"
													ToolTip="{Binding VisualizationState, Converter={StaticResource Tooltip}}" />
										</drag:DragDropDecorator>
									</StackPanel>
									<Controls:EditorPresenter>
										<Controls:EditorPresenter.ViewTemplate>
											<ControlTemplate>
												<Grid>
													<Image Width="16" Height="16" Margin="5, 0, 5, 0" HorizontalAlignment="Left" Source="{Binding Driver.ImageSource}" />
													<TextBlock Width="200" Margin="31 0 0 0" HorizontalAlignment="Stretch" VerticalAlignment="Center" Text="{Binding Driver.ShortName}">
														<TextBlock.Style>
															<Style>
																<Style.Triggers>
																	<DataTrigger Binding="{Binding Device.Driver.IsPlaceable}" Value="True">
																		<DataTrigger.Setters>
																			<Setter Property="TextBlock.FontWeight" Value="Bold" />
																		</DataTrigger.Setters>
																	</DataTrigger>
																</Style.Triggers>
															</Style>
														</TextBlock.Style>
													</TextBlock>
												</Grid>
											</ControlTemplate>
										</Controls:EditorPresenter.ViewTemplate>
										<Controls:EditorPresenter.EditTemplate>
											<ControlTemplate>
												<Grid>
													<ComboBox ItemsSource="{Binding AvailvableDrivers}" SelectedItem="{Binding Driver, UpdateSourceTrigger=PropertyChanged}"
															Visibility="{Binding CanChangeDriver, Converter={StaticResource BoolToVisibilityConverter}}">
														<ComboBox.ItemTemplate>
															<DataTemplate>
																<Grid>
																	<Image Width="16" Height="16" Margin="5, 0, 5, 0" HorizontalAlignment="Left" VerticalAlignment="Center"
																			Source="{Binding ImageSource}" />
																	<TextBlock Margin="31 0 0 0" HorizontalAlignment="Stretch" VerticalAlignment="Center" Foreground="Black" Text="{Binding ShortName}" />
																</Grid>
															</DataTemplate>
														</ComboBox.ItemTemplate>
													</ComboBox>
													<Image Width="16" Height="16" Margin="5, 0, 5, 0" HorizontalAlignment="Left" Source="{Binding Driver.ImageSource}"
															Visibility="{Binding CanChangeDriver, Converter={StaticResource InversedBoolToVisibilityConverter}}" />
													<TextBlock Margin="31 0 0 0" HorizontalAlignment="Stretch" VerticalAlignment="Center" Text="{Binding Driver.ShortName}"
															Visibility="{Binding CanChangeDriver, Converter={StaticResource InversedBoolToVisibilityConverter}}" />
												</Grid>
											</ControlTemplate>
										</Controls:EditorPresenter.EditTemplate>
									</Controls:EditorPresenter>
								</DockPanel>
							</DataTemplate>
						</GridViewColumn.CellTemplate>
					</GridViewColumn>
					<GridViewColumn Width="100" Header="Адрес" tree:SortBehavior.SortComparer="{StaticResource DeviceViewModelAddressComparer}">
						<GridViewColumn.CellTemplate>
							<DataTemplate>
								<Controls:EditorPresenter>
									<Controls:EditorPresenter.ViewTemplate>
										<ControlTemplate>
											<TextBlock Text="{Binding Address}" Visibility="{Binding Driver.HasAddress, Converter={StaticResource BoolToVisibilityConverter}}" />
										</ControlTemplate>
									</Controls:EditorPresenter.ViewTemplate>
									<Controls:EditorPresenter.EditTemplate>
										<ControlTemplate>
											<Grid>
												<Views:AddressEditor Address="{Binding Address}" Device="{Binding Device}"
														Visibility="{Binding Device.CanEditAddress, Converter={StaticResource BoolToVisibilityConverter}}" />
												<TextBlock Text="{Binding Address}"
														Visibility="{Binding Device.CanEditAddress, Converter={StaticResource InversedBoolToVisibilityConverter}}" />
											</Grid>
										</ControlTemplate>
									</Controls:EditorPresenter.EditTemplate>
								</Controls:EditorPresenter>
							</DataTemplate>
						</GridViewColumn.CellTemplate>
					</GridViewColumn>
					<GridViewColumn Width="200" Header="Зона" tree:SortBehavior.SortComparer="{StaticResource DeviceViewModelZoneComparer}">
						<GridViewColumn.CellTemplate>
							<DataTemplate>
								<StackPanel Orientation="Horizontal">
									<Image Width="14" Height="14" Margin="0, 0 ,5, 0" Source="/Controls;component/Images/Link.png"
											Visibility="{Binding HasExternalDevices, Converter={StaticResource BoolToVisibilityConverter}}" />
									<TextBlock Name="ZoneTextBlock" MinWidth="100" Cursor="Hand" Text="{Binding EditingPresentationZone}" ToolTip="{Binding EditingPresentationZone}"
											Visibility="{Binding IsZoneOrLogic, Converter={StaticResource BoolToVisibilityConverter}}">
										<TextBlock.Style>
											<Style TargetType="TextBlock">
												<Style.Triggers>
													<DataTrigger Binding="{Binding IsZoneGrayed}" Value="True">
														<Setter Property="TextBlock.Foreground" Value="Gray" />
													</DataTrigger>
												</Style.Triggers>
											</Style>
										</TextBlock.Style>
										<TextBlock.InputBindings>
											<MouseBinding Command="{Binding ShowZoneOrLogicCommand}" MouseAction="LeftClick" />
										</TextBlock.InputBindings>
									</TextBlock>
								</StackPanel>
							</DataTemplate>
						</GridViewColumn.CellTemplate>
					</GridViewColumn>
					<GridViewColumn Header="Примечание" tree:SortBehavior.SortComparer="{StaticResource DeviceViewModelDescriptionComparer}">
						<GridViewColumn.CellTemplate>
							<DataTemplate>
								<Controls:EditorPresenter>
									<Controls:EditorPresenter.ViewTemplate>
										<ControlTemplate>
											<TextBlock Text="{Binding Description}" />
										</ControlTemplate>
									</Controls:EditorPresenter.ViewTemplate>
									<Controls:EditorPresenter.EditTemplate>
										<ControlTemplate>
											<toolkit:AutoCompleteBox Name="descriptionTextBox" IsTextCompletionEnabled="True" Populating="Description_Populating"
													Text="{Binding Description, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
											<ControlTemplate.Triggers>
												<Trigger SourceName="descriptionTextBox" Property="IsVisible" Value="True">
													<Setter TargetName="descriptionTextBox" Property="FocusManager.FocusedElement" Value="{Binding ElementName=descriptionTextBox}" />
												</Trigger>
											</ControlTemplate.Triggers>
										</ControlTemplate>
									</Controls:EditorPresenter.EditTemplate>
								</Controls:EditorPresenter>
							</DataTemplate>
						</GridViewColumn.CellTemplate>
					</GridViewColumn>
				</GridView>
			</tree:TreeList.View>
		</tree:TreeList>
		<GridSplitter Grid.Row="1" Height="5" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="Transparent" Cursor="SizeNS" />
		<Border Grid.Row="2" Background="{DynamicResource BackgroundBrush}" CornerRadius="5">
			<ScrollViewer VerticalScrollBarVisibility="Auto">
				<Grid Margin="5" DataContext="{Binding SelectedDevice}">
					<Grid.RowDefinitions>
						<RowDefinition Height="Auto" />
						<RowDefinition Height="*" />
					</Grid.RowDefinitions>
					<StackPanel Grid.Row="0" Orientation="Horizontal">
						<Image Width="16" Margin="2, 0" Source="{Binding Driver.ImageSource}" />
						<Label VerticalAlignment="Center" Content="{Binding Driver.Name}" FontWeight="Bold" />
					</StackPanel>
					<Views:PropertiesView Grid.Row="1" />
				</Grid>
			</ScrollViewer>
		</Border>
	</Grid>
</UserControl>