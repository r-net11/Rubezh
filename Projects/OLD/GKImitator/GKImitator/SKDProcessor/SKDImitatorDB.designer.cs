#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.18449
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GKImitator.SKDProcessor
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="SKDImirator")]
	public partial class SKDImitatorDBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Определения метода расширяемости
    partial void OnCreated();
    partial void InsertDevices(Devices instance);
    partial void UpdateDevices(Devices instance);
    partial void DeleteDevices(Devices instance);
    #endregion
		
		public SKDImitatorDBDataContext() : 
				base(global::GKImitator.Properties.Settings.Default.SKDImiratorConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public SKDImitatorDBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SKDImitatorDBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SKDImitatorDBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SKDImitatorDBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Devices> Devices
		{
			get
			{
				return this.GetTable<Devices>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Devices")]
	public partial class Devices : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UID;
		
		private System.Nullable<int> _Port;
		
		private System.Nullable<int> _LastJournalNo;
		
		private System.Data.Linq.Binary _BytesHash;
		
		private string _TimeIntervalHash;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUIDChanging(System.Guid value);
    partial void OnUIDChanged();
    partial void OnPortChanging(System.Nullable<int> value);
    partial void OnPortChanged();
    partial void OnLastJournalNoChanging(System.Nullable<int> value);
    partial void OnLastJournalNoChanged();
    partial void OnBytesHashChanging(System.Data.Linq.Binary value);
    partial void OnBytesHashChanged();
    partial void OnTimeIntervalHashChanging(string value);
    partial void OnTimeIntervalHashChanged();
    #endregion
		
		public Devices()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UID
		{
			get
			{
				return this._UID;
			}
			set
			{
				if ((this._UID != value))
				{
					this.OnUIDChanging(value);
					this.SendPropertyChanging();
					this._UID = value;
					this.SendPropertyChanged("UID");
					this.OnUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Port", DbType="Int")]
		public System.Nullable<int> Port
		{
			get
			{
				return this._Port;
			}
			set
			{
				if ((this._Port != value))
				{
					this.OnPortChanging(value);
					this.SendPropertyChanging();
					this._Port = value;
					this.SendPropertyChanged("Port");
					this.OnPortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastJournalNo", DbType="Int")]
		public System.Nullable<int> LastJournalNo
		{
			get
			{
				return this._LastJournalNo;
			}
			set
			{
				if ((this._LastJournalNo != value))
				{
					this.OnLastJournalNoChanging(value);
					this.SendPropertyChanging();
					this._LastJournalNo = value;
					this.SendPropertyChanged("LastJournalNo");
					this.OnLastJournalNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BytesHash", DbType="Binary(32)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary BytesHash
		{
			get
			{
				return this._BytesHash;
			}
			set
			{
				if ((this._BytesHash != value))
				{
					this.OnBytesHashChanging(value);
					this.SendPropertyChanging();
					this._BytesHash = value;
					this.SendPropertyChanged("BytesHash");
					this.OnBytesHashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeIntervalHash", DbType="NVarChar(MAX)")]
		public string TimeIntervalHash
		{
			get
			{
				return this._TimeIntervalHash;
			}
			set
			{
				if ((this._TimeIntervalHash != value))
				{
					this.OnTimeIntervalHashChanging(value);
					this.SendPropertyChanging();
					this._TimeIntervalHash = value;
					this.SendPropertyChanged("TimeIntervalHash");
					this.OnTimeIntervalHashChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
