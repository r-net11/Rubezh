<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Absence" xml:space="preserve">
    <value>lack of</value>
  </data>
  <data name="AbsenceInclEarlyLeaveLate" xml:space="preserve">
    <value>Absence (including late arrivals and early departures)</value>
  </data>
  <data name="AccessPermissions" xml:space="preserve">
    <value>Permissions</value>
  </data>
  <data name="AccessSchedule" xml:space="preserve">
    <value>access Schedule</value>
  </data>
  <data name="AccessTemplate" xml:space="preserve">
    <value>access Template</value>
  </data>
  <data name="AccessZone" xml:space="preserve">
    <value>Access Zone</value>
  </data>
  <data name="Archive" xml:space="preserve">
    <value>Archive</value>
  </data>
  <data name="BalanceWithoutTimeout" xml:space="preserve">
    <value>Balance (excluding overtime unconfirmed)</value>
  </data>
  <data name="BalanceWithTimeout" xml:space="preserve">
    <value>Balance (including unconfirmed processing)</value>
  </data>
  <data name="BasicSchedule" xml:space="preserve">
    <value>Basic schedule</value>
  </data>
  <data name="BirthDate" xml:space="preserve">
    <value>Date of Birth</value>
  </data>
  <data name="BirthPlace" xml:space="preserve">
    <value>Place of Birth</value>
  </data>
  <data name="Citizenship" xml:space="preserve">
    <value>Citizenship</value>
  </data>
  <data name="Coming" xml:space="preserve">
    <value>Coming</value>
  </data>
  <data name="Controller" xml:space="preserve">
    <value>Controller</value>
  </data>
  <data name="CreateNetPipesEndpoint_Address" xml:space="preserve">
    <value>Local address: {0}</value>
  </data>
  <data name="CreateTcpEndpoint_Address" xml:space="preserve">
    <value>Remote address: {0}</value>
  </data>
  <data name="Date" xml:space="preserve">
    <value>date</value>
  </data>
  <data name="Day" xml:space="preserve">
    <value>Day</value>
  </data>
  <data name="Deactivated" xml:space="preserve">
    <value>deactivated</value>
  </data>
  <data name="DepartList" xml:space="preserve">
    <value>List of organizational units</value>
  </data>
  <data name="Department" xml:space="preserve">
    <value>Subdivision</value>
  </data>
  <data name="DepartmentWithColon" xml:space="preserve">
    <value>Division: {0}</value>
  </data>
  <data name="DeviceDate" xml:space="preserve">
    <value>The date and time on your device</value>
  </data>
  <data name="DisciplinaryReport" xml:space="preserve">
    <value>Disciplinary report</value>
  </data>
  <data name="Division" xml:space="preserve">
    <value>Department</value>
  </data>
  <data name="Document" xml:space="preserve">
    <value>Document</value>
  </data>
  <data name="DocumentsReport" xml:space="preserve">
    <value>Report on supporting documents</value>
  </data>
  <data name="DocumentTime" xml:space="preserve">
    <value>according to the documents, h.</value>
  </data>
  <data name="Door" xml:space="preserve">
    <value>Access point</value>
  </data>
  <data name="DoorsList" xml:space="preserve">
    <value>The list of APs</value>
  </data>
  <data name="Duration" xml:space="preserve">
    <value>Duration</value>
  </data>
  <data name="DuringPeriod" xml:space="preserve">
    <value>During the period of {0}</value>
  </data>
  <data name="Elaboration" xml:space="preserve">
    <value>elaboration</value>
  </data>
  <data name="Employee" xml:space="preserve">
    <value>employee</value>
  </data>
  <data name="EmployeeAbout" xml:space="preserve">
    <value>employee</value>
  </data>
  <data name="EmployeeNo" xml:space="preserve">
    <value>employee</value>
  </data>
  <data name="Employees" xml:space="preserve">
    <value>staff</value>
  </data>
  <data name="EndDate" xml:space="preserve">
    <value>Date graduated.</value>
  </data>
  <data name="EndTime" xml:space="preserve">
    <value>End Time.</value>
  </data>
  <data name="EnterDate" xml:space="preserve">
    <value>Date and time of entry</value>
  </data>
  <data name="Exit" xml:space="preserve">
    <value>Care</value>
  </data>
  <data name="EarlyLeave" xml:space="preserve">
    <value>Care before</value>
  </data>
  <data name="ExitDate" xml:space="preserve">
    <value>The date and time</value>
  </data>
  <data name="ExpireDate" xml:space="preserve">
    <value>Expiry Date</value>
  </data>
  <data name="FactWorkTime" xml:space="preserve">
    <value>In fact, hours worked, hours.</value>
  </data>
  <data name="FilterUpperCase" xml:space="preserve">
    <value>FILTER:</value>
  </data>
  <data name="FilterWithColon" xml:space="preserve">
    <value>Filter: {0}</value>
  </data>
  <data name="FirstEntrLastExt" xml:space="preserve">
    <value>Teaches. only the first entry and the last exit</value>
  </data>
  <data name="FirstName" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="FromDateToDate" xml:space="preserve">
    <value>from {0:dd.MM.yyyy HH:mm:ss} to {1:dd.MM.yyyy HH:mm:ss}</value>
  </data>
  <data name="FromZone" xml:space="preserve">
    <value>from the zone</value>
  </data>
  <data name="Head" xml:space="preserve">
    <value>head</value>
  </data>
  <data name="HMS" xml:space="preserve">
    <value>{0} h. {1} m. {2} s.</value>
  </data>
  <data name="IgnoreAbsence" xml:space="preserve">
    <value>It does not teach. no less than</value>
  </data>
  <data name="IgnoreAllowedLate" xml:space="preserve">
    <value>It does not teach. delay less</value>
  </data>
  <data name="IgnoreEarlyLeave" xml:space="preserve">
    <value>It does not teach. Early care less</value>
  </data>
  <data name="IgnoreHolidays" xml:space="preserve">
    <value>It does not teach. idle.</value>
  </data>
  <data name="IgnoreTimeover" xml:space="preserve">
    <value>It does not teach. processing less</value>
  </data>
  <data name="IncludeNightTime" xml:space="preserve">
    <value>Including night</value>
  </data>
  <data name="IncludeNightWork" xml:space="preserve">
    <value>Including work at night</value>
  </data>
  <data name="InfoAbout" xml:space="preserve">
    <value>Information about</value>
  </data>
  <data name="InfoAboutEmployee" xml:space="preserve">
    <value>Help the employee</value>
  </data>
  <data name="InfoAboutVisitor" xml:space="preserve">
    <value>FAQ about the visitor</value>
  </data>
  <data name="InfoAboutWorkTime" xml:space="preserve">
    <value>Help on hours worked</value>
  </data>
  <data name="IPAddress" xml:space="preserve">
    <value>IP-address</value>
  </data>
  <data name="IssueDate" xml:space="preserve">
    <value>date of issue</value>
  </data>
  <data name="IssuedBy" xml:space="preserve">
    <value>Issued by</value>
  </data>
  <data name="LastName" xml:space="preserve">
    <value>Surname</value>
  </data>
  <data name="Lateness" xml:space="preserve">
    <value>lateness</value>
  </data>
  <data name="Level" xml:space="preserve">
    <value>Level</value>
  </data>
  <data name="LitteralCode" xml:space="preserve">
    <value>Letters. code</value>
  </data>
  <data name="Location" xml:space="preserve">
    <value>Location</value>
  </data>
  <data name="Maintainer" xml:space="preserve">
    <value>Accompanying</value>
  </data>
  <data name="MaintainerWithColon" xml:space="preserve">
    <value>Maintainer: {0}</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="NextDay" xml:space="preserve">
    <value>Track. day</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>'No'</value>
  </data>
  <data name="Note" xml:space="preserve">
    <value>Note</value>
  </data>
  <data name="NoteWithColon" xml:space="preserve">
    <value>Note: {0}</value>
  </data>
  <data name="NotReasonAbsence" xml:space="preserve">
    <value>The absence of a valid reason for not</value>
  </data>
  <data name="Number" xml:space="preserve">
    <value>room</value>
  </data>
  <data name="NumCode" xml:space="preserve">
    <value>Num. code</value>
  </data>
  <data name="Object" xml:space="preserve">
    <value>An object</value>
  </data>
  <data name="Organization" xml:space="preserve">
    <value>Organization</value>
  </data>
  <data name="OrganizationWithColon" xml:space="preserve">
    <value>Company: {0}</value>
  </data>
  <data name="Overtime" xml:space="preserve">
    <value>overtime</value>
  </data>
  <data name="PageOf" xml:space="preserve">
    <value>Page {0} of {1}</value>
  </data>
  <data name="Passcard" xml:space="preserve">
    <value>pass</value>
  </data>
  <data name="PasscardNumber" xml:space="preserve">
    <value>Number of passes</value>
  </data>
  <data name="PasscardsInfo" xml:space="preserve">
    <value>Data on absences</value>
  </data>
  <data name="PasscardType" xml:space="preserve">
    <value>pass type</value>
  </data>
  <data name="PassDate" xml:space="preserve">
    <value>Date / Time of passage</value>
  </data>
  <data name="PassNumbers" xml:space="preserve">
    <value>number of passes</value>
  </data>
  <data name="PersonnelNumber" xml:space="preserve">
    <value>Personnel Number</value>
  </data>
  <data name="Phone" xml:space="preserve">
    <value>Phone</value>
  </data>
  <data name="Position" xml:space="preserve">
    <value>Position</value>
  </data>
  <data name="PositionList" xml:space="preserve">
    <value>List organization posts</value>
  </data>
  <data name="PositionWithColon" xml:space="preserve">
    <value>Title: {0}</value>
  </data>
  <data name="Presence" xml:space="preserve">
    <value>Presence</value>
  </data>
  <data name="PreviouslyDay" xml:space="preserve">
    <value>Prev. day</value>
  </data>
  <data name="ReaderIn" xml:space="preserve">
    <value>reader input</value>
  </data>
  <data name="ReaderOut" xml:space="preserve">
    <value>reader output</value>
  </data>
  <data name="ReasonAbsence" xml:space="preserve">
    <value>Absence for a valid reason</value>
  </data>
  <data name="ReportDate" xml:space="preserve">
    <value>Date and time of the report: {0: dd.MM.yyyy HH: mm: ss}</value>
  </data>
  <data name="ReportNotReady" xml:space="preserve">
    <value>Report not ready !!!</value>
  </data>
  <data name="Route" xml:space="preserve">
    <value>Route</value>
  </data>
  <data name="ScheduleDeviationNotConfirmed" xml:space="preserve">
    <value>Deviations from the schedule is not confirmed by a document h.</value>
  </data>
  <data name="ScheduleType" xml:space="preserve">
    <value>Type of schedule</value>
  </data>
  <data name="SecondName" xml:space="preserve">
    <value>middle name</value>
  </data>
  <data name="Sex" xml:space="preserve">
    <value>Floor</value>
  </data>
  <data name="StartDate" xml:space="preserve">
    <value>Date of beginning.</value>
  </data>
  <data name="StartTime" xml:space="preserve">
    <value>Start Time.</value>
  </data>
  <data name="Subsystem" xml:space="preserve">
    <value>Subsystem</value>
  </data>
  <data name="SystemDate" xml:space="preserve">
    <value>Date and time of the system</value>
  </data>
  <data name="SystemEventsReport" xml:space="preserve">
    <value>The report on the events of access control systems</value>
  </data>
  <data name="TimeoverOutSchedule" xml:space="preserve">
    <value>Recycling is the schedule</value>
  </data>
  <data name="Timeovers" xml:space="preserve">
    <value>processing</value>
  </data>
  <data name="Tottally" xml:space="preserve">
    <value>Total</value>
  </data>
  <data name="TottallyEvents" xml:space="preserve">
    <value>Total events: {0}</value>
  </data>
  <data name="TottallyRecords" xml:space="preserve">
    <value>Total entries: {0}</value>
  </data>
  <data name="ToZone" xml:space="preserve">
    <value>In the zone</value>
  </data>
  <data name="Type" xml:space="preserve">
    <value>A type</value>
  </data>
  <data name="UpstayDepart" xml:space="preserve">
    <value>A higher division</value>
  </data>
  <data name="User" xml:space="preserve">
    <value>User</value>
  </data>
  <data name="UserWithColon" xml:space="preserve">
    <value>User: {0}</value>
  </data>
  <data name="Validity" xml:space="preserve">
    <value>Validity</value>
  </data>
  <data name="Visitor" xml:space="preserve">
    <value>Visitor</value>
  </data>
  <data name="VisitorAbout" xml:space="preserve">
    <value>visitor</value>
  </data>
  <data name="VisitorNo" xml:space="preserve">
    <value>visitor</value>
  </data>
  <data name="Visitors" xml:space="preserve">
    <value>visitors</value>
  </data>
  <data name="WorkSchedule" xml:space="preserve">
    <value>Schedule</value>
  </data>
  <data name="WorkScheduleReport" xml:space="preserve">
    <value>Report on the work schedules</value>
  </data>
  <data name="WorkTimeSchedule" xml:space="preserve">
    <value>Working time schedule for the period h.</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>'Yes'</value>
  </data>
  <data name="Zone" xml:space="preserve">
    <value>Zone</value>
  </data>
  <data name="Zone1" xml:space="preserve">
    <value>Zone 1</value>
  </data>
  <data name="Zone2" xml:space="preserve">
    <value>Zone 2</value>
  </data>
  <data name="ZoneNotFound" xml:space="preserve">
    <value>The zone can not be found</value>
  </data>
</root>