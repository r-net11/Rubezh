<Window x:Class="GKImitator.Views.MainView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             Title="Имитатор ГК" MinWidth="800" MinHeight="600">

    <Window.Resources>
        <Style TargetType="TextBlock">
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="HorizontalAlignment" Value="Right" />
            <Setter Property="Margin" Value="1" />
            <Setter Property="Foreground" Value="White" />
        </Style>
    </Window.Resources>

    <Grid Background="White" Margin="5">
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <DataGrid Grid.Row="0" ItemsSource="{Binding Descriptors}" SelectedItem="{Binding SelectedDescriptor}" Margin="2">
            <DataGrid.Columns>
                <DataGridTemplateColumn Header="Объект" MinWidth="150">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <Image Source="{Binding GKBase.ImageSource}" Width="16" Height="16" Margin="5 0" />
                                <TextBlock Text="{Binding GKBase.PresentationName}" Margin="5 0" />
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTextColumn Header="Дескриптор ГК" Binding="{Binding GKBase.GKDescriptorNo}" />
                <DataGridTextColumn Header="Описание" Binding="{Binding GKBase.Description}" />
            </DataGrid.Columns>
        </DataGrid>
        <Grid Grid.Row="1" DataContext="{Binding SelectedDescriptor}" Margin="5">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <ItemsControl Grid.Column="0" ItemsSource="{Binding StateBits}">
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <CheckBox Content="{Binding StateBit, Converter={StaticResource EnumToDescriptionConverter}}" IsChecked="{Binding IsActive}" IsEnabled="{Binding IsEnabled}" Margin="1" />
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
            <StackPanel Grid.Column="1">
                <StackPanel Orientation="Horizontal">
                    <StackPanel>
						<Button Content="Автоматика" Command="{Binding SetAutomaticRegimeCommand}" Visibility="{Binding HasAutomaticRegime, Converter={StaticResource BoolToVisibilityConverter}}" IsEnabled="{Binding CanSetAutomaticRegime}" Width="100" Height="30" Margin="2" />
						<Button Content="Ручной" Command="{Binding SetManualRegimeCommand}" Visibility="{Binding HasManualRegime, Converter={StaticResource BoolToVisibilityConverter}}" IsEnabled="{Binding CanSetManualRegime}" Width="100" Height="30" Margin="2" />
						<Button Content="Отключение" Command="{Binding SetIgnoreRegimeCommand}" Visibility="{Binding HasIgnoreRegime, Converter={StaticResource BoolToVisibilityConverter}}" IsEnabled="{Binding CanSetIgnoreRegime}" Width="100" Height="30" Margin="2" />
                    </StackPanel>
                    <StackPanel IsEnabled="{Binding CanControl}">
                        <Button Content="Включить" Command="{Binding TurnOnCommand}" Visibility="{Binding HasTurnOn, Converter={StaticResource BoolToVisibilityConverter}}" Width="150" Height="30" Margin="2" />
                        <Button Content="Включить немедленно" Command="{Binding TurnOnNowCommand}" Visibility="{Binding HasTurnOnNow, Converter={StaticResource BoolToVisibilityConverter}}" Width="150" Height="30" Margin="2" />
                        <Button Content="Выключить" Command="{Binding TurnOffCommand}" Visibility="{Binding HasTurnOff, Converter={StaticResource BoolToVisibilityConverter}}" Width="150" Height="30" Margin="2" />
                        <Button Content="Выключить немедленно" Command="{Binding TurnOffNowCommand}" Visibility="{Binding HasTurnOffNow, Converter={StaticResource BoolToVisibilityConverter}}" Width="150" Height="30" Margin="2" />
                    </StackPanel>
                </StackPanel>

				<StackPanel Orientation="Horizontal" Visibility="{Binding HasOnDelay, Converter={StaticResource BoolToVisibilityConverter}}">
                    <TextBlock Text="Задержка на включение, с" Width="150" Foreground="Black" Margin="2" />
                    <TextBlock Text="{Binding CurrentOnDelay}" Width="150" Foreground="Black" Margin="2" />
                </StackPanel>

				<StackPanel Orientation="Horizontal" Visibility="{Binding HasHoldDelay, Converter={StaticResource BoolToVisibilityConverter}}">
                    <TextBlock Text="Удержание, с" Width="150" Foreground="Black" Margin="2" />
                    <TextBlock Text="{Binding CurrentHoldDelay}" Width="150" Foreground="Black" Margin="2" />
                </StackPanel>

				<StackPanel Orientation="Horizontal" Visibility="{Binding HasOffDelay, Converter={StaticResource BoolToVisibilityConverter}}">
                    <TextBlock Text="Задержка на выключение, с" Width="150" Foreground="Black" Margin="2" />
                    <TextBlock Text="{Binding CurrentOffDelay}" Width="150" Foreground="Black" Margin="2" />
                </StackPanel>

                <ItemsControl ItemsSource="{Binding Failures}">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <CheckBox IsChecked="{Binding IsChecked}" Content="{Binding JournalEventDescriptionType, Converter={StaticResource EnumToDescriptionConverter}}" Margin="2" />
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>

                <StackPanel Visibility="{Binding HasResetTest, Converter={StaticResource BoolToVisibilityConverter}, Mode=OneWay}" Orientation="Horizontal">
                    <Button Content="Тест кнопка" Command="{Binding TestButtonCommand}" Visibility="{Binding HasTestButton, Converter={StaticResource BoolToVisibilityConverter}, Mode=OneWay}" Width="100" Margin="2" />
                    <Button Content="Тест лазер" Command="{Binding TestLaserCommand}" Visibility="{Binding HasTestLaser, Converter={StaticResource BoolToVisibilityConverter}, Mode=OneWay}" Width="100" Margin="2" />
                    <Button Content="Сбросить тест" Command="{Binding ResetTestCommand}" Visibility="{Binding HasResetTest, Converter={StaticResource BoolToVisibilityConverter}, Mode=OneWay}" Width="100" Margin="2" />
                </StackPanel>
                <StackPanel Visibility="{Binding HasDustiness, Converter={StaticResource BoolToVisibilityConverter}, Mode=OneWay}" Orientation="Horizontal">
                    <Button Content="Предварительная запыленность" Command="{Binding SetPreDustinessCommand}" Width="200" Margin="2" />
                    <Button Content="Критическая запыленность" Command="{Binding SetCriticalDustinessCommand}" Width="200" Margin="2" />
                    <Button Content="Сбросить запыленность" Command="{Binding ResetDustinessCommand}" Width="200" Margin="2" />
                </StackPanel>
                <StackPanel Visibility="{Binding HasTechnoligicalCommands, Converter={StaticResource BoolToVisibilityConverter}, Mode=OneWay}" Orientation="Horizontal">
                    <Button Content="Перевести в технологический режим" Command="{Binding GoToTechnoligicalRegimeCommand}" Width="200" Margin="2" />
                    <Button Content="Перевести в рабочий режим" Command="{Binding GoToWorkingRegimeCommand}" Width="200" Margin="2" />
                </StackPanel>
                <StackPanel Visibility="{Binding HasUserCommands, Converter={StaticResource BoolToVisibilityConverter}, Mode=OneWay}" Orientation="Horizontal">
                    <Button Content="Вход пользователя" Command="{Binding EnterUserCommand}" Width="200" Margin="2" />
                    <Button Content="Выход пользователя" Command="{Binding ExitUserCommand}" Width="200" Margin="2" />
                </StackPanel>
                <StackPanel Visibility="{Binding HasResetFire, Converter={StaticResource BoolToVisibilityConverter}, Mode=OneWay}" Orientation="Horizontal">
                    <Button Content="Сработка по дыму" Command="{Binding SetFireSmokeCommand}" Visibility="{Binding HasSetFireSmoke, Converter={StaticResource BoolToVisibilityConverter}, Mode=OneWay}" Width="200" Margin="2" />
                    <Button Content="Сработка по температуре" Command="{Binding SetFireTemperatureCommand}" Visibility="{Binding HasSetFireTemperature, Converter={StaticResource BoolToVisibilityConverter}, Mode=OneWay}" Width="200" Margin="2" />
                    <Button Content="Сработка по градиенту температуры" Command="{Binding SetFireTemperatureGradientCommand}" Visibility="{Binding HasSetFireTemperatureGradient, Converter={StaticResource BoolToVisibilityConverter}, Mode=OneWay}" Width="200" Margin="2" />
                    <Button Content="Ручник сорван" Command="{Binding SetFireHeandDetectorCommand}" Visibility="{Binding HasSetFireHeandDetector, Converter={StaticResource BoolToVisibilityConverter}, Mode=OneWay}" Width="200" Margin="2" />
                    <Button Content="Сброс" Command="{Binding ResetFireCommand}" Visibility="{Binding HasResetFire, Converter={StaticResource BoolToVisibilityConverter}, Mode=OneWay}" Width="200" Margin="2" />
                </StackPanel>

				<Button Command="{Binding ShowParametersCommand}" Content="Параметры" Visibility="{Binding HasParameters, Converter={StaticResource BoolToVisibilityConverter}, Mode=OneWay}" Width="100" Margin="2" />
				
            </StackPanel>
        </Grid>
    </Grid>
</Window>