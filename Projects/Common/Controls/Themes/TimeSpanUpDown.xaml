<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converters="clr-namespace:Microsoft.Windows.Controls.Core.Converters;assembly=WPFToolkit.Extended"
    xmlns:prim="http://schemas.xceed.com/wpf/xaml/toolkit"
    xmlns:themes="clr-namespace:Xceed.Wpf.Toolkit.Themes;assembly=Xceed.Wpf.Toolkit"
	xmlns:ext="clr-namespace:Microsoft.Windows.Controls;assembly=WPFToolkit.Extended">
	<DataTemplate x:Key="DefaultWatermarkTemplate">
		<ContentControl Content="{Binding}"
                      Foreground="Gray"
                      Focusable="False"
                      Margin="0,0,3,0" />
	</DataTemplate>

	<Geometry x:Key="UpArrowGeometry">M 0 4 L 4 0 L 8 4 Z</Geometry>
	<Geometry x:Key="DownArrowGeometry">M 0 0 L 4 4 L 8 0 Z</Geometry>

	<DataTemplate x:Key="IncreaseGlyphNormalKey">
		<Path Width="8" Height="4" HorizontalAlignment="Center" VerticalAlignment="Center" Data="{StaticResource UpArrowGeometry}" Fill="White" Focusable="False" SnapsToDevicePixels="True" />
	</DataTemplate>
	<DataTemplate x:Key="IncreaseGlyphDisabledKey">
		<Path Width="8" Height="4" HorizontalAlignment="Center" VerticalAlignment="Center" Data="{StaticResource UpArrowGeometry}" Fill="White" Focusable="False" SnapsToDevicePixels="True" />
	</DataTemplate>
	<DataTemplate x:Key="DecreaseGlyphNormalKey">
		<Path Width="8" Height="4" HorizontalAlignment="Center" VerticalAlignment="Center" Data="{StaticResource DownArrowGeometry}" Fill="White" Focusable="False" SnapsToDevicePixels="True" />
	</DataTemplate>
	<DataTemplate x:Key="DecreaseGlyphDisabledKey">
		<Path Width="8" Height="4" HorizontalAlignment="Center" VerticalAlignment="Center" Data="{StaticResource DownArrowGeometry}" Fill="White" Focusable="False" SnapsToDevicePixels="True" />
	</DataTemplate>

	<!-- =============================================================================== -->
	<!-- TimeSpanUpDown                                                                  -->
	<!-- =============================================================================== -->

	<Style x:Key="TimeSpanUpDown"
          TargetType="{x:Type prim:TimeSpanUpDown}">
		<Setter Property="Background"
              Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
		<!--<Setter Property="BorderBrush"
              Value="{DynamicResource {x:Static themes:ResourceKeys.ControlNormalBorderKey}}" />-->
		<Setter Property="BorderThickness"
              Value="0" />
		<Setter Property="Foreground"
              Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
		<Setter Property="HorizontalContentAlignment"
              Value="Right" />
		<Setter Property="VerticalContentAlignment"
              Value="Center" />
		<Setter Property="TextAlignment"
              Value="Right" />
		<Setter Property="Maximum" Value="23:59:59" />
		<Setter Property="WatermarkTemplate"
              Value="{StaticResource DefaultWatermarkTemplate}" />
		<Setter Property="IsTabStop"
              Value="False" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type prim:TimeSpanUpDown}">
					<prim:ButtonSpinner x:Name="PART_Spinner"
                                    IsTabStop="False"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    HorizontalContentAlignment="Stretch"
                                    VerticalContentAlignment="Stretch"
                                    ButtonSpinnerLocation="{TemplateBinding ButtonSpinnerLocation}"
                                    AllowSpin="{TemplateBinding AllowSpin}"
                                    ShowButtonSpinner="{TemplateBinding ShowButtonSpinner}">
						<prim:WatermarkTextBox x:Name="PART_TextBox"
                                          BorderThickness="0"
                                          Background="Transparent"
                                          ContextMenu="{TemplateBinding ContextMenu}"
                                          FontFamily="{TemplateBinding FontFamily}"
                                          FontSize="{TemplateBinding FontSize}"
                                          FontStretch="{TemplateBinding FontStretch}"
                                          FontStyle="{TemplateBinding FontStyle}"
                                          FontWeight="{TemplateBinding FontWeight}"
                                          Foreground="{TemplateBinding Foreground}"
                                          HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                          IsUndoEnabled="{Binding IsUndoEnabled, RelativeSource={RelativeSource TemplatedParent}}"
                                          MinWidth="20"
                                          AcceptsReturn="False"
                                          Padding="3"
                                          TextAlignment="{TemplateBinding TextAlignment}"
                                          TextWrapping="NoWrap"
                                          TabIndex="{TemplateBinding TabIndex}"
                                          Text="{Binding Text, RelativeSource={RelativeSource TemplatedParent}}"
                                          Watermark="{TemplateBinding Watermark}"
                                          WatermarkTemplate="{TemplateBinding WatermarkTemplate}" />
					</prim:ButtonSpinner>
					<ControlTemplate.Triggers>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsReadOnly, RelativeSource={RelativeSource Self}}"
                                   Value="False" />
								<Condition Binding="{Binding AllowTextInput, RelativeSource={RelativeSource Self}}"
                                   Value="False" />
							</MultiDataTrigger.Conditions>
							<Setter Property="IsReadOnly"
                             Value="True"
                             TargetName="PART_TextBox" />
						</MultiDataTrigger>
						<DataTrigger Binding="{Binding IsReadOnly, RelativeSource={RelativeSource Self}}"
                               Value="True">
							<Setter Property="IsReadOnly"
                             Value="True"
                             TargetName="PART_TextBox" />
						</DataTrigger>
						<Trigger Property="IsFocused"
                           Value="True">
							<Setter TargetName="PART_TextBox"
                             Property="FocusManager.FocusedElement"
                             Value="{Binding ElementName=PART_TextBox}" />
						</Trigger>
						<Trigger Property="IsEnabled"
                           Value="False">
							<Setter Property="Foreground"
                             Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="{x:Type prim:TimeSpanUpDown}"
          BasedOn="{StaticResource TimeSpanUpDown}" />


	<Style x:Key="IncreaseButton" TargetType="RepeatButton">
		<Setter Property="Foreground" Value="White" />
		<Setter Property="Background" Value="{DynamicResource HighlightedBackgoundBrush}" />
		<Setter Property="BorderThickness" Value="0" />
		<Setter Property="Padding" Value="2" />
		<Setter Property="ContentTemplate" Value="{StaticResource IncreaseGlyphNormalKey}" />
		<Setter Property="Focusable" Value="False" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="RepeatButton">
					<Grid>
						<Border x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3,3,0,0" />
						<ContentPresenter Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="RepeatButton.IsMouseOver" Value="true">
							<Setter TargetName="Border" Property="Background" Value="{DynamicResource PressedBackgroundBrush}" />
						</Trigger>
						<Trigger Property="RepeatButton.IsPressed" Value="true">
							<Setter TargetName="Border" Property="Background" Value="{DynamicResource HighlightedBackgoundBrush}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="DecreaseButton" TargetType="RepeatButton">
		<Setter Property="Foreground" Value="White" />
		<Setter Property="Background" Value="{DynamicResource HighlightedBackgoundBrush}" />
		<Setter Property="BorderThickness" Value="0" />
		<Setter Property="Padding" Value="2" />
		<Setter Property="ContentTemplate" Value="{StaticResource DecreaseGlyphNormalKey}" />
		<Setter Property="Focusable" Value="False" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="RepeatButton">
					<Grid>
						<Border x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="0,0,3,3" />
						<ContentPresenter Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="RepeatButton.IsMouseOver" Value="true">
							<Setter TargetName="Border" Property="Background" Value="{DynamicResource PressedBackgroundBrush}" />
						</Trigger>
						<Trigger Property="RepeatButton.IsPressed" Value="true">
							<Setter TargetName="Border" Property="Background" Value="{DynamicResource HighlightedBackgoundBrush}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>


	<BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

	<Style TargetType="{x:Type prim:ButtonSpinner}">
		<Setter Property="Background" Value="White" />
		<Setter Property="BorderBrush" Value="Black" />
		<Setter Property="BorderThickness" Value="0" />
		<Setter Property="Focusable" Value="False" />
		<Setter Property="HorizontalContentAlignment" Value="Stretch" />
		<Setter Property="IsTabStop" Value="True" />
		<Setter Property="Padding" Value="1" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type prim:ButtonSpinner}">
					<Border x:Name="Border" CornerRadius="2" SnapsToDevicePixels="True" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" >
						<Grid>
							<Grid.ColumnDefinitions>
								<ColumnDefinition x:Name="firstContentColumn" Width="*" />
								<ColumnDefinition x:Name="secondContentColumn" Width="Auto" />
							</Grid.ColumnDefinitions>
							<ContentPresenter x:Name="contentPresenter" Focusable="False" Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
							<Grid x:Name="gridContent" Grid.Column="1" Visibility="{TemplateBinding ShowButtonSpinner, Converter={StaticResource BooleanToVisibilityConverter}}" Width="20">
								<Grid.RowDefinitions>
									<RowDefinition Height="*" />
									<RowDefinition Height="*" />
								</Grid.RowDefinitions>
								<RepeatButton x:Name="PART_IncreaseButton"
                                  Style="{StaticResource IncreaseButton}"
                                   IsTabStop="{TemplateBinding IsTabStop}"  />
								<RepeatButton x:Name="PART_DecreaseButton"
                                   Grid.Row="1"
                                   Style="{StaticResource DecreaseButton}"
                                   IsTabStop="{TemplateBinding IsTabStop}"  />
							</Grid>
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Background" Value="{DynamicResource {x:Static themes:ResourceKeys.ControlDisabledBackgroundKey}}" />
						</Trigger>
						<Trigger SourceName="PART_IncreaseButton" Property="IsEnabled" Value="False">
							<Setter TargetName="PART_IncreaseButton" Property="ContentTemplate" Value="{StaticResource IncreaseGlyphDisabledKey}" />
						</Trigger>
						<Trigger SourceName="PART_DecreaseButton" Property="IsEnabled" Value="False">
							<Setter TargetName="PART_DecreaseButton" Property="ContentTemplate" Value="{StaticResource DecreaseGlyphDisabledKey}" />
						</Trigger>
						<Trigger Property="ButtonSpinnerLocation"
                           Value="Left">
							<Setter TargetName="firstContentColumn"
                             Property="Width"
                             Value="Auto" />
							<Setter TargetName="secondContentColumn"
                             Property="Width"
                             Value="*" />
							<Setter TargetName="contentPresenter"
                             Property="Grid.Column"
                             Value="1" />
							<Setter TargetName="gridContent"
                             Property="Grid.Column"
                             Value="0" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>