<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:controls="clr-namespace:Controls">
	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="pack://application:,,,/Controls;component/Themes/ComboBoxStyle.xaml" />
	</ResourceDictionary.MergedDictionaries>

	<SolidColorBrush x:Key="WatermarkColor" Color="LightGray" />
	<SolidColorBrush x:Key="FocusBrush" Color="#FFE99862" />
	<SolidColorBrush x:Key="PopupBackground" Color="#ffffff" />
	<Color x:Key="AccentColor">#1ba1e2</Color>
	<SolidColorBrush x:Key="WindowBorderActive" Color="{StaticResource AccentColor}" />
	<Geometry x:Key="DownArrowGeometry">M 0 0 L 4 4 L 8 0 Z</Geometry>
	<SolidColorBrush x:Key="DisabledBackgroundBrush" Color="LightGray" />
	<SolidColorBrush x:Key="DisabledBorderBrush" Color="#ffffff" />

	<Style
		x:Key="FeaturedComboBoxItemBase"
		BasedOn="{StaticResource {x:Type ComboBoxItem}}"
		TargetType="{x:Type controls:FeaturedComboboxItem}" />

	<Style BasedOn="{StaticResource FeaturedComboBoxItemBase}" TargetType="{x:Type controls:FeaturedComboboxItem}" />

	<Style
		x:Key="ComboBoxNullItem"
		BasedOn="{StaticResource FeaturedComboBoxItemBase}"
		TargetType="{x:Type controls:FeaturedComboboxItem}">

		<!--<Setter Property="ContentTemplate" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ComboBoxEx}}, Path=NullItemTemplate}">

        </Setter>-->
	</Style>

	<ControlTemplate x:Key="ComboBoxTextBox" TargetType="TextBox">
		<ScrollViewer
			x:Name="PART_ContentHost"
			Background="{TemplateBinding Background}"
			Focusable="False" />
	</ControlTemplate>


	<Style
		x:Key="{x:Type controls:FeaturedComboBox}"
		BasedOn="{StaticResource {x:Type ComboBox}}"
		TargetType="{x:Type controls:FeaturedComboBox}">
		<!-- <Setter Property="SelectionBoxTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock Text="{Binding}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>-->
		<Setter Property="SelectionBoxNullItemTemplate">
			<Setter.Value>
				<DataTemplate>
					<ContentControl
						Content="{Binding}"
						Focusable="False"
						Foreground="{StaticResource WatermarkColor}" />
				</DataTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="VerticalContentAlignment" Value="Stretch" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:FeaturedComboBox}">
					<ControlTemplate.Resources>
						<Storyboard x:Key="FocusedOn">
							<DoubleAnimationUsingKeyFrames
								BeginTime="00:00:00"
								Storyboard.TargetName="FocusVisualElement"
								Storyboard.TargetProperty="(UIElement.Opacity)">
								<SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
						<Storyboard x:Key="FocusedOff">
							<DoubleAnimationUsingKeyFrames
								BeginTime="00:00:00"
								Storyboard.TargetName="FocusVisualElement"
								Storyboard.TargetProperty="(UIElement.Opacity)">
								<SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</ControlTemplate.Resources>
					<Grid Name="MainGrid" SnapsToDevicePixels="true">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*" />
							<ColumnDefinition Width="0" MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
						</Grid.ColumnDefinitions>
						<Rectangle
							x:Name="DisabledVisualElement"
							Fill="{StaticResource DisabledBackgroundBrush}"
							IsHitTestVisible="false"
							Opacity="0"
							RadiusX="0"
							RadiusY="0"
							Stroke="{StaticResource DisabledBorderBrush}" />
						<Rectangle
							x:Name="FocusVisualElement"
							Margin="-1"
							IsHitTestVisible="false"
							Opacity="0"
							Stroke="{StaticResource FocusBrush}"
							StrokeThickness="1" />
						<ToggleButton
							Grid.ColumnSpan="2"
							Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							IsChecked="{Binding Path=IsDropDownOpen,
						                                  Mode=TwoWay,
						                                  RelativeSource={RelativeSource TemplatedParent}}"
							Template="{StaticResource ComboBoxToggleButton}" />
						<Popup
							Name="PART_Popup"
							Grid.ColumnSpan="2"
							AllowsTransparency="true"
							IsOpen="{Binding Path=IsDropDownOpen,
						                        RelativeSource={RelativeSource TemplatedParent}}"
							Placement="Bottom"
							PopupAnimation="Slide">
							<Grid MinWidth="{Binding ElementName=MainGrid, Path=ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
								<Border
									Background="#0C000000"
									BorderBrush="#0F000000"
									BorderThickness="1"
									CornerRadius="2.5" />
								<Border
									Background="#0A000000"
									BorderBrush="#0C000000"
									BorderThickness="1"
									CornerRadius="2.75" />

								<Border
									x:Name="DropDownBorder"
									Margin="0 2 0 0"
									Background="{StaticResource PopupBackground}"
									BorderBrush="Black"
									BorderThickness="1"
									CornerRadius="4"
									SnapsToDevicePixels="True">
									<!--  popup border thickness not dependent on BorderThickness property  -->
									<ScrollViewer Name="DropDownScrollViewer">
										<Grid>
											<Grid.RowDefinitions>
												<RowDefinition Height="Auto" />
												<RowDefinition Height="*" />
											</Grid.RowDefinitions>
											<!--<Canvas
												Width="0"
												Height="0"
												HorizontalAlignment="Left"
												VerticalAlignment="Top">
												<Rectangle
													Name="OpaqueRect"
													Width="{Binding ElementName=DropDownBorder,
												                           Path=ActualWidth}"
													Height="{Binding ElementName=DropDownBorder,
												                            Path=ActualHeight}"
													Fill="{Binding ElementName=DropDownBorder,
												                          Path=Background}" />
											</Canvas>-->
											<StackPanel Margin="4 6" KeyboardNavigation.DirectionalNavigation="Contained">
												<controls:FeaturedComboboxItem
													x:Name="PART_NullValue"
													Content="{TemplateBinding NullValueText}"
													ContentTemplate="{TemplateBinding NullItemTemplate}"
													IsEnabled="{TemplateBinding CanSelectNullItem}"
													Style="{StaticResource ResourceKey=ComboBoxNullItem}" />
												<ItemsPresenter
													Name="ItemsPresenter"
													KeyboardNavigation.DirectionalNavigation="Contained"
													SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
											</StackPanel>
										</Grid>
									</ScrollViewer>
								</Border>
							</Grid>
						</Popup>
						<ContentPresenter
							x:Name="ContentSite"
							Margin="3"
							HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
							VerticalAlignment="Center"
							Content="{TemplateBinding SelectionBoxItem}"
							ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
							ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
							ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
							IsHitTestVisible="false"
							SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
						<TextBox
							x:Name="PART_EditableTextBox"
							Margin="3"
							HorizontalAlignment="Left"
							VerticalAlignment="Center"
							Background="Transparent"
							Focusable="True"
							IsReadOnly="{TemplateBinding IsReadOnly}"
							Style="{x:Null}"
							Template="{StaticResource ComboBoxTextBox}"
							Visibility="Hidden" />
						<!--<ToggleButton
							Grid.ColumnSpan="2"
							Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							IsChecked="{Binding Path=IsDropDownOpen,
						                                  Mode=TwoWay,
						                                  RelativeSource={RelativeSource TemplatedParent}}"
							Padding="0,0,0,10" />

						<Path
							Name="Arrow"
							Grid.ColumnSpan="1"
							Margin="3,1,8,0"
							HorizontalAlignment="Right"
							VerticalAlignment="Center"
							Data="{DynamicResource DownArrowGeometry}"
							Fill="{TemplateBinding Foreground}"
							IsHitTestVisible="False" />-->

					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="HasItems" Value="false">
							<Setter TargetName="DropDownBorder" Property="Height" Value="95" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{DynamicResource InputTextDisabled}" />
						</Trigger>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter Property="Background" Value="{DynamicResource InputBackgroundHover}" />
							<Setter Property="BorderBrush" Value="{DynamicResource InputBorderHover}" />
						</Trigger>
						<Trigger Property="IsFocused" Value="true">
							<Setter Property="BorderBrush" Value="{DynamicResource Accent}" />
						</Trigger>
						<Trigger Property="IsGrouping" Value="true">
							<Setter Property="ScrollViewer.CanContentScroll" Value="false" />
						</Trigger>
						<!--<Trigger SourceName="DropDownScrollViewer" Property="ScrollViewer.CanContentScroll" Value="false">
							<Setter TargetName="OpaqueRect" Property="Canvas.Top" Value="{Binding ElementName=DropDownScrollViewer, Path=VerticalOffset}" />
							<Setter TargetName="OpaqueRect" Property="Canvas.Left" Value="{Binding ElementName=DropDownScrollViewer, Path=HorizontalOffset}" />
						</Trigger>-->
						<Trigger Property="SelectedItem" Value="{x:Null}">
							<Setter TargetName="ContentSite" Property="ContentTemplate" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:FeaturedComboBox}}, Path=SelectionBoxNullItemTemplate}" />
							<Setter TargetName="ContentSite" Property="Content" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:FeaturedComboBox}}, Path=SelectionBoxNullValueText}" />
						</Trigger>
						<Trigger Property="SelectionBoxTemplate" Value="{x:Null}">
							<Setter TargetName="ContentSite" Property="ContentTemplate" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:FeaturedComboBox}}, Path=SelectionBoxItemTemplate}" />
						</Trigger>
						<!--    <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="SelectedItem"
                                           Value="{x:Null}" />
                                <Condition Property="IsEditable"
                                           Value="true" />
                                <Condition Property="IsFocused"
                                           Value="False" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="PART_EditableTextBox"
                                        Property="Style"
                                        Value="{StaticResource ComboBoxSearchtextBoxStyle}" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>-->
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>