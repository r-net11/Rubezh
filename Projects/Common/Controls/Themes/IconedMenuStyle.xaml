<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:Converters="clr-namespace:Controls.Converters" xmlns:local="clr-namespace:Controls">

	<Converters:StringToImageConverter x:Key="StringToImageConverter" />
	<Converters:NullToImageConverter x:Key="NullToImageConverter" />
	<Converters:StringToResourceConverter x:Key="StringToResourceConverter" />
	
	<SolidColorBrush x:Key="EnabledForegroundBrush" Color="Black" />

	<LinearGradientBrush x:Key="NormalBorderBrush" StartPoint="0,0" EndPoint="0,1">
		<GradientBrush.GradientStops>
			<GradientStopCollection>
				<GradientStop Offset="0.0" Color="#CCC" />
				<GradientStop Offset="1.0" Color="#444" />
			</GradientStopCollection>
		</GradientBrush.GradientStops>
	</LinearGradientBrush>

	<SolidColorBrush x:Key="SolidBorderBrush" Color="#888" />
	<SolidColorBrush x:Key="GlyphBrush" Color="#444" />

	<Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" TargetType="Separator">
		<Setter Property="Height" Value="1" />
		<Setter Property="Margin" Value="0,4,0,4" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Separator">
					<Border BorderBrush="{StaticResource SolidBorderBrush}" BorderThickness="1" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--  TopLevelHeader  -->
	<ControlTemplate x:Key="{x:Static local:IconedMenuItem.TopLevelHeaderTemplateKey}" TargetType="{x:Type local:IconedMenuItem}">
		<Border Name="Border" Padding="5 1">
			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition MaxWidth="{Binding Path=TotalHeight, RelativeSource={RelativeSource TemplatedParent}}" />
					<ColumnDefinition Width="*" />
				</Grid.ColumnDefinitions>
				<Grid Grid.Column="0 " Width="{Binding Path=TotalHeight, RelativeSource={RelativeSource TemplatedParent}}" Height="{Binding Path=TotalHeight, RelativeSource={RelativeSource TemplatedParent}}" Background="{Binding Path=ImageSource, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource StringToResourceConverter}}" />
				<TextBlock Grid.Column="1" Margin="2 0 0 0" VerticalAlignment="Center" Text="{Binding Path=Text, RelativeSource={RelativeSource TemplatedParent}}" />
				<Popup Name="Popup" AllowsTransparency="True" Focusable="False" IsOpen="{TemplateBinding IsSubmenuOpen}" Placement="Bottom" PopupAnimation="Fade">
					<Border Name="SubmenuBorder" Background="{DynamicResource WindowBackgroundBrush}" BorderBrush="{StaticResource SolidBorderBrush}" BorderThickness="1" SnapsToDevicePixels="True">
						<StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
					</Border>
				</Popup>
			</Grid>
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="IsSuspendingPopupAnimation" Value="true">
				<Setter TargetName="Popup" Property="PopupAnimation" Value="None" />
			</Trigger>
			<Trigger Property="IsHighlighted" Value="true">
				<Setter TargetName="Border" Property="Background" Value="{DynamicResource PressedBackgroundBrush}" />
				<Setter TargetName="Border" Property="BorderBrush" Value="Transparent" />
			</Trigger>
			<Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="True">
				<Setter TargetName="SubmenuBorder" Property="CornerRadius" Value="0,0,4,4" />
				<Setter TargetName="SubmenuBorder" Property="Padding" Value="0,0,0,3" />
			</Trigger>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
			</Trigger>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Foreground" Value="{StaticResource EnabledForegroundBrush}" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<!--  TopLevelItem  -->

	<ControlTemplate x:Key="{x:Static local:IconedMenuItem.TopLevelItemTemplateKey}" TargetType="{x:Type local:IconedMenuItem}">
		<Border Name="Border" Padding="5 1">
			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition MaxWidth="{Binding Path=TotalHeight, RelativeSource={RelativeSource TemplatedParent}}" />
					<ColumnDefinition Width="*" />
				</Grid.ColumnDefinitions>
				<Grid Grid.Column="0" Width="{Binding Path=TotalHeight, RelativeSource={RelativeSource TemplatedParent}}" Height="{Binding Path=TotalHeight, RelativeSource={RelativeSource TemplatedParent}}" Background="{Binding Path=ImageSource, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource StringToResourceConverter}}" />
				<TextBlock Grid.Column="1" Margin="2 0 0 0" VerticalAlignment="Center" Text="{Binding Path=Text, RelativeSource={RelativeSource TemplatedParent}}" />
			</Grid>
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="IsHighlighted" Value="true">
				<Setter TargetName="Border" Property="Background" Value="{DynamicResource PressedBackgroundBrush}" />
				<Setter TargetName="Border" Property="BorderBrush" Value="Transparent" />
			</Trigger>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<!--  SubmenuItem  -->

	<ControlTemplate x:Key="{x:Static local:IconedMenuItem.SubmenuItemTemplateKey}" TargetType="{x:Type local:IconedMenuItem}">
		<Border Name="Border" Padding="5 1">
			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition MaxWidth="{Binding Path=TotalHeight, RelativeSource={RelativeSource TemplatedParent}}" />
					<ColumnDefinition Width="*" />
				</Grid.ColumnDefinitions>
				<Grid Grid.Column="0" Width="{Binding Path=TotalHeight, RelativeSource={RelativeSource TemplatedParent}}" Height="{Binding Path=TotalHeight, RelativeSource={RelativeSource TemplatedParent}}" Background="{Binding Path=ImageSource, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource StringToResourceConverter}}" />
				<TextBlock Grid.Column="1" Margin="2 0 0 0" VerticalAlignment="Center" Text="{Binding Path=Text, RelativeSource={RelativeSource TemplatedParent}}" />
			</Grid>
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="IsHighlighted" Value="true">
				<Setter TargetName="Border" Property="Background" Value="{DynamicResource HighlightedBackgoundBrush}" />
			</Trigger>
			<Trigger Property="IsEnabled" Value="false">
				<Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<!--  SubmenuHeader  -->

	<ControlTemplate x:Key="{x:Static local:IconedMenuItem.SubmenuHeaderTemplateKey}" TargetType="{x:Type local:IconedMenuItem}">
		<Border Name="Border" Padding="5 1">
			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition MaxWidth="{Binding Path=TotalHeight, RelativeSource={RelativeSource TemplatedParent}}" />
					<ColumnDefinition Width="*" />
					<ColumnDefinition Width="Auto" />
				</Grid.ColumnDefinitions>
				<Grid Grid.Column="0" Width="{Binding Path=TotalHeight, RelativeSource={RelativeSource TemplatedParent}}" Height="{Binding Path=TotalHeight, RelativeSource={RelativeSource TemplatedParent}}" Background="{Binding Path=ImageSource, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource StringToResourceConverter}}" />
				<TextBlock Grid.Column="1" Margin="2 0" VerticalAlignment="Center" Text="{Binding Path=Text, RelativeSource={RelativeSource TemplatedParent}}" />
				<Path Grid.Column="2" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0 0 L 0 7 L 4 3.5 Z" Fill="{StaticResource GlyphBrush}" />
				<Popup Name="Popup" AllowsTransparency="True" Focusable="False" HorizontalOffset="-4" IsOpen="{TemplateBinding IsSubmenuOpen}" Placement="Right" PopupAnimation="Fade">
					<Border Name="SubmenuBorder" Background="{DynamicResource WindowBackgroundBrush}" BorderBrush="{StaticResource SolidBorderBrush}" BorderThickness="1" SnapsToDevicePixels="True">
						<StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
					</Border>
				</Popup>
			</Grid>
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="IsHighlighted" Value="true">
				<Setter TargetName="Border" Property="Background" Value="{DynamicResource HighlightedBackgoundBrush}" />
			</Trigger>
			<Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="True">
				<Setter TargetName="SubmenuBorder" Property="CornerRadius" Value="4" />
				<Setter TargetName="SubmenuBorder" Property="Padding" Value="0,3,0,3" />
			</Trigger>
			<Trigger Property="IsEnabled" Value="false">
				<Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<!--  MenuItem Style  -->

	<Style x:Key="{x:Type local:IconedMenuItem}" TargetType="{x:Type local:IconedMenuItem}">
		<Setter Property="OverridesDefaultStyle" Value="True" />
		<Style.Triggers>
			<Trigger Property="Role" Value="TopLevelHeader">
				<Setter Property="Template" Value="{StaticResource {x:Static local:IconedMenuItem.TopLevelHeaderTemplateKey}}" />
				<Setter Property="Grid.IsSharedSizeScope" Value="true" />
			</Trigger>
			<Trigger Property="Role" Value="TopLevelItem">
				<Setter Property="Template" Value="{StaticResource {x:Static local:IconedMenuItem.TopLevelItemTemplateKey}}" />
			</Trigger>
			<Trigger Property="Role" Value="SubmenuHeader">
				<Setter Property="Template" Value="{StaticResource {x:Static local:IconedMenuItem.SubmenuHeaderTemplateKey}}" />
			</Trigger>
			<Trigger Property="Role" Value="SubmenuItem">
				<Setter Property="Template" Value="{StaticResource {x:Static local:IconedMenuItem.SubmenuItemTemplateKey}}" />
			</Trigger>
		</Style.Triggers>
	</Style>

</ResourceDictionary>