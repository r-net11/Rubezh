<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:converters="clr-namespace:Controls.Converters"
	xmlns:loc="clr-namespace:Controls">

	<converters:ColorToAlphaColorConverter x:Key="ColorToAlphaColorConverter" />
	<converters:BrightnessToColorConverter x:Key="BrightnessToColorConverter" />
	<converters:HighlightCornerRadiusConverter x:Key="HighlightCornerRadiusConverter" />
	<converters:NullToImageConverter x:Key="NullToImageConverter" />

	<Storyboard
		x:Key="GlowOn"
		AutoReverse="True"
		RepeatBehavior="Forever">
		<DoubleAnimationUsingKeyFrames Storyboard.TargetName="Glow" Storyboard.TargetProperty="(UIElement.Opacity)">
			<SplineDoubleKeyFrame KeyTime="00:00:00" Value="0" />
			<SplineDoubleKeyFrame KeyTime="00:00:00.5" Value="1" />
		</DoubleAnimationUsingKeyFrames>
	</Storyboard>

	<Storyboard x:Key="GlowOff">
		<DoubleAnimationUsingKeyFrames Storyboard.TargetName="Glow" Storyboard.TargetProperty="(UIElement.Opacity)">
			<SplineDoubleKeyFrame KeyTime="00:00:00.01" Value="0" />
		</DoubleAnimationUsingKeyFrames>
	</Storyboard>

	<Style TargetType="{x:Type loc:AlarmButton}">
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="Foreground" Value="White" />
		<Setter Property="GlowColor" Value="YellowGreen" />
		<Setter Property="CornerRadius" Value="4" />
		<Setter Property="OuterBorderBrush" Value="White" />
		<Setter Property="OuterBorderThickness" Value="3" />
		<Setter Property="HighlightMargin" Value="1, 1, 0, 0" />
		<Setter Property="HighlightBrightness" Value="184" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type loc:AlarmButton}">
					<Border
						Name="OuterBorder"
						BorderBrush="{TemplateBinding OuterBorderBrush}"
						BorderThickness="{TemplateBinding OuterBorderThickness}"
						CornerRadius="{TemplateBinding CornerRadius}">

						<Grid>
							<Image
								Width="41"
								RenderOptions.BitmapScalingMode="NearestNeighbor"
								Source="{Binding Path=PathToIcon,
							                        RelativeSource={RelativeSource TemplatedParent},
							                        Converter={StaticResource NullToImageConverter}}" />
							<Border Name="padding" Margin="{TemplateBinding Padding}">
								<Grid>
									<TextBlock
										Name="alarmcount"
										HorizontalAlignment="Right"
										VerticalAlignment="Bottom"
										FontSize="11">
										<TextBlock.Style>
											<Style TargetType="{x:Type TextBlock}">
												<Setter Property="Text" Value="{Binding Count}" />
												<Setter Property="Foreground" Value="White" />
												<Setter Property="FontFamily" Value="Arial" />
												<Setter Property="Margin" Value="5" />
												<Setter Property="FontWeight" Value="Bold" />
												<Style.Triggers>
													<DataTrigger Binding="{Binding Count}" Value="0">
														<Setter Property="Text" Value="" />
													</DataTrigger>
												</Style.Triggers>
											</Style>
										</TextBlock.Style>
									</TextBlock>
									<ContentPresenter
										Name="content"
										Margin="5"
										HorizontalAlignment="Center"
										VerticalAlignment="Center"
										TextBlock.FontWeight="Bold"
										TextBlock.Foreground="{DynamicResource ForegroundColorLight}" />
								</Grid>
							</Border>

							<Control Name="Highlight">
								<Control.Template>
									<ControlTemplate TargetType="Control">
										<Grid>
											<Grid.RowDefinitions>
												<RowDefinition />
												<RowDefinition />
											</Grid.RowDefinitions>
											<Border
												x:Name="TopShine"
												Width="Auto"
												Margin="0,0,0,0"
												HorizontalAlignment="Stretch"
												CornerRadius="4,4,0,0">
												<Border.Background>
													<LinearGradientBrush StartPoint="0.5,0.116" EndPoint="0.5,0.938">
														<GradientStop Offset="0" Color="#99FFFFFF" />
														<GradientStop Offset="1" Color="#33FFFFFF" />
													</LinearGradientBrush>
												</Border.Background>
											</Border>
											<Border
												Grid.Row="0"
												Margin="{Binding HighlightMargin,
											                         RelativeSource={RelativeSource Mode=FindAncestor,
											                                                        AncestorType={x:Type loc:AlarmButton}}}"
												CornerRadius="{Binding CornerRadius,
											                               RelativeSource={RelativeSource FindAncestor,
											                                                              AncestorLevel=1,
											                                                              AncestorType={x:Type Border}},
											                               Converter={StaticResource HighlightCornerRadiusConverter}}">
												<Border.Background>
													<LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
														<GradientStop Offset="0" Color="{Binding HighlightBrightness, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type loc:AlarmButton}}, Converter={StaticResource BrightnessToColorConverter}}" />
														<GradientStop Offset="1" Color="#22FFFFFF" />
													</LinearGradientBrush>
												</Border.Background>
											</Border>
										</Grid>
									</ControlTemplate>
								</Control.Template>
							</Control>

							<Border
								x:Name="Glow"
								Grid.RowSpan="2"
								Width="Auto"
								Margin="0,0,0,0"
								HorizontalAlignment="Stretch"
								CornerRadius="4,4,4,4"
								Opacity="0.5">
								<Border.Background>
									<RadialGradientBrush Center="0.5,0.5" GradientOrigin="0,1" RadiusX="1" RadiusY="1">
										<GradientStop Offset="0" Color="{Binding GlowColor, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ColorToAlphaColorConverter}, ConverterParameter=174}" />
										<GradientStop Offset="1" Color="{Binding GlowColor, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ColorToAlphaColorConverter}, ConverterParameter=0}" />
									</RadialGradientBrush>
								</Border.Background>
							</Border>
						</Grid>
					</Border>

					<ControlTemplate.Triggers>
						<Trigger Property="IsPressed" Value="True">
							<Setter TargetName="OuterBorder" Property="Opacity" Value="0.9" />
							<Setter TargetName="Highlight" Property="Opacity" Value="0.5" />
						</Trigger>
						<Trigger Property="IsGlowing" Value="True">
							<Trigger.EnterActions>
								<BeginStoryboard Storyboard="{StaticResource GlowOn}" />
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<BeginStoryboard Storyboard="{StaticResource GlowOff}" />
							</Trigger.ExitActions>
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter TargetName="OuterBorder" Property="Opacity" Value="0.2" />
							<Setter TargetName="Highlight" Property="Opacity" Value="1.0" />
							<Setter TargetName="Glow" Property="Opacity" Value="0.0" />
							<Setter Property="Background" Value="DarkGray" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="{x:Type loc:XButton}">
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="Foreground" Value="White" />
		<Setter Property="GlowColor" Value="YellowGreen" />
		<Setter Property="CornerRadius" Value="4" />
		<Setter Property="OuterBorderBrush" Value="#4CFFFDFF" />
		<Setter Property="InnerBorderBrush" Value="#99000000" />
		<Setter Property="OuterBorderThickness" Value="1" />
		<Setter Property="InnerBorderThickness" Value="1" />
		<Setter Property="HighlightMargin" Value="1, 1, 0, 0" />
		<Setter Property="HighlightBrightness" Value="184" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type loc:XButton}">
					<Border
						Name="OuterBorder"
						BorderBrush="{TemplateBinding OuterBorderBrush}"
						BorderThickness="{TemplateBinding OuterBorderThickness}"
						CornerRadius="{Binding CornerRadius,
					                               ElementName=InnerBorder}">
						<Border
							Name="InnerBorder"
							Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding InnerBorderBrush}"
							BorderThickness="{TemplateBinding InnerBorderThickness}"
							CornerRadius="{TemplateBinding CornerRadius}">
							<Grid>
								<Border
									Name="padding"
									Margin="{TemplateBinding Padding}"
									HorizontalAlignment="Center"
									VerticalAlignment="Center">
									<ContentPresenter Name="content" />
								</Border>
								<Control Name="Highlight">
									<Control.Template>
										<ControlTemplate TargetType="Control">
											<Grid>
												<Grid.RowDefinitions>
													<RowDefinition />
													<RowDefinition />
												</Grid.RowDefinitions>
												<Border
													x:Name="TopShine"
													Width="Auto"
													Margin="0,0,0,0"
													HorizontalAlignment="Stretch"
													CornerRadius="4,4,0,0">
													<Border.Background>
														<LinearGradientBrush StartPoint="0.5,0.116" EndPoint="0.5,0.938">
															<GradientStop Offset="0" Color="#99FFFFFF" />
															<GradientStop Offset="1" Color="#33FFFFFF" />
														</LinearGradientBrush>
													</Border.Background>
												</Border>
												<Border
													Grid.Row="0"
													Margin="{Binding HighlightMargin,
												                         RelativeSource={RelativeSource Mode=FindAncestor,
												                                                        AncestorType={x:Type loc:XButton}}}"
													CornerRadius="{Binding CornerRadius,
												                               RelativeSource={RelativeSource FindAncestor,
												                                                              AncestorLevel=1,
												                                                              AncestorType={x:Type Border}},
												                               Converter={StaticResource HighlightCornerRadiusConverter}}">
													<Border.Background>
														<LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
															<GradientStop Offset="0" Color="{Binding HighlightBrightness, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type loc:XButton}}, Converter={StaticResource BrightnessToColorConverter}}" />
															<GradientStop Offset="1" Color="#22FFFFFF" />
														</LinearGradientBrush>
													</Border.Background>
												</Border>
											</Grid>
										</ControlTemplate>
									</Control.Template>
								</Control>

								<Border
									x:Name="Glow"
									Grid.RowSpan="2"
									Width="Auto"
									Margin="0,0,0,0"
									HorizontalAlignment="Stretch"
									CornerRadius="4,4,4,4"
									Opacity="0.5">
									<Border.Background>
										<RadialGradientBrush>
											<RadialGradientBrush.RelativeTransform>
												<TransformGroup>
													<ScaleTransform
														CenterX="0.5"
														CenterY="0.5"
														ScaleX="1.725"
														ScaleY="2.013" />
													<SkewTransform AngleX="0" AngleY="0" CenterX="0.5" CenterY="0.5" />
													<RotateTransform Angle="0" CenterX="0.5" CenterY="0.5" />
													<TranslateTransform X="-0.01" Y="0.507" />
												</TransformGroup>
											</RadialGradientBrush.RelativeTransform>
											<GradientStop Offset="0" Color="{Binding GlowColor, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ColorToAlphaColorConverter}, ConverterParameter=174}" />
											<GradientStop Offset="1" Color="{Binding GlowColor, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ColorToAlphaColorConverter}, ConverterParameter=0}" />
										</RadialGradientBrush>
									</Border.Background>
								</Border>
							</Grid>
						</Border>
					</Border>

					<ControlTemplate.Triggers>
						<Trigger Property="IsPressed" Value="True">
							<Setter TargetName="OuterBorder" Property="Opacity" Value="0.9" />
							<Setter TargetName="InnerBorder" Property="Opacity" Value="0.9" />
							<Setter TargetName="content" Property="Margin" Value="2, 2, 0, 0" />
							<Setter TargetName="Highlight" Property="Opacity" Value="0.5" />
						</Trigger>
						<Trigger Property="IsGlowing" Value="True">
							<Trigger.EnterActions>
								<BeginStoryboard Storyboard="{StaticResource GlowOn}" />
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<BeginStoryboard Storyboard="{StaticResource GlowOff}" />
							</Trigger.ExitActions>
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter TargetName="OuterBorder" Property="Opacity" Value="0.9" />
							<Setter TargetName="InnerBorder" Property="Opacity" Value="0.9" />
							<Setter TargetName="content" Property="Margin" Value="2, 2, 0, 0" />
							<Setter TargetName="Highlight" Property="Opacity" Value="1.0" />
							<Setter TargetName="Glow" Property="Opacity" Value="0.0" />
							<Setter Property="Background" Value="DarkGray" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>