<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:Converters="clr-namespace:Controls.Converters">

	<Style x:Key="OutlookTreeView" TargetType="{x:Type TreeView}">
		<Style.Resources>
			<Converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
			<SolidColorBrush x:Key="CaptionBrush" Color= "#FFFFFF" />
			<SolidColorBrush x:Key="BorderBrush" Color="#343337" />
			<Style TargetType="{x:Type TreeViewItem}">
				<Setter Property="Padding" Value="12,2,12,2"/>
				<Setter Property="Margin" Value="0 0 0 5"/>
				<Setter Property="Foreground" Value="White"/>
				<Setter Property="Background" Value="{DynamicResource BackgroundBrush}"/>
				<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
				<Setter Property="VerticalContentAlignment" Value="Stretch"/>
				<Setter Property="IsExpanded" Value="{Binding Path=IsExpanded, Mode=TwoWay}"/>
				<Setter Property="IsSelected" Value="{Binding Path=IsSelected, Mode=TwoWay}"/>
				<Setter Property="Visibility" Value="{Binding Path=IsVisible, Converter={StaticResource BoolToVisibilityConverter}}"/>
				<Setter Property="Focusable" Value="{Binding Path=IsSelectionAllowed}"/>
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type TreeViewItem}">
							<StackPanel Orientation="Vertical">
								<Border x:Name="Header" 
										Background="{TemplateBinding Background}"
										ToolTip="{Binding Title}"
										BorderBrush="{StaticResource BorderBrush}"
										BorderThickness="1"
										CornerRadius="3" MinHeight="32"
										SnapsToDevicePixels="true">
									<ContentPresenter TextBlock.FontSize="8pt" 
													  TextBlock.FontFamily="Arial" 
													  TextBlock.FontWeight="Bold"
													  TextBlock.Foreground="{StaticResource CaptionBrush}"
													  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
													  Margin="{TemplateBinding Padding}"
													  VerticalAlignment="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
													  ContentSource="Header" RecognizesAccessKey="True" HorizontalAlignment="Left" />
								</Border>
								<ContentControl x:Name="Content">
									<ItemsPresenter/>
								</ContentControl>
							</StackPanel>
							<ControlTemplate.Triggers>
								<Trigger Property="IsExpanded" Value="True">
									<Setter Property="Visibility" TargetName="Content" Value="Visible"/>
								</Trigger>
								<Trigger Property="IsExpanded" Value="False">
									<Setter Property="Visibility" TargetName="Content" Value="Collapsed"/>
								</Trigger>
								<MultiTrigger>
									<MultiTrigger.Conditions>
										<Condition Property="HasItems" Value="True"/>
										<Condition Property="IsExpanded" Value="True"/>
									</MultiTrigger.Conditions>
									<MultiTrigger.Setters>
										<Setter Property="Margin" TargetName="Content" Value="15,5,0,0"/>
										<Setter Property="Margin" Value="0,0,0,0"/>
									</MultiTrigger.Setters>
								</MultiTrigger>
								<MultiTrigger>
									<MultiTrigger.Conditions>
										<Condition Property="HasItems" Value="True"/>
										<Condition Property="IsExpanded" Value="False"/>
									</MultiTrigger.Conditions>
									<MultiTrigger.Setters>
										<Setter Property="Margin" Value="0,0,0,5"/>
									</MultiTrigger.Setters>
								</MultiTrigger>
								<MultiTrigger>
									<MultiTrigger.Conditions>
										<Condition Property="IsSelected" Value="False" />
										<Condition Property="IsMouseOver" SourceName="Header" Value="False" />
									</MultiTrigger.Conditions>
									<MultiTrigger.Setters>
										<Setter Property="Background" Value="{DynamicResource BackgroundBrush}" />
									</MultiTrigger.Setters>
								</MultiTrigger>
								<MultiTrigger>
									<MultiTrigger.Conditions>
										<Condition Property="IsSelected" Value="False" />
										<Condition Property="IsMouseOver" SourceName="Header" Value="True" />
									</MultiTrigger.Conditions>
									<MultiTrigger.Setters>
										<Setter Property="Background" Value="{DynamicResource HighlightedBackgoundBrush}" />
									</MultiTrigger.Setters>
								</MultiTrigger>
								<Trigger Property="IsSelected" Value="True">
									<Setter Property="TextElement.Foreground" Value="White" />
									<Setter Property="Background" Value="{DynamicResource HighlightedBackgoundBrush}" />
								</Trigger>
								<Trigger Property="IsSelected" Value="False">
									<Setter Property="TextElement.Foreground" Value="{StaticResource CaptionBrush}" />
								</Trigger>
								<MultiTrigger>
									<MultiTrigger.Conditions>
										<Condition Property="IsSelected" Value="True" />
										<Condition Property="IsMouseOver" SourceName="Header" Value="True" />
									</MultiTrigger.Conditions>
									<MultiTrigger.Setters>
										<Setter Property="Background" Value="{DynamicResource PressedBackgroundBrush}" />
									</MultiTrigger.Setters>
								</MultiTrigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
		</Style.Resources>
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="BorderThickness" Value="0"/>
	</Style>
</ResourceDictionary>