<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:Controls="clr-namespace:Controls" xmlns:Converters="clr-namespace:Controls.Converters" xmlns:s="clr-namespace:System;assembly=mscorlib">

	<Converters:LevelToIndentConverter x:Key="LevelToIndentConverter" />

	<Style BasedOn="{StaticResource {x:Type TreeViewItem}}" TargetType="{x:Type Controls:TreeListViewItem}">
		<Setter Property="Panel.Background" Value="#00FFFFFF" />
		<Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
		<Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
		<Setter Property="Control.HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ItemsControl}}" />
		<Setter Property="Control.VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ItemsControl}}" />
		<Setter Property="Control.Padding" Value="1,0,0,0" />
		<Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
		<Setter Property="BorderThickness" Value="0,0,0,1" />
		<Setter Property="BorderBrush" Value="LightGray" />
		<Setter Property="VirtualizingStackPanel.IsVirtualizing" Value="True" />
		<Setter Property="VirtualizingStackPanel.VirtualizationMode" Value="Recycling" />
		<Setter Property="FrameworkElement.FocusVisualStyle">
			<Setter.Value>
				<Style TargetType="IFrameworkInputElement">
					<Setter Property="Control.Template">
						<Setter.Value>
							<ControlTemplate>
								<Rectangle />
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Style>
			</Setter.Value>
		</Setter>
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate TargetType="Controls:TreeListViewItem">
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*" />
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto" />
							<RowDefinition />
						</Grid.RowDefinitions>
						<Border Name="Bd" Grid.Row="0" Background="{TemplateBinding Panel.Background}" BorderBrush="{TemplateBinding Border.BorderBrush}" BorderThickness="{TemplateBinding Border.BorderThickness}" Padding="{TemplateBinding Control.Padding}" SnapsToDevicePixels="True">
							<Controls:TreeGridViewRowPresenter x:Name="PART_Header" Height="{Binding Path=RowHeight, RelativeSource={RelativeSource AncestorType={x:Type Controls:TreeListView}}}" Columns="{Binding Path=Columns, RelativeSource={RelativeSource AncestorType={x:Type Controls:TreeListView}}}" Content="{TemplateBinding Header}" FirstColumnIndent="{Binding Level, Converter={StaticResource LevelToIndentConverter}, RelativeSource={RelativeSource AncestorType={x:Type Controls:TreeListViewItem}}, ConverterParameter=19}">
								<Controls:TreeGridViewRowPresenter.Resources>
									<Style TargetType="{x:Type ContentPresenter}">
										<Setter Property="VerticalAlignment" Value="Center" />
									</Style>
								</Controls:TreeGridViewRowPresenter.Resources>
								<Controls:TreeGridViewRowPresenter.Expander>
									<Grid>
										<ToggleButton Name="Expander" Width="21" Height="20" Margin="-1" ClickMode="Press" IsChecked="{Binding Path=IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource AncestorType={x:Type Controls:TreeListViewItem}}}">
											<ToggleButton.Style>
												<Style TargetType="ToggleButton">
													<Setter Property="UIElement.Focusable" Value="False" />
													<Setter Property="FrameworkElement.Width" Value="19" />
													<Setter Property="FrameworkElement.Height" Value="13" />
													<Setter Property="Control.Template">
														<Setter.Value>
															<ControlTemplate TargetType="ToggleButton">
																<Border Background="Transparent">
																	<Path x:Name="CheckMark" Margin="2" HorizontalAlignment="Center" VerticalAlignment="Center" Fill="Gray" UseLayoutRounding="False" />
																</Border>
																<ControlTemplate.Triggers>
																	<Trigger Property="IsMouseOver" Value="True">
																		<Setter TargetName="CheckMark" Property="Fill" Value="{DynamicResource HighlightedBackgoundBrush}" />
																	</Trigger>
																	<Trigger Property="IsChecked" Value="False">
																		<Setter TargetName="CheckMark" Property="Data" Value="M6,2 L10,2 L10,-2 L12,-2 L12,2 L16,2 L16,4 L12,4 L12,8 L10,8 L10,4 L6,4 L6,2 z" />
																	</Trigger>
																	<Trigger Property="IsChecked" Value="True">
																		<Setter TargetName="CheckMark" Property="Data" Value="M6,2 L16,2 L16,4 L6,4 z" />
																	</Trigger>
																</ControlTemplate.Triggers>
															</ControlTemplate>
														</Setter.Value>
													</Setter>
												</Style>
											</ToggleButton.Style>
										</ToggleButton>
									</Grid>
								</Controls:TreeGridViewRowPresenter.Expander>
							</Controls:TreeGridViewRowPresenter>
						</Border>
						<ItemsPresenter Name="ItemsHost" Grid.Row="1" VirtualizingStackPanel.IsVirtualizing="True" VirtualizingStackPanel.VirtualizationMode="Recycling" />
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="TreeViewItem.IsExpanded" Value="False">
							<Setter TargetName="ItemsHost" Property="UIElement.Visibility" Value="{x:Static Visibility.Collapsed}" />
						</Trigger>
						<Trigger Property="ItemsControl.HasItems" Value="False">
							<Setter TargetName="Expander" Property="UIElement.Visibility" Value="{x:Static Visibility.Hidden}" />
						</Trigger>
						<Trigger Property="TreeViewItem.IsSelected" Value="True">
							<Setter TargetName="Bd" Property="Panel.Background" Value="{DynamicResource PressedBackgroundBrush}" />
							<Setter Property="TextElement.Foreground" Value="White" />
						</Trigger>
						<Trigger Property="UIElement.IsEnabled" Value="False">
							<Setter Property="TextElement.Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="treelistviewscroll" TargetType="{x:Type ScrollViewer}">
		<Setter Property="UIElement.Focusable" Value="False" />
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ScrollViewer}">
					<Grid Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*" />
							<ColumnDefinition Width="Auto" />
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto" />
							<RowDefinition Height="*" />
							<RowDefinition Height="Auto" />
						</Grid.RowDefinitions>
						<ScrollViewer Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="1" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden">
							<GridViewHeaderRowPresenter Columns="{Binding Path=Columns, RelativeSource={RelativeSource AncestorType={x:Type Controls:TreeListView}}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
						</ScrollViewer>
						<Rectangle Grid.Row="0" Grid.Column="1" Fill="{DynamicResource BackgroundBrush}" SnapsToDevicePixels="True" />
						<ScrollContentPresenter Name="PART_ScrollContentPresenter" Grid.Row="1" Grid.Column="0" CanContentScroll="{TemplateBinding CanContentScroll}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" KeyboardNavigation.DirectionalNavigation="Local" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
						<ScrollBar Name="PART_VerticalScrollBar" Grid.Row="1" Grid.Column="1" Cursor="Arrow" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0.0" Orientation="Vertical" ViewportSize="{TemplateBinding ViewportHeight}" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding Path=VerticalOffset, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
						<ScrollBar Name="PART_HorizontalScrollBar" Grid.Row="2" Grid.Column="0" Cursor="Arrow" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0.0" Orientation="Horizontal" ViewportSize="{TemplateBinding ViewportWidth}" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding Path=HorizontalOffset, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
						<DockPanel Grid.Row="2" Grid.Column="1" Background="{Binding Path=Background, ElementName=PART_VerticalScrollBar}" LastChildFill="false">
							<Rectangle Width="1" DockPanel.Dock="Left" Fill="White" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" />
							<Rectangle Height="1" DockPanel.Dock="Top" Fill="White" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" />
						</DockPanel>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style BasedOn="{StaticResource {x:Type TreeView}}" TargetType="{x:Type Controls:TreeListView}">
		<Setter Property="ItemTemplate">
			<Setter.Value>
				<HierarchicalDataTemplate ItemsSource="{Binding Children}" />
			</Setter.Value>
		</Setter>
		<Setter Property="Panel.Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
		<Setter Property="Border.BorderBrush" Value="#00FFFFFF" />
		<Setter Property="Border.BorderThickness" Value="2,2,2,2" />
		<Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="{x:Static ScrollBarVisibility.Auto}" />
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="{x:Static ScrollBarVisibility.Visible}" />
		<Setter Property="ScrollViewer.CanContentScroll" Value="True" />
		<Setter Property="RowHeight" Value="19" />
		<Setter Property="VirtualizingStackPanel.IsVirtualizing" Value="True" />
		<Setter Property="VirtualizingStackPanel.VirtualizationMode" Value="Recycling" />
		<Setter Property="Controls:ListViewLayoutManager.Enabled" Value="True" />
		<Setter Property="Controls:ListViewLayoutManager.MinWidth" Value="50" />
		<Setter Property="Controls:ListViewLayoutManager.Columns" Value="{Binding Columns, RelativeSource={RelativeSource Self}}" />
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate TargetType="Controls:TreeListView">
					<Grid>
						<Border Name="Bd" Margin="1" Background="DarkGray" BorderThickness="0" CornerRadius="5" />
						<Grid>
							<Grid.OpacityMask>
								<VisualBrush Visual="{Binding Source={x:Reference Bd}}" />
							</Grid.OpacityMask>
							<ScrollViewer Background="{TemplateBinding Background}" CanContentScroll="True" Focusable="False" HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Style="{StaticResource treelistviewscroll}" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
								<ItemsPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
							</ScrollViewer>
						</Grid>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="UIElement.IsEnabled" Value="False">
							<Setter TargetName="Bd" Property="Panel.Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>