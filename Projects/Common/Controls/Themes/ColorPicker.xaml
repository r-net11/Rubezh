<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:conv="clr-namespace:Xceed.Wpf.Toolkit.Core.Converters;assembly=Xceed.Wpf.Toolkit" xmlns:loc="clr-namespace:Controls" xmlns:xc="clr-namespace:Xceed.Wpf.Toolkit;assembly=Xceed.Wpf.Toolkit" xmlns:c="clr-namespace:Controls.Converters"
                    xmlns:lang="clr-namespace:Localization.Common.Controls;assembly=Localization.Common">
	<SolidColorBrush x:Key="ButtonHover" Color="#C2E0FF" />
	<SolidColorBrush x:Key="ButtonHoverBorder" Color="#3399FF" />
	<SolidColorBrush x:Key="ButtonChecked" Color="#E6F0FA" />
	<SolidColorBrush x:Key="ButtonPressed" Color="#99CCFF" />
	<SolidColorBrush x:Key="ButtonPressedBorder" Color="#3399FF" />

	<DrawingBrush x:Key="CheckerBrush" TileMode="Tile" Viewport="0,0,10,10" ViewportUnits="Absolute">
		<DrawingBrush.Drawing>
			<DrawingGroup>
				<GeometryDrawing Brush="White">
					<GeometryDrawing.Geometry>
						<RectangleGeometry Rect="0,0 100,100" />
					</GeometryDrawing.Geometry>
				</GeometryDrawing>
				<GeometryDrawing Brush="LightGray">
					<GeometryDrawing.Geometry>
						<GeometryGroup>
							<RectangleGeometry Rect="0,0 50,50" />
							<RectangleGeometry Rect="50,50 50,50" />
						</GeometryGroup>
					</GeometryDrawing.Geometry>
				</GeometryDrawing>
			</DrawingGroup>
		</DrawingBrush.Drawing>
	</DrawingBrush>

	<BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
	<conv:InverseBoolConverter x:Key="InverseBoolConverter" />
	<conv:ColorToSolidColorBrushConverter x:Key="ColorToSolidColorBrushConverter" />
	<c:ColorToNameConverter x:Key="ColorToNameConverter" />

	<LinearGradientBrush x:Key="ColorPickerDarkBorderBrush" StartPoint="0.5,0" EndPoint="0.5,1">
		<GradientStop Offset="0" Color="#FFA3AEB9" />
		<GradientStop Offset="0.375" Color="#FF8399A9" />
		<GradientStop Offset="0.375" Color="#FF718597" />
		<GradientStop Offset="1" Color="#FF617584" />
	</LinearGradientBrush>

	<LinearGradientBrush x:Key="PopupBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
		<LinearGradientBrush.GradientStops>
			<GradientStopCollection>
				<GradientStop Offset="0" Color="#FFffffff" />
				<GradientStop Offset="1" Color="#FFE8EBED" />
			</GradientStopCollection>
		</LinearGradientBrush.GradientStops>
	</LinearGradientBrush>

	<Style x:Key="ColorItemContainerStyle" TargetType="{x:Type ListBoxItem}">
		<Setter Property="ToolTip" Value="{Binding Color, Converter={StaticResource ColorToNameConverter}}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ListBoxItem}">
					<Grid ToolTip="{Binding Color, Converter={StaticResource ColorToNameConverter}}">
						<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
						<Border x:Name="_outerBorder" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="Transparent" BorderBrush="Transparent" BorderThickness="1">
							<Border x:Name="_innerBorder" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="Transparent" BorderBrush="Transparent" BorderThickness="1" />
						</Border>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="_outerBorder" Property="BorderBrush" Value="#FFFF0000" />
							<Setter TargetName="_innerBorder" Property="BorderBrush" Value="#FFFFFF00" />
						</Trigger>
						<Trigger Property="IsSelected" Value="True">
							<Setter TargetName="_outerBorder" Property="BorderBrush" Value="#FFFF0000" />
							<Setter TargetName="_innerBorder" Property="BorderBrush" Value="#FFFFFF00" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<DataTemplate x:Key="ColorItemTemplate">
		<Grid>
			<Border Margin="2,2,2,2" Background="{StaticResource CheckerBrush}" BorderBrush="Black" BorderThickness="1">
				<Rectangle Width="14" Height="14">
					<Rectangle.Style>
						<Style TargetType="Rectangle">
							<Setter Property="Fill" Value="{Binding Color, Converter={StaticResource ColorToSolidColorBrushConverter}}" />
						</Style>
					</Rectangle.Style>
				</Rectangle>
			</Border>
		</Grid>
	</DataTemplate>

	<Style x:Key="ColorPickerToggleButtonStyle" TargetType="ToggleButton">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ToggleButton">
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition />
							<ColumnDefinition Width="20" />
						</Grid.ColumnDefinitions>
						<Border x:Name="Border" Grid.ColumnSpan="2" Background="{DynamicResource HighlightedBackgoundBrush}" BorderThickness="0" CornerRadius="2" />
						<Border Grid.Column="0" Margin="0" Background="{DynamicResource WindowBackgroundBrush}" BorderThickness="0" CornerRadius="2,0,0,2">
							<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" />
						</Border>
						<Path x:Name="Arrow" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0 0 L 4 4 L 8 0 Z" Fill="White" />
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="ToggleButton.IsMouseOver" Value="true">
							<Setter TargetName="Border" Property="Background" Value="{DynamicResource PressedBackgroundBrush}" />
						</Trigger>
						<Trigger Property="ToggleButton.IsChecked" Value="true">
							<Setter TargetName="Border" Property="Background" Value="{DynamicResource HighlightedBackgoundBrush}" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
							<Setter TargetName="Arrow" Property="Fill" Value="{DynamicResource DisabledForegroundBrush}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="ColorDisplayStyle" TargetType="ContentControl">
		<Setter Property="ContentTemplate">
			<Setter.Value>
				<DataTemplate>
					<Border Background="{StaticResource CheckerBrush}">
						<Rectangle Fill="{Binding SelectedColor, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=xc:ColorPicker}, Converter={StaticResource ColorToSolidColorBrushConverter}}" />
					</Border>
				</DataTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="ColorListStyle" TargetType="ListBox">
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="BorderThickness" Value="0" />
		<Setter Property="ItemsPanel">
			<Setter.Value>
				<ItemsPanelTemplate>
					<WrapPanel Width="200" />
				</ItemsPanelTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="ItemContainerStyle" Value="{StaticResource ColorItemContainerStyle}" />
		<Setter Property="ItemTemplate" Value="{StaticResource ColorItemTemplate}" />
		<Setter Property="SelectionMode" Value="Single" />
	</Style>

	<Style TargetType="{x:Type xc:ColorPicker}">
		<Setter Property="Background" Value="White" />
		<Setter Property="BorderBrush" Value="{StaticResource ColorPickerDarkBorderBrush}" />
		<Setter Property="BorderThickness" Value="1,1,1,1" />
		<Setter Property="ButtonStyle" Value="{StaticResource ColorPickerToggleButtonStyle}" />
		<Setter Property="Focusable" Value="False" />
		<Setter Property="HorizontalContentAlignment" Value="Stretch" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="AvailableColorsHeader" Value="{x:Static lang:CommonResources.Available}" />
		<Setter Property="StandardColorsHeader" Value="{x:Static lang:CommonResources.Standart}" />
		<Setter Property="RecentColorsHeader" Value="{x:Static lang:CommonResources.Last}" />
		<Setter Property="ShowRecentColors" Value="False" />
		<Setter Property="DisplayColorAndName" Value="False" />
		<Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=SelectedColor}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type xc:ColorPicker}">
					<Grid>
						<ToggleButton x:Name="PART_ColorPickerToggleButton" MinHeight="22"
									  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
									  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
									  Background="{TemplateBinding Background}"
									  BorderBrush="{TemplateBinding BorderBrush}"
									  BorderThickness="{TemplateBinding BorderThickness}"
									  IsChecked="{Binding IsOpen,
														  RelativeSource={RelativeSource TemplatedParent},
														  Mode=TwoWay}"
									  IsHitTestVisible="{Binding IsOpen,
																 RelativeSource={RelativeSource TemplatedParent},
																 Converter={StaticResource InverseBoolConverter}}"
									  IsTabStop="True"
									  Padding="{TemplateBinding Padding}"
									  Style="{TemplateBinding ButtonStyle}">
							<Grid Margin="2">
								<ContentControl x:Name="ColorOnly" Style="{StaticResource ColorDisplayStyle}" />
								<Border x:Name="ColorAndName" Background="White" Visibility="Hidden">
									<StackPanel Orientation="Horizontal">
										<ContentControl Width="20" Margin="2,1,4,1" HorizontalAlignment="Left" BorderBrush="#FFC9CACA" BorderThickness="1" Style="{StaticResource ColorDisplayStyle}" />
										<TextBlock VerticalAlignment="Center" Text="{Binding SelectedColorText, RelativeSource={RelativeSource TemplatedParent}}" />
									</StackPanel>
								</Border>
							</Grid>
						</ToggleButton>
						<Popup x:Name="PART_ColorPickerPalettePopup" VerticalAlignment="Bottom" AllowsTransparency="True" Focusable="False" HorizontalOffset="-1" IsOpen="{Binding ElementName=PART_ColorPickerToggleButton, Path=IsChecked}" PopupAnimation="Slide" StaysOpen="False" VerticalOffset="3">
							<!--  <Border Background="{StaticResource PopupBackgroundBrush}" BorderBrush="{StaticResource ColorPickerDarkBorderBrush}" BorderThickness="1" Padding="3">  -->
							<Border x:Name="DropDownBorder" Background="{DynamicResource BaseWindowBackgroundBrush}" BorderBrush="Black" BorderThickness="1" CornerRadius="5" Padding="3">
								<Grid>
									<Grid.RowDefinitions>
										<RowDefinition Height="Auto" />
										<RowDefinition />
										<RowDefinition Height="Auto" />
									</Grid.RowDefinitions>

									<Grid x:Name="_gridStandardColorsHost" Margin="4">
										<Grid.RowDefinitions>
											<RowDefinition Height="Auto" />
											<RowDefinition Height="Auto" />
											<RowDefinition Height="Auto" />
											<RowDefinition Height="Auto" />
										</Grid.RowDefinitions>

										<!--  Available Colors  -->
										<Grid Grid.Row="1" Visibility="{TemplateBinding ShowAvailableColors, Converter={StaticResource BooleanToVisibilityConverter}}">
											<Grid>
												<Grid.RowDefinitions>
													<RowDefinition Height="Auto" />
													<RowDefinition />
												</Grid.RowDefinitions>
												<TextBlock Margin="0,0,0,1" Foreground="{DynamicResource ForegroundColorLight}" Padding="2" Text="{TemplateBinding AvailableColorsHeader}" />
												<ListBox x:Name="PART_AvailableColors" Grid.Row="1" ItemsSource="{Binding AvailableColors, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ColorListStyle}" />
											</Grid>
										</Grid>

										<!--  Standard Colors  -->
										<Grid Grid.Row="2" Visibility="{TemplateBinding ShowStandardColors, Converter={StaticResource BooleanToVisibilityConverter}}">
											<Grid>
												<Grid.RowDefinitions>
													<RowDefinition Height="Auto" />
													<RowDefinition Height="Auto" />
												</Grid.RowDefinitions>
												<TextBlock Margin="0,1,0,1" Foreground="{DynamicResource ForegroundColorLight}" Padding="2" Text="{TemplateBinding StandardColorsHeader}" />
												<ListBox x:Name="PART_StandardColors" Grid.Row="1" ItemsSource="{Binding StandardColors, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ColorListStyle}" />
											</Grid>
										</Grid>

										<!--  Recent Colors  -->
										<Grid Grid.Row="3" Margin="0,1,0,1" Visibility="{TemplateBinding ShowRecentColors, Converter={StaticResource BooleanToVisibilityConverter}}">
											<Grid>
												<Grid.RowDefinitions>
													<RowDefinition Height="Auto" />
													<RowDefinition Height="Auto" />
												</Grid.RowDefinitions>
												<TextBlock Margin="0,1,0,1" Foreground="{DynamicResource ForegroundColorLight}" Padding="2" Text="{TemplateBinding RecentColorsHeader}" />
												<ListBox x:Name="PART_RecentColors" Grid.Row="1" ItemsSource="{Binding RecentColors, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ColorListStyle}" />
											</Grid>
										</Grid>
									</Grid>

									<!--  ColorCanvas  -->
									<Grid x:Name="_colorCanvasHost" Visibility="Collapsed">
										<xc:ColorCanvas x:Name="PART_ColorCanvas" Background="Transparent" BorderThickness="0" Foreground="{DynamicResource ForegroundColorLight}" SelectedColor="{Binding SelectedColor, RelativeSource={RelativeSource TemplatedParent}}" UsingAlphaChannel="{Binding UsingAlphaChannel, RelativeSource={RelativeSource TemplatedParent}}">
											<!--
												<xc:ColorCanvas.Resources>
												<Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource {x:Type TextBlock}}">
												<Setter Property="Foreground" Value="White" />
												</Style>
												<Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
												<Setter Property="Foreground" Value="White" />
												</Style>
												</xc:ColorCanvas.Resources>
											-->
										</xc:ColorCanvas>
									</Grid>

									<Separator Grid.Row="1" Margin="5,0,5,0" HorizontalAlignment="Stretch" />

									<!--  More Colors Button  -->
									<ToggleButton x:Name="_colorMode" Grid.Row="2" Margin="5" Content="{x:Static lang:CommonResources.Additional}" Visibility="{TemplateBinding ShowAdvancedButton, Converter={StaticResource BooleanToVisibilityConverter}}" />
								</Grid>
							</Border>
						</Popup>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="DisplayColorAndName" Value="True">
							<Setter TargetName="ColorOnly" Property="Visibility" Value="Collapsed" />
							<Setter TargetName="ColorAndName" Property="Visibility" Value="Visible" />
						</Trigger>
						<Trigger SourceName="_colorMode" Property="IsChecked" Value="True">
							<Setter TargetName="_colorMode" Property="Content" Value="{x:Static lang:CommonResources.Standart}" />
							<Setter TargetName="_colorCanvasHost" Property="Visibility" Value="Visible" />
							<Setter TargetName="_gridStandardColorsHost" Property="Visibility" Value="Collapsed" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<LinearGradientBrush x:Key="ColorCanvasBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
		<LinearGradientBrush.GradientStops>
			<GradientStopCollection>
				<GradientStop Offset="0" Color="#FFffffff" />
				<GradientStop Offset="1" Color="#FFE8EBED" />
			</GradientStopCollection>
		</LinearGradientBrush.GradientStops>
	</LinearGradientBrush>

	<SolidColorBrush x:Key="HorizontalSliderTrackNormalBackground" Color="#FFE7EAEA" />

	<LinearGradientBrush x:Key="HorizontalSliderTrackNormalBorder" StartPoint="0,0" EndPoint="0,1">
		<GradientStop Offset="0.1" Color="#FFAEB1AF" />
		<GradientStop Offset=".9" Color="White" />
	</LinearGradientBrush>

	<LinearGradientBrush x:Key="ThumbStroke" StartPoint="0.5,0" EndPoint="0.5,1">
		<GradientStop Offset="0" Color="#FFA3AEB9" />
		<GradientStop Offset="0.375" Color="#FF8399A9" />
		<GradientStop Offset="0.375" Color="#FF718597" />
		<GradientStop Offset="1" Color="#FF617584" />
	</LinearGradientBrush>

	<LinearGradientBrush x:Key="ThumbFill" StartPoint="0,0" EndPoint="0,1">
		<LinearGradientBrush.GradientStops>
			<GradientStopCollection>
				<GradientStop Offset="0" Color="#FFfefefe" />
				<GradientStop Offset="0.5" Color="#FFeff1f2" />
				<GradientStop Offset="1" Color="#FFd0d6db" />
			</GradientStopCollection>
		</LinearGradientBrush.GradientStops>
	</LinearGradientBrush>

	<SolidColorBrush x:Key="ThumbMouseOver" Color="#FFE5F2F6" />

	<Style x:Key="SliderRepeatButtonStyle" TargetType="{x:Type RepeatButton}">
		<Setter Property="OverridesDefaultStyle" Value="true" />
		<Setter Property="IsTabStop" Value="false" />
		<Setter Property="Focusable" Value="false" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RepeatButton}">
					<Border Background="{TemplateBinding Background}" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="CustomThumbForSlider" TargetType="{x:Type Thumb}">
		<Setter Property="OverridesDefaultStyle" Value="True" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Thumb}">
					<Rectangle x:Name="_thumb" Width="8" Height="14" Fill="{StaticResource ThumbFill}" RadiusX="1" RadiusY="1" Stroke="{StaticResource ThumbStroke}" />
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="_thumb" Property="Rectangle.Fill" Value="{StaticResource ThumbMouseOver}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="VerticalSlideThumbStyle" TargetType="{x:Type Thumb}">
		<Setter Property="Focusable" Value="false" />
		<Setter Property="OverridesDefaultStyle" Value="true" />
		<Setter Property="Height" Value="12" />
		<Setter Property="Width" Value="11" />
		<Setter Property="Foreground" Value="Gray" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Thumb}">
					<Canvas SnapsToDevicePixels="true">
						<Path x:Name="LeftArrow" Width="6" Height="8" Data="F1 M 276.761,316L 262.619,307.835L 262.619,324.165L 276.761,316 Z " Fill="#FF000000" RenderTransformOrigin="0.5,0.5" Stretch="Fill" Stroke="#FF000000" StrokeLineJoin="Round">
							<Path.RenderTransform>
								<TransformGroup>
									<ScaleTransform />
									<SkewTransform />
									<RotateTransform />
									<TranslateTransform X="-3" Y="6" />
								</TransformGroup>
							</Path.RenderTransform>
						</Path>
						<Path x:Name="RightArrow" Width="6" Height="8" Data="F1 M 276.761,316L 262.619,307.835L 262.619,324.165L 276.761,316 Z " Fill="#FF000000" RenderTransformOrigin="0.5,0.5" Stretch="Fill" Stroke="#FF000000" StrokeLineJoin="Round">
							<Path.RenderTransform>
								<TransformGroup>
									<ScaleTransform />
									<SkewTransform />
									<RotateTransform Angle="-180" />
									<TranslateTransform X="8" Y="6" />
								</TransformGroup>
							</Path.RenderTransform>
						</Path>
					</Canvas>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="ColorCanvasSliderStyle" TargetType="{x:Type Slider}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Slider}">
					<Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
						<Grid>
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}" />
								<RowDefinition Height="Auto" />
							</Grid.RowDefinitions>
							<TickBar x:Name="TopTick" Grid.Row="0" Height="4" Fill="{TemplateBinding Foreground}" Placement="Top" Visibility="Collapsed" />
							<TickBar x:Name="BottomTick" Grid.Row="2" Height="4" Fill="{TemplateBinding Foreground}" Placement="Bottom" Visibility="Collapsed" />
							<Border x:Name="TrackBackground" Grid.Row="1" Height="4.0" Margin="5,0" VerticalAlignment="center" Background="{StaticResource HorizontalSliderTrackNormalBackground}" BorderBrush="{StaticResource HorizontalSliderTrackNormalBorder}" BorderThickness="1" CornerRadius="1">
								<Canvas Margin="-6,-1">
									<Rectangle x:Name="PART_SelectionRange" Height="4.0" Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Stroke="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" StrokeThickness="1.0" Visibility="Hidden" />
								</Canvas>
							</Border>
							<Track x:Name="PART_Track" Grid.Row="1">
								<Track.DecreaseRepeatButton>
									<RepeatButton Command="{x:Static Slider.DecreaseLarge}" Style="{StaticResource SliderRepeatButtonStyle}" />
								</Track.DecreaseRepeatButton>
								<Track.IncreaseRepeatButton>
									<RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource SliderRepeatButtonStyle}" />
								</Track.IncreaseRepeatButton>
								<Track.Thumb>
									<Thumb x:Name="Thumb" Style="{StaticResource CustomThumbForSlider}" />
								</Track.Thumb>
							</Track>
						</Grid>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="{x:Type xc:ColorCanvas}">
		<Setter Property="Background" Value="{StaticResource ColorCanvasBackgroundBrush}" />
		<Setter Property="BorderBrush" Value="{StaticResource ColorPickerDarkBorderBrush}" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type xc:ColorCanvas}">
					<Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="3">
						<Grid Margin="2">
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
							</Grid.RowDefinitions>
							<Grid>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="200" />
									<ColumnDefinition Width="Auto" />
								</Grid.ColumnDefinitions>
								<Grid.RowDefinitions>
									<RowDefinition Height="Auto" />
									<RowDefinition Height="Auto" />
								</Grid.RowDefinitions>

								<Border Background="{StaticResource CheckerBrush}" BorderBrush="DarkGray" BorderThickness="1" ClipToBounds="True">
									<Canvas x:Name="PART_ColorShadingCanvas" Width="200" Height="100" HorizontalAlignment="Left" VerticalAlignment="Top">
										<Rectangle x:Name="ColorShadingRectangle" Width="{Binding ElementName=PART_ColorShadingCanvas, Path=Width}" Height="{Binding ElementName=PART_ColorShadingCanvas, Path=Height}" Fill="{Binding SelectedColor, ElementName=PART_SpectrumSlider, Converter={StaticResource ColorToSolidColorBrushConverter}}" />
										<Rectangle x:Name="WhiteGradient" Width="{Binding ElementName=PART_ColorShadingCanvas, Path=Width}" Height="{Binding ElementName=PART_ColorShadingCanvas, Path=Height}">
											<Rectangle.Fill>
												<LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
													<GradientStop Offset="0" Color="#ffffffff" />
													<GradientStop Offset="1" Color="Transparent" />
												</LinearGradientBrush>
											</Rectangle.Fill>
										</Rectangle>
										<Rectangle x:Name="BlackGradient" Width="{Binding ElementName=PART_ColorShadingCanvas, Path=Width}" Height="{Binding ElementName=PART_ColorShadingCanvas, Path=Height}">
											<Rectangle.Fill>
												<LinearGradientBrush StartPoint="0,1" EndPoint="0, 0">
													<GradientStop Offset="0" Color="#ff000000" />
													<GradientStop Offset="1" Color="#00000000" />
												</LinearGradientBrush>
											</Rectangle.Fill>
										</Rectangle>
										<Canvas x:Name="PART_ColorShadeSelector" Width="10" Height="10" IsHitTestVisible="False">
											<Ellipse Width="10" Height="10" IsHitTestVisible="False" Stroke="#FFFFFFFF" StrokeThickness="3" />
											<Ellipse Width="10" Height="10" IsHitTestVisible="False" Stroke="#FF000000" StrokeThickness="1" />
										</Canvas>
									</Canvas>
								</Border>

								<Border Grid.Row="1" Margin="0,5,0,0">
									<Grid>
										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="*" />
											<ColumnDefinition Width="*" />
										</Grid.ColumnDefinitions>
										<Border Height="22" Margin="2,0,2,0" Background="{StaticResource CheckerBrush}" BorderBrush="#FFC9CACA" BorderThickness="1">
											<Rectangle x:Name="SelectedColor" Fill="{Binding SelectedColor, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ColorToSolidColorBrushConverter}}" />
										</Border>
										<TextBlock x:Name="PART_HexadecimalTextBox" Grid.Column="1" Margin="2,0,2,0" VerticalAlignment="Center" Width="50" />
									</Grid>
								</Border>

								<Border Grid.RowSpan="2" Grid.Column="1" Margin="4,-8,0,0" ClipToBounds="False">
									<xc:ColorSpectrumSlider x:Name="PART_SpectrumSlider" VerticalAlignment="Stretch" />
								</Border>
							</Grid>

							<Border Grid.Row="1" MinWidth="180" Margin="0,10,0,0" BorderThickness="1" ClipToBounds="True">
								<Grid>
									<Grid.RowDefinitions>
										<RowDefinition Height="Auto" />
										<RowDefinition Height="Auto" />
										<RowDefinition Height="Auto" />
										<RowDefinition Height="Auto" />
									</Grid.RowDefinitions>
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="Auto" />
										<ColumnDefinition Width="*" />
										<ColumnDefinition Width="Auto" />
									</Grid.ColumnDefinitions>

									<TextBlock Grid.Row="0" Grid.Column="0" VerticalAlignment="Center" Text="R" />
									<Slider x:Name="PART_RSlider" Grid.Row="0" Grid.Column="1" Margin="4,6,4,6" VerticalAlignment="Center"
											LargeChange="10" Maximum="255" SmallChange="1"
											Style="{StaticResource ColorCanvasSliderStyle}"
											TickFrequency="1"
											Value="{Binding R,
															RelativeSource={RelativeSource TemplatedParent}}" />
									<TextBlock Grid.Row="0" Grid.Column="2" VerticalAlignment="Center" Text="{Binding Value, ElementName=PART_RSlider}" Width="25" />

									<TextBlock Grid.Row="1" Grid.Column="0" VerticalAlignment="Center" Text="G" />
									<Slider x:Name="PART_GSlider" Grid.Row="1" Grid.Column="1" Margin="4,6,4,6" VerticalAlignment="Center"
											LargeChange="10" Maximum="255" SmallChange="1"
											Style="{StaticResource ColorCanvasSliderStyle}"
											TickFrequency="1"
											Value="{Binding G,
															RelativeSource={RelativeSource TemplatedParent}}" />
									<TextBlock Grid.Row="1" Grid.Column="2" VerticalAlignment="Center" Text="{Binding Value, ElementName=PART_GSlider}" Width="25" />

									<TextBlock Grid.Row="2" Grid.Column="0" VerticalAlignment="Center" Text="B" />
									<Slider x:Name="PART_BSlider" Grid.Row="2" Grid.Column="1" Margin="4,6,4,6" VerticalAlignment="Center"
											LargeChange="10" Maximum="255" SmallChange="1"
											Style="{StaticResource ColorCanvasSliderStyle}"
											TickFrequency="1"
											Value="{Binding B,
															RelativeSource={RelativeSource TemplatedParent}}" />
									<TextBlock Grid.Row="2" Grid.Column="3" VerticalAlignment="Center" Text="{Binding Value, ElementName=PART_BSlider}" Width="25" />

									<TextBlock Grid.Row="3" Grid.Column="0" VerticalAlignment="Center" Text="A" Visibility="{Binding Path=UsingAlphaChannel, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}" />
									<Slider x:Name="PART_OpacitySlider" Grid.Row="3" Grid.Column="1" Margin="4,6,4,6" VerticalAlignment="Center"
											LargeChange="10" Maximum="255" SmallChange="1"
											Style="{StaticResource ColorCanvasSliderStyle}"
											Visibility="{Binding Path=UsingAlphaChannel,
																 RelativeSource={RelativeSource TemplatedParent},
																 Converter={StaticResource BooleanToVisibilityConverter}}"
											Value="{Binding Path=A,
															RelativeSource={RelativeSource TemplatedParent}}" />
									<TextBlock Grid.Row="3" Grid.Column="3" VerticalAlignment="Center" Text="{Binding Value, ElementName=PART_OpacitySlider}" Visibility="{Binding Path=UsingAlphaChannel, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}" Width="25" />
								</Grid>
							</Border>
						</Grid>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="{x:Type xc:ColorSpectrumSlider}">
		<Setter Property="Orientation" Value="Vertical" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
		<Setter Property="Minimum" Value="1" />
		<Setter Property="Maximum" Value="360" />
		<Setter Property="TickFrequency" Value="0.001" />
		<Setter Property="IsSnapToTickEnabled" Value="True" />
		<Setter Property="IsDirectionReversed" Value="False" />
		<Setter Property="IsMoveToPointEnabled" Value="True" />
		<Setter Property="Value" Value="0" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type xc:ColorSpectrumSlider}">
					<Grid>
						<Border x:Name="PART_TrackBackground" Width="15" Margin="0,8,0,0" BorderBrush="DarkGray" BorderThickness="1">
							<Rectangle x:Name="PART_SpectrumDisplay" VerticalAlignment="Stretch" Stretch="Fill" />
						</Border>

						<Track Name="PART_Track">
							<Track.DecreaseRepeatButton>
								<RepeatButton Command="Slider.DecreaseLarge" Style="{StaticResource SliderRepeatButtonStyle}" />
							</Track.DecreaseRepeatButton>
							<Track.IncreaseRepeatButton>
								<RepeatButton Command="Slider.IncreaseLarge" Style="{StaticResource SliderRepeatButtonStyle}" />
							</Track.IncreaseRepeatButton>
							<Track.Thumb>
								<Thumb Style="{StaticResource VerticalSlideThumbStyle}" />
							</Track.Thumb>
						</Track>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>