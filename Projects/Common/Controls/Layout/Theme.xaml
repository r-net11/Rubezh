<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:avalonDock="clr-namespace:Xceed.Wpf.AvalonDock;assembly=Xceed.Wpf.AvalonDock" xmlns:avalonDockControls="clr-namespace:Xceed.Wpf.AvalonDock.Controls;assembly=Xceed.Wpf.AvalonDock" xmlns:avalonDockConverters="clr-namespace:Xceed.Wpf.AvalonDock.Converters;assembly=Xceed.Wpf.AvalonDock" xmlns:avalonDockLayout="clr-namespace:Xceed.Wpf.AvalonDock.Layout;assembly=Xceed.Wpf.AvalonDock" xmlns:avalonDockProperties="clr-namespace:Xceed.Wpf.AvalonDock.Properties;assembly=Xceed.Wpf.AvalonDock" xmlns:converters="clr-namespace:Controls.Converters" xmlns:shell="clr-namespace:Microsoft.Windows.Shell;assembly=Xceed.Wpf.AvalonDock">

	<avalonDockConverters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
	<avalonDockConverters:InverseBoolToVisibilityConverter x:Key="InverseBoolToVisibilityConverter" />
	<avalonDockConverters:AnchorSideToOrientationConverter x:Key="AnchorSideToOrientationConverter" />
	<avalonDockConverters:AnchorSideToAngleConverter x:Key="AnchorSideToAngleConverter" />
	<avalonDockConverters:NullToDoNothingConverter x:Key="NullToDoNothingConverter" />
	<avalonDockConverters:NullToVisibilityConverter x:Key="NullToVisibilityConverter" />
	<avalonDockConverters:LayoutItemFromLayoutModelConverter x:Key="LayoutItemFromLayoutModelConverter" />
	<avalonDockConverters:ActivateCommandLayoutItemFromLayoutModelConverter x:Key="ActivateCommandLayoutItemFromLayoutModelConverter" />
	<converters:ColorToBrushConverter x:Key="ColorToBrushConverter" />
	<SolidColorBrush x:Key="PanelBackground" Color="#FFF9F9F9" />

	<ToolTip x:Key="DocumentToolTip">
		<StackPanel Orientation="Vertical">
			<StackPanel Orientation="Horizontal">
				<Image Width="16" Source="{Binding IconSource, Converter={StaticResource NullToDoNothingConverter}}" Stretch="Uniform" />
				<TextBlock Margin="4,0,0,0" VerticalAlignment="Center" FontWeight="Bold" Text="{Binding Title}" TextTrimming="CharacterEllipsis" />
			</StackPanel>
			<TextBlock VerticalAlignment="Center" Text="{Binding Description}" TextTrimming="CharacterEllipsis" Visibility="{Binding Description, Converter={StaticResource NullToVisibilityConverter}}" />
		</StackPanel>
	</ToolTip>

	<Style x:Key="AvalonDock_ToolButtonStyle" TargetType="ToggleButton">
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="BorderBrush" Value="Transparent" />
		<Setter Property="Padding" Value="0" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ToggleButton">
					<Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
						<ContentPresenter />
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>

		<Style.Triggers>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="BorderBrush" Value="{DynamicResource WindowBorderBrush}" />
				<Setter Property="Background" Value="{DynamicResource HighlightedBackgoundBrush}" />
			</Trigger>
			<Trigger Property="IsChecked" Value="True">
				<Setter Property="BorderBrush" Value="{DynamicResource WindowBorderBrush}" />
				<Setter Property="Background" Value="{DynamicResource PressedBackgroundBrush}" />
				<Setter Property="IsEnabled" Value="False" />
			</Trigger>
		</Style.Triggers>
	</Style>
	<Style x:Key="AvalonDock_ButtonStyle" TargetType="Button">
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="BorderBrush" Value="Transparent" />
		<Setter Property="Padding" Value="0" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
						<ContentPresenter />
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="BorderBrush" Value="{DynamicResource WindowBorderBrush}" />
				<Setter Property="Background" Value="{DynamicResource HighlightedBackgoundBrush}" />
			</Trigger>
		</Style.Triggers>
	</Style>

	<!--  DocumentPaneControlStyle  -->
	<Style x:Key="DocumentPaneControlStyle" TargetType="{x:Type avalonDockControls:LayoutDocumentPaneControl}">
		<Setter Property="BorderThickness" Value="0" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type avalonDockControls:LayoutDocumentPaneControl}">
					<Grid ClipToBounds="true" KeyboardNavigation.TabNavigation="Local" SnapsToDevicePixels="true">
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto" />
							<RowDefinition Height="*" />
						</Grid.RowDefinitions>
						<!--  Following border is required to catch mouse events  -->
						<Border Grid.RowSpan="2" Background="Transparent" />
						<Grid x:Name="header" Panel.ZIndex="1">
							<Grid.ColumnDefinitions>
								<ColumnDefinition />
								<ColumnDefinition Width="Auto" />
							</Grid.ColumnDefinitions>
							<avalonDockControls:DocumentPaneTabPanel x:Name="HeaderPanel" Grid.Row="0" Grid.Column="0" Margin="2,2,2,0" IsItemsHost="true" KeyboardNavigation.TabIndex="1" />
							<avalonDockControls:DropDownButton x:Name="MenuDropDownButton" Grid.Column="1" VerticalAlignment="Center" Focusable="False" Style="{StaticResource AvalonDock_ToolButtonStyle}">
								<avalonDockControls:DropDownButton.DropDownContextMenu>
									<avalonDockControls:ContextMenuEx ItemsSource="{Binding Model.ChildrenSorted, RelativeSource={RelativeSource TemplatedParent}}">
										<avalonDockControls:ContextMenuEx.ItemContainerStyle>
											<Style BasedOn="{StaticResource {x:Type MenuItem}}" TargetType="{x:Type avalonDockControls:MenuItemEx}">
												<Setter Property="HeaderTemplate" Value="{Binding Path=Root.Manager.DocumentPaneMenuItemHeaderTemplate}" />
												<Setter Property="HeaderTemplateSelector" Value="{Binding Path=Root.Manager.DocumentPaneMenuItemHeaderTemplateSelector}" />
												<Setter Property="IconTemplate" Value="{Binding Path=Root.Manager.IconContentTemplate}" />
												<Setter Property="IconTemplateSelector" Value="{Binding Path=Root.Manager.IconContentTemplateSelector}" />
												<Setter Property="Command" Value="{Binding Path=., Converter={StaticResource ActivateCommandLayoutItemFromLayoutModelConverter}}" />
											</Style>
										</avalonDockControls:ContextMenuEx.ItemContainerStyle>
									</avalonDockControls:ContextMenuEx>
								</avalonDockControls:DropDownButton.DropDownContextMenu>
								<Image Source="/Controls;component/Layout/Images/PinDocMenu.png" />
							</avalonDockControls:DropDownButton>
						</Grid>
						<Border x:Name="ContentPanel" Grid.Row="1" Grid.Column="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
								Background="{TemplateBinding Background}"
								BorderBrush="{TemplateBinding Background}"
								BorderThickness="0" KeyboardNavigation.DirectionalNavigation="Contained" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Cycle">
							<ContentPresenter x:Name="PART_SelectedContentHost" Margin="0" ContentSource="SelectedContent" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
						</Border>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger SourceName="MenuDropDownButton" Property="IsMouseOver" Value="True">
							<Setter TargetName="MenuDropDownButton" Property="Content">
								<Setter.Value>
									<Image Source="/Controls;component/Layout/Images/PinDocMenu_Black.png" />
								</Setter.Value>
							</Setter>
						</Trigger>
						<DataTrigger Binding="{Binding Model.Root.Manager.AllowChangeLayout, RelativeSource={RelativeSource Mode=Self}}" Value="True">
							<!--  <Setter TargetName="PART_SelectedContentHost" Property="Margin" Value="3" />  -->
							<Setter TargetName="ContentPanel" Property="BorderThickness" Value="3" />
						</DataTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Model.SelectedContent.IsActive}" Value="True" />
								<Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Model.SelectedContent.IsLastFocusedDocument}" Value="True" />
								<Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Model.Root.Manager.AllowChangeLayout}" Value="True" />
							</MultiDataTrigger.Conditions>
							<Setter TargetName="ContentPanel" Property="BorderBrush" Value="{DynamicResource HighlightedBackgoundBrush}" />
						</MultiDataTrigger>
						<Trigger SourceName="MenuDropDownButton" Property="IsChecked" Value="True">
							<Setter TargetName="MenuDropDownButton" Property="Content">
								<Setter.Value>
									<Image Source="/Controls;component/Layout/Images/PinDocMenu_Black.png" />
								</Setter.Value>
							</Setter>
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
						</Trigger>
						<DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Model.ChildrenCount}" Value="0">
							<Setter TargetName="MenuDropDownButton" Property="Visibility" Value="Collapsed" />
						</DataTrigger>
						<DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Model.ChildrenCount}" Value="1">
							<Setter TargetName="header" Property="Height" Value="0" />
							<Setter TargetName="header" Property="Width" Value="0" />
						</DataTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="ItemContainerStyle">
			<Setter.Value>
				<Style TargetType="{x:Type TabItem}">
					<Setter Property="Visibility" Value="{Binding IsVisible, Converter={StaticResource BoolToVisibilityConverter}}" />
					<Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
					<Setter Property="ToolTip" Value="{StaticResource DocumentToolTip}" />
					<Setter Property="Template" Value="{StaticResource TabItemStyle}" />
				</Style>
			</Setter.Value>
		</Setter>
		<Setter Property="ItemTemplate">
			<Setter.Value>
				<DataTemplate>
					<avalonDockControls:LayoutDocumentTabItem Model="{Binding}" />
				</DataTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="ContentTemplate">
			<Setter.Value>
				<DataTemplate>
					<avalonDockControls:LayoutDocumentControl Model="{Binding}" />
				</DataTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="{x:Type avalonDockControls:OverlayWindow}" TargetType="{x:Type avalonDockControls:OverlayWindow}">
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type avalonDockControls:OverlayWindow}">
					<Canvas x:Name="PART_DropTargetsContainer" Opacity="0.9">
						<Path x:Name="PART_PreviewBox" Fill="AliceBlue" Stroke="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" StrokeThickness="2" />
						<Grid x:Name="PART_DockingManagerDropTargets">
							<Image x:Name="PART_DockingManagerDropTargetLeft" HorizontalAlignment="Left" VerticalAlignment="Center" Source="/Controls;component/Layout/Images/DockAnchorableLeft.PNG" Stretch="None" />
							<Image x:Name="PART_DockingManagerDropTargetRight" HorizontalAlignment="Right" VerticalAlignment="Center" Source="/Controls;component/Layout/Images/DockAnchorableRight.PNG" Stretch="None" />
							<Image x:Name="PART_DockingManagerDropTargetBottom" HorizontalAlignment="Center" VerticalAlignment="Bottom" Source="/Controls;component/Layout/Images/DockAnchorableBottom.PNG" Stretch="None" />
							<Image x:Name="PART_DockingManagerDropTargetTop" HorizontalAlignment="Center" VerticalAlignment="Top" Source="/Controls;component/Layout/Images/DockAnchorableTop.PNG" Stretch="None" />
						</Grid>
						<Grid x:Name="PART_AnchorablePaneDropTargets">
							<Grid Width="112" Height="112" HorizontalAlignment="Center" VerticalAlignment="Center">
								<Grid.ColumnDefinitions>
									<ColumnDefinition />
									<ColumnDefinition />
									<ColumnDefinition />
								</Grid.ColumnDefinitions>
								<Grid.RowDefinitions>
									<RowDefinition />
									<RowDefinition />
									<RowDefinition />
								</Grid.RowDefinitions>
								<Image Grid.RowSpan="3" Grid.ColumnSpan="3" Margin="0,0.5,0,-0.5" Source="/Controls;component/Layout/Images/DockPaneEmpty.PNG" Stretch="None" />
								<Border Name="PART_AnchorablePaneDropTargetTop" Grid.Row="0" Grid.Column="1">
									<Image Source="/Controls;component/Layout/Images/DockDocumentAsAnchorableTop.png" Stretch="None" />
								</Border>
								<Border Name="PART_AnchorablePaneDropTargetRight" Grid.Row="1" Grid.Column="2">
									<Image Source="/Controls;component/Layout/Images/DockDocumentAsAnchorableRight.png" Stretch="None" />
								</Border>
								<Border Name="PART_AnchorablePaneDropTargetBottom" Grid.Row="2" Grid.Column="1">
									<Image Source="/Controls;component/Layout/Images/DockDocumentAsAnchorableBottom.png" Stretch="None" />
								</Border>
								<Border Name="PART_AnchorablePaneDropTargetLeft" Grid.Row="1" Grid.Column="0">
									<Image Source="/Controls;component/Layout/Images/DockDocumentAsAnchorableLeft.png" Stretch="None" />
								</Border>
								<Border Name="PART_AnchorablePaneDropTargetInto" Grid.Row="1" Grid.Column="1">
									<Image Source="/Controls;component/Layout/Images/DockDocumentInside.png" Stretch="None" />
								</Border>
							</Grid>
						</Grid>
						<Grid x:Name="PART_DocumentPaneDropTargets">
							<Grid Width="112" Height="112" HorizontalAlignment="Center" VerticalAlignment="Center">
								<Grid.ColumnDefinitions>
									<ColumnDefinition />
									<ColumnDefinition />
									<ColumnDefinition />
								</Grid.ColumnDefinitions>
								<Grid.RowDefinitions>
									<RowDefinition />
									<RowDefinition />
									<RowDefinition />
								</Grid.RowDefinitions>
								<Image Grid.RowSpan="3" Grid.ColumnSpan="3" Source="/Controls;component/Layout/Images/DockPaneEmpty.PNG" Stretch="None" />
								<Border Name="PART_DocumentPaneDropTargetTop" Grid.Row="0" Grid.Column="1">
									<Image Source="/Controls;component/Layout/Images/DockDocumentTop.png" Stretch="None" />
								</Border>
								<Border Name="PART_DocumentPaneDropTargetRight" Grid.Row="1" Grid.Column="2">
									<Image Source="/Controls;component/Layout/Images/DockDocumentRight.png" Stretch="None" />
								</Border>
								<Border Name="PART_DocumentPaneDropTargetBottom" Grid.Row="2" Grid.Column="1">
									<Image Source="/Controls;component/Layout/Images/DockDocumentBottom.png" Stretch="None" />
								</Border>
								<Border Name="PART_DocumentPaneDropTargetLeft" Grid.Row="1" Grid.Column="0">
									<Image Source="/Controls;component/Layout/Images/DockDocumentLeft.png" Stretch="None" />
								</Border>
								<Border Name="PART_DocumentPaneDropTargetInto" Grid.Row="1" Grid.Column="1">
									<Image Source="/Controls;component/Layout/Images/DockDocumentInside.png" Stretch="None" />
								</Border>
							</Grid>
						</Grid>

						<Grid x:Name="PART_DocumentPaneFullDropTargets">
							<Grid Width="184" Height="184" HorizontalAlignment="Center" VerticalAlignment="Center">
								<Grid.ColumnDefinitions>
									<ColumnDefinition />
									<ColumnDefinition />
									<ColumnDefinition />
									<ColumnDefinition />
									<ColumnDefinition />
								</Grid.ColumnDefinitions>
								<Grid.RowDefinitions>
									<RowDefinition />
									<RowDefinition />
									<RowDefinition />
									<RowDefinition />
									<RowDefinition />
								</Grid.RowDefinitions>
								<Image Grid.RowSpan="5" Grid.ColumnSpan="5" Source="/Controls;component/Layout/Images/DockPaneLargeEmpty.PNG" Stretch="None" />
								<Border Name="PART_DocumentPaneFullDropTargetTop" Grid.Row="1" Grid.Column="2">
									<Image Margin="2" Source="/Controls;component/Layout/Images/DockDocumentTop.png" Stretch="None" />
								</Border>
								<Border Name="PART_DocumentPaneFullDropTargetRight" Grid.Row="2" Grid.Column="3">
									<Image Margin="2" Source="/Controls;component/Layout/Images/DockDocumentRight.png" Stretch="None" />
								</Border>
								<Border Name="PART_DocumentPaneFullDropTargetBottom" Grid.Row="3" Grid.Column="2">
									<Image Margin="2" Source="/Controls;component/Layout/Images/DockDocumentBottom.png" Stretch="None" />
								</Border>
								<Border Name="PART_DocumentPaneFullDropTargetLeft" Grid.Row="2" Grid.Column="1">
									<Image Margin="2" Source="/Controls;component/Layout/Images/DockDocumentLeft.png" Stretch="None" />
								</Border>
								<Border Name="PART_DocumentPaneFullDropTargetInto" Grid.Row="2" Grid.Column="2">
									<Image Source="/Controls;component/Layout/Images/DockDocumentInside.png" Stretch="None" />
								</Border>

								<Border Name="PART_DocumentPaneDropTargetTopAsAnchorablePane" Grid.Row="0" Grid.Column="2">
									<Image Margin="2" Source="/Controls;component/Layout/Images/DockDocumentAsAnchorableTop.png" Stretch="None" />
								</Border>
								<Border Name="PART_DocumentPaneDropTargetRightAsAnchorablePane" Grid.Row="2" Grid.Column="4">
									<Image Margin="2" Source="/Controls;component/Layout/Images/DockDocumentAsAnchorableRight.png" Stretch="None" />
								</Border>
								<Border Name="PART_DocumentPaneDropTargetBottomAsAnchorablePane" Grid.Row="4" Grid.Column="2">
									<Image Margin="2" Source="/Controls;component/Layout/Images/DockDocumentAsAnchorableBottom.png" Stretch="None" />
								</Border>
								<Border Name="PART_DocumentPaneDropTargetLeftAsAnchorablePane" Grid.Row="2" Grid.Column="0">
									<Image Margin="2" Source="/Controls;component/Layout/Images/DockDocumentAsAnchorableLeft.png" Stretch="None" />
								</Border>

							</Grid>
						</Grid>
					</Canvas>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<DataTemplate x:Key="DocumentHeaderTemplate">
		<StackPanel VerticalAlignment="Center" Orientation="Horizontal">
			<Image Width="16" Source="{Binding IconSource, Converter={StaticResource NullToDoNothingConverter}}" Stretch="Uniform" />
			<TextBlock Margin="4,0,0,0" VerticalAlignment="Center" Text="{Binding Title}" TextTrimming="CharacterEllipsis" />
		</StackPanel>
	</DataTemplate>

	<DataTemplate x:Key="DocumentTitleTemplate">
		<TextBlock VerticalAlignment="Center" Text="{Binding Title}" TextTrimming="CharacterEllipsis" Margin="8 2 0 0"/>
	</DataTemplate>

	<DataTemplate x:Key="IconContentTemplate">
		<Image Width="16" Source="{Binding IconSource, Converter={StaticResource NullToDoNothingConverter}}" Stretch="Uniform" />
	</DataTemplate>

	<Style x:Key="DocumentContextMenuStyle" TargetType="ContextMenu">
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="OverridesDefaultStyle" Value="True" />
		<Setter Property="Grid.IsSharedSizeScope" Value="true" />
		<Setter Property="HasDropShadow" Value="True" />
		<Setter Property="TextElement.Foreground" Value="Black" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ContextMenu">
					<Border Name="Border" Background="White" BorderBrush="Black" BorderThickness="1">
						<StackPanel Margin="2" IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="ItemContainerStyle">
			<Setter.Value>
				<Style TargetType="{x:Type MenuItem}">
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="{x:Type MenuItem}">
								<Border Name="Border">
									<ContentPresenter Name="HeaderHost" Grid.Column="1" Margin="6,3,6,3" VerticalAlignment="Center" ContentSource="Header" RecognizesAccessKey="True" />
								</Border>
								<ControlTemplate.Triggers>
									<Trigger Property="IsHighlighted" Value="true">
										<Setter TargetName="Border" Property="Background" Value="{DynamicResource HighlightedBackgoundBrush}" />
									</Trigger>
									<Trigger Property="IsEnabled" Value="false">
										<Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
									</Trigger>
								</ControlTemplate.Triggers>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Style>
			</Setter.Value>
		</Setter>
	</Style>

	<ContextMenu x:Key="DocumentContextMenu" Style="{StaticResource DocumentContextMenuStyle}">
		<MenuItem Command="{Binding Path=ConfigureCommand}" Header="Свойства" Visibility="{Binding Path=Command, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource NullToVisibilityConverter}}" />
		<MenuItem Command="{Binding Path=CloseCommand}" Header="Закрыть" Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}" />
		<MenuItem Command="{Binding Path=CloseAllButThisCommand}" Header="Закрыть все кроме этого" />
		<MenuItem Command="{Binding Path=NewHorizontalTabGroupCommand}" Header="Новая горизонтальная группа вкладок" Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}" />
		<MenuItem Command="{Binding Path=NewVerticalTabGroupCommand}" Header="Новая вертикальная группа вкладок" Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}" />
		<MenuItem Command="{Binding Path=MoveToNextTabGroupCommand}" Header="Перейти к следующей группе вкладок" Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}" />
		<MenuItem Command="{Binding Path=MoveToPreviousTabGroupCommand}" Header="Перейти к предыдущей группе вкладок" Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}" />
	</ContextMenu>

	<Style x:Key="{x:Type avalonDock:DockingManager}" TargetType="{x:Type avalonDock:DockingManager}">
		<Setter Property="DocumentPaneControlStyle" Value="{StaticResource DocumentPaneControlStyle}" />
		<Setter Property="DocumentHeaderTemplate" Value="{StaticResource DocumentHeaderTemplate}" />
		<Setter Property="DocumentTitleTemplate" Value="{StaticResource DocumentTitleTemplate}" />
		<Setter Property="DocumentContextMenu" Value="{StaticResource DocumentContextMenu}" />
		<Setter Property="DocumentPaneMenuItemHeaderTemplate" Value="{StaticResource DocumentTitleTemplate}" />
		<Setter Property="IconContentTemplate" Value="{StaticResource IconContentTemplate}" />
		<Setter Property="Background" Value="{DynamicResource BaseWindowBackgroundBrush}" />
		<Setter Property="GridSplitterWidth" Value="4" />
		<Setter Property="GridSplitterHeight" Value="4" />
		<Setter Property="AllowMixedOrientation" Value="True" />
		<Setter Property="ShowSystemMenu" Value="False" />
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type avalonDock:DockingManager}">
					<Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="5" Padding="{TemplateBinding Padding}">
						<ContentPresenter Grid.Row="1" Grid.Column="1" Content="{TemplateBinding LayoutRootPanel}" />
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="{x:Type avalonDockControls:LayoutGridResizerControl}" TargetType="{x:Type avalonDockControls:LayoutGridResizerControl}">
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type avalonDockControls:LayoutGridResizerControl}">
					<Border Background="{TemplateBinding Background}" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="{x:Type avalonDockControls:LayoutDocumentControl}">
		<Setter Property="Background" Value="{StaticResource PanelBackground}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type avalonDockControls:LayoutDocumentControl}">
					<avalonDockControls:DropDownControlArea x:Name="PART_DropDownControlArea" Background="Transparent" DropDownContextMenuDataContext="{Binding LayoutItem, RelativeSource={RelativeSource TemplatedParent}}">
						<Border x:Name="border" Margin="{Binding Model.Margin, RelativeSource={RelativeSource TemplatedParent}}" Background="{Binding Model.BackgroundColor, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ColorToBrushConverter}}" BorderBrush="{Binding Model.BorderColor, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ColorToBrushConverter}}" BorderThickness="{Binding Model.BorderThickness, RelativeSource={RelativeSource TemplatedParent}}" DataContext="{Binding LayoutItem, RelativeSource={RelativeSource TemplatedParent}}">
							<ContentPresenter Content="{Binding View}" />
						</Border>
					</avalonDockControls:DropDownControlArea>
					<ControlTemplate.Triggers>
						<DataTrigger Binding="{Binding LayoutItem.LayoutElement.Root.Manager.AllowChangeLayout, RelativeSource={RelativeSource Self}}" Value="True">
							<Setter TargetName="PART_DropDownControlArea" Property="DropDownContextMenu" Value="{Binding LayoutItem.LayoutElement.Root.Manager.DocumentContextMenu, RelativeSource={RelativeSource TemplatedParent}}" />
							<Setter TargetName="border" Property="ToolTip" Value="{StaticResource DocumentToolTip}" />
						</DataTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="{x:Type avalonDockControls:LayoutDocumentTabItem}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type avalonDockControls:LayoutDocumentTabItem}">
					<avalonDockControls:DropDownControlArea x:Name="PART_DropDownControlArea" DropDownContextMenuDataContext="{Binding LayoutItem, RelativeSource={RelativeSource TemplatedParent}}">
						<Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
							<Grid>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="*" />
									<ColumnDefinition Width="Auto" />
								</Grid.ColumnDefinitions>
								<Border Grid.ColumnSpan="2" Background="Transparent" />
								<ContentPresenter Content="{Binding Model, RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{Binding DocumentHeaderTemplate, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type avalonDock:DockingManager}, Mode=FindAncestor}}" ContentTemplateSelector="{Binding DocumentHeaderTemplateSelector, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type avalonDock:DockingManager}, Mode=FindAncestor}}" />
								<!--  Close button should be moved out to the container style  -->
								<Button x:Name="DocumentCloseButton" Grid.Column="1" Margin="5,0,0,0" HorizontalAlignment="Center" VerticalAlignment="Center" Command="{Binding Path=LayoutItem.CloseCommand, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource AvalonDock_ButtonStyle}" ToolTip="Закрыть" Visibility="Hidden">
									<Image x:Name="PART_ImgPinClose" Source="/Controls;component/Layout/Images/PinClose.png" />
								</Button>
							</Grid>
						</Border>
					</avalonDockControls:DropDownControlArea>
					<ControlTemplate.Triggers>
						<DataTrigger Binding="{Binding Path=IsSelected}" Value="True">
							<Setter TargetName="DocumentCloseButton" Property="Visibility" Value="Visible" />
						</DataTrigger>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="DocumentCloseButton" Property="Visibility" Value="Visible" />
						</Trigger>
						<DataTrigger Binding="{Binding Path=CanClose}" Value="False">
							<Setter TargetName="DocumentCloseButton" Property="Visibility" Value="Collapsed" />
						</DataTrigger>
						<DataTrigger Binding="{Binding Path=Root.Manager.AllowChangeLayout}" Value="False">
							<Setter TargetName="DocumentCloseButton" Property="Visibility" Value="Collapsed" />
						</DataTrigger>
						<DataTrigger Binding="{Binding Path=Root.Manager.AllowChangeLayout}" Value="True">
							<Setter TargetName="PART_DropDownControlArea" Property="DropDownContextMenu" Value="{Binding Root.Manager.DocumentContextMenu}" />
						</DataTrigger>
						<Trigger SourceName="DocumentCloseButton" Property="IsMouseOver" Value="True">
							<Setter TargetName="PART_ImgPinClose" Property="Source" Value="/Controls;component/Layout/Images/PinClose_Black.png" />
							<Setter TargetName="DocumentCloseButton" Property="Background" Value="{DynamicResource BaseWindowBackgroundBrush}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="{x:Type avalonDockControls:LayoutDocumentFloatingWindowControl}" TargetType="{x:Type avalonDockControls:LayoutDocumentFloatingWindowControl}">
		<Setter Property="Background" Value="{StaticResource PanelBackground}" />
		<Setter Property="BorderBrush" Value="{DynamicResource HighlightedBackgoundBrush}" />
		<Setter Property="BorderThickness" Value="3" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type avalonDockControls:LayoutDocumentFloatingWindowControl}">
					<Border x:Name="WindowBorder" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
						<ContentPresenter Content="{TemplateBinding Content}" />
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="{x:Type avalonDockControls:NavigatorWindow}" TargetType="{x:Type avalonDockControls:NavigatorWindow}">
		<Setter Property="SizeToContent" Value="WidthAndHeight" />
		<Setter Property="ResizeMode" Value="NoResize" />
		<Setter Property="AllowsTransparency" Value="True" />
		<Setter Property="WindowStyle" Value="None" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="MinWidth" Value="300" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type avalonDockControls:NavigatorWindow}">
					<Border x:Name="WindowBorder" BorderBrush="{DynamicResource WindowBorderBrush}" BorderThickness="2" CornerRadius="10">
						<Grid>
							<Grid.RowDefinitions>
								<RowDefinition Height="54" />
								<RowDefinition Height="*" />
							</Grid.RowDefinitions>

							<Border Grid.Row="0" Background="{StaticResource PanelBackground}" CornerRadius="10,10,0,0" Padding="5">
								<StackPanel Orientation="Vertical">
									<StackPanel Orientation="Horizontal">
										<Image Width="16" Source="{Binding SelectedDocument.LayoutElement.IconSource, Converter={StaticResource NullToDoNothingConverter}}" Stretch="Uniform" />
										<TextBlock Margin="4,0,0,0" VerticalAlignment="Center" FontWeight="Bold" Text="{Binding SelectedDocument.LayoutElement.Title}" TextTrimming="CharacterEllipsis" />
									</StackPanel>
									<TextBlock VerticalAlignment="Center" Text="{Binding SelectedDocument.LayoutElement.Description}" TextTrimming="CharacterEllipsis" />
								</StackPanel>
							</Border>

							<Border Grid.Row="1" Background="{DynamicResource BaseWindowBackgroundBrush}" CornerRadius="0,0,10,10" Padding="5">
								<Border.Resources>
									<Style TargetType="{x:Type TextBlock}">
										<Setter Property="Foreground" Value="White" />
									</Style>
								</Border.Resources>
								<Grid Margin="5">
									<Grid.RowDefinitions>
										<RowDefinition Height="Auto" />
										<RowDefinition />
									</Grid.RowDefinitions>
									<TextBlock Grid.Row="0" Margin="0,3,0,4" FontWeight="Bold" Text="Элементы" />
									<ListBox Grid.Row="1" MaxHeight="400" Background="White" BorderThickness="0" FocusVisualStyle="{x:Null}" ItemsSource="{Binding Documents}" ScrollViewer.VerticalScrollBarVisibility="Disabled" SelectedItem="{Binding SelectedDocument, Mode=TwoWay}">
										<ListBox.Template>
											<ControlTemplate TargetType="ListBox">
												<Border Name="Bd" Background="{TemplateBinding Panel.Background}" BorderBrush="{TemplateBinding Border.BorderBrush}" BorderThickness="{TemplateBinding Border.BorderThickness}" CornerRadius="2" Padding="1,1,1,1" SnapsToDevicePixels="True">
													<ScrollViewer Focusable="False" Padding="{TemplateBinding Control.Padding}">
														<ItemsPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
													</ScrollViewer>
												</Border>
											</ControlTemplate>
										</ListBox.Template>
										<ListBox.ItemContainerStyle>
											<Style TargetType="ListBoxItem">
												<Setter Property="Template">
													<Setter.Value>
														<ControlTemplate TargetType="{x:Type ListBoxItem}">
															<Grid>
																<Border Background="{TemplateBinding Background}" />
																<ContentPresenter Margin="1" />
															</Grid>
															<ControlTemplate.Triggers>
																<Trigger Property="IsMouseOver" Value="True">
																	<Setter Property="Background" Value="{DynamicResource PressedBackgroundBrush}" />
																	<Setter Property="TextElement.Foreground" Value="White" />
																</Trigger>
																<Trigger Property="IsSelected" Value="True">
																	<Setter Property="Background" Value="{DynamicResource PressedBackgroundBrush}" />
																	<Setter Property="TextElement.Foreground" Value="White" />
																</Trigger>
															</ControlTemplate.Triggers>
														</ControlTemplate>
													</Setter.Value>
												</Setter>
												<Setter Property="Cursor" Value="Hand" />
											</Style>
										</ListBox.ItemContainerStyle>
										<ListBox.ItemTemplate>
											<DataTemplate>
												<Grid>
													<Grid.ColumnDefinitions>
														<ColumnDefinition Width="Auto" />
														<ColumnDefinition />
													</Grid.ColumnDefinitions>
													<Image Width="16" Source="{Binding LayoutElement.IconSource, Converter={StaticResource NullToDoNothingConverter}}" Stretch="Uniform" />
													<TextBlock Grid.Column="1" Margin="8,2,4,2" Text="{Binding LayoutElement.Title}" TextTrimming="CharacterEllipsis" />
												</Grid>
											</DataTemplate>
										</ListBox.ItemTemplate>
										<ListBox.ItemsPanel>
											<ItemsPanelTemplate>
												<WrapPanel Orientation="Vertical" />
											</ItemsPanelTemplate>
										</ListBox.ItemsPanel>
									</ListBox>
								</Grid>
							</Border>
						</Grid>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>

	</Style>

</ResourceDictionary>
