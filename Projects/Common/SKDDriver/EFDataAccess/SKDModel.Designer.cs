//------------------------------------------------------------------------------
// <auto-generated>
//    Этот код был создан из шаблона.
//
//    Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//    Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region Метаданные связи EDM

[assembly: EdmRelationshipAttribute("SKDModel", "FK_AccessTemplate_Organisation", "Organisation", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SKDDriver.EFDataAccess.Organisation), "AccessTemplate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SKDDriver.EFDataAccess.AccessTemplate), true)]
[assembly: EdmRelationshipAttribute("SKDModel", "FK_Card_AccessTemplate", "AccessTemplate", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SKDDriver.EFDataAccess.AccessTemplate), "Card", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SKDDriver.EFDataAccess.Card), true)]
[assembly: EdmRelationshipAttribute("SKDModel", "FK_CardDoor_AccessTemplate", "AccessTemplate", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SKDDriver.EFDataAccess.AccessTemplate), "CardDoor", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SKDDriver.EFDataAccess.CardDoor), true)]
[assembly: EdmRelationshipAttribute("SKDModel", "FK_AdditionalColumn_AdditionalColumnType", "AdditionalColumnType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SKDDriver.EFDataAccess.AdditionalColumnType), "AdditionalColumn", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SKDDriver.EFDataAccess.AdditionalColumn), true)]
[assembly: EdmRelationshipAttribute("SKDModel", "FK_AdditionalColumn_Employee", "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SKDDriver.EFDataAccess.Employee), "AdditionalColumn", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SKDDriver.EFDataAccess.AdditionalColumn), true)]
[assembly: EdmRelationshipAttribute("SKDModel", "FK_AdditionalColumn_Photo", "Photo", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SKDDriver.EFDataAccess.Photo), "AdditionalColumn", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SKDDriver.EFDataAccess.AdditionalColumn), true)]
[assembly: EdmRelationshipAttribute("SKDModel", "FK_AdditionalColumnType_Organisation", "Organisation", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SKDDriver.EFDataAccess.Organisation), "AdditionalColumnType", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SKDDriver.EFDataAccess.AdditionalColumnType), true)]
[assembly: EdmRelationshipAttribute("SKDModel", "FK_Card_Employee", "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SKDDriver.EFDataAccess.Employee), "Card", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SKDDriver.EFDataAccess.Card), true)]
[assembly: EdmRelationshipAttribute("SKDModel", "FK_CardDoor_Card", "Card", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SKDDriver.EFDataAccess.Card), "CardDoor", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SKDDriver.EFDataAccess.CardDoor), true)]
[assembly: EdmRelationshipAttribute("SKDModel", "FK_PendingCard_Card", "Card", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SKDDriver.EFDataAccess.Card), "PendingCard", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SKDDriver.EFDataAccess.PendingCard), true)]
[assembly: EdmRelationshipAttribute("SKDModel", "FK_DayInterval_Organisation", "Organisation", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SKDDriver.EFDataAccess.Organisation), "DayInterval", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SKDDriver.EFDataAccess.DayInterval), true)]
[assembly: EdmRelationshipAttribute("SKDModel", "FK_DayIntervalPart_DayInterval1", "DayInterval", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SKDDriver.EFDataAccess.DayInterval), "DayIntervalPart", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SKDDriver.EFDataAccess.DayIntervalPart), true)]
[assembly: EdmRelationshipAttribute("SKDModel", "FK_ScheduleDay_DayInterval", "DayInterval", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SKDDriver.EFDataAccess.DayInterval), "ScheduleDay", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SKDDriver.EFDataAccess.ScheduleDay), true)]
[assembly: EdmRelationshipAttribute("SKDModel", "FK_Department_Department1", "Department", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SKDDriver.EFDataAccess.Department), "Department1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SKDDriver.EFDataAccess.Department), true)]
[assembly: EdmRelationshipAttribute("SKDModel", "FK_Department_Employee", "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SKDDriver.EFDataAccess.Employee), "Department", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SKDDriver.EFDataAccess.Department), true)]
[assembly: EdmRelationshipAttribute("SKDModel", "FK_Department_Employee1", "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SKDDriver.EFDataAccess.Employee), "Department", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SKDDriver.EFDataAccess.Department), true)]
[assembly: EdmRelationshipAttribute("SKDModel", "FK_Department_Employee2", "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SKDDriver.EFDataAccess.Employee), "Department", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SKDDriver.EFDataAccess.Department), true)]
[assembly: EdmRelationshipAttribute("SKDModel", "FK_Department_Organisation", "Organisation", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SKDDriver.EFDataAccess.Organisation), "Department", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SKDDriver.EFDataAccess.Department), true)]
[assembly: EdmRelationshipAttribute("SKDModel", "FK_Department_Photo", "Photo", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SKDDriver.EFDataAccess.Photo), "Department", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SKDDriver.EFDataAccess.Department), true)]
[assembly: EdmRelationshipAttribute("SKDModel", "FK_Employee_Department1", "Department", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SKDDriver.EFDataAccess.Department), "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SKDDriver.EFDataAccess.Employee), true)]
[assembly: EdmRelationshipAttribute("SKDModel", "FK_Employee_Employee", "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SKDDriver.EFDataAccess.Employee), "Employee1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SKDDriver.EFDataAccess.Employee), true)]
[assembly: EdmRelationshipAttribute("SKDModel", "FK_Employee_Organisation", "Organisation", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SKDDriver.EFDataAccess.Organisation), "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SKDDriver.EFDataAccess.Employee), true)]
[assembly: EdmRelationshipAttribute("SKDModel", "FK_Employee_Photo", "Photo", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SKDDriver.EFDataAccess.Photo), "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SKDDriver.EFDataAccess.Employee), true)]
[assembly: EdmRelationshipAttribute("SKDModel", "FK_Employee_Position", "Position", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SKDDriver.EFDataAccess.Position), "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SKDDriver.EFDataAccess.Employee), true)]
[assembly: EdmRelationshipAttribute("SKDModel", "FK_Employee_Schedule", "Schedule", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SKDDriver.EFDataAccess.Schedule), "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SKDDriver.EFDataAccess.Employee), true)]
[assembly: EdmRelationshipAttribute("SKDModel", "FK_Organisation_Employee", "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SKDDriver.EFDataAccess.Employee), "Organisation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SKDDriver.EFDataAccess.Organisation), true)]
[assembly: EdmRelationshipAttribute("SKDModel", "FK_Organisation_Employee3", "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SKDDriver.EFDataAccess.Employee), "Organisation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SKDDriver.EFDataAccess.Organisation), true)]
[assembly: EdmRelationshipAttribute("SKDModel", "FK_TimeTrackException_Employee", "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SKDDriver.EFDataAccess.Employee), "TimeTrackException", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SKDDriver.EFDataAccess.TimeTrackException), true)]
[assembly: EdmRelationshipAttribute("SKDModel", "FK_GKDaySchedulePart_GKDaySchedule", "GKDaySchedule", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SKDDriver.EFDataAccess.GKDaySchedule), "GKDaySchedulePart", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SKDDriver.EFDataAccess.GKDaySchedulePart), true)]
[assembly: EdmRelationshipAttribute("SKDModel", "FK_ScheduleGKSchedule_GKDaySchedule", "GKDaySchedule", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SKDDriver.EFDataAccess.GKDaySchedule), "ScheduleGKDaySchedule", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SKDDriver.EFDataAccess.ScheduleGKDaySchedule), true)]
[assembly: EdmRelationshipAttribute("SKDModel", "FK_GKScheduleDay_GKSchedule", "GKSchedule", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SKDDriver.EFDataAccess.GKSchedule), "GKScheduleDay", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SKDDriver.EFDataAccess.GKScheduleDay), true)]
[assembly: EdmRelationshipAttribute("SKDModel", "FK_ScheduleGKSchedule_GKSchedule", "GKSchedule", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SKDDriver.EFDataAccess.GKSchedule), "ScheduleGKDaySchedule", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SKDDriver.EFDataAccess.ScheduleGKDaySchedule), true)]
[assembly: EdmRelationshipAttribute("SKDModel", "FK_Holiday_Organisation", "Organisation", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SKDDriver.EFDataAccess.Organisation), "Holiday", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SKDDriver.EFDataAccess.Holiday), true)]
[assembly: EdmRelationshipAttribute("SKDModel", "FK_NightSettings_Organisation", "Organisation", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SKDDriver.EFDataAccess.Organisation), "NightSettings", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SKDDriver.EFDataAccess.NightSetting), true)]
[assembly: EdmRelationshipAttribute("SKDModel", "FK_Organisation_Photo", "Photo", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SKDDriver.EFDataAccess.Photo), "Organisation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SKDDriver.EFDataAccess.Organisation), true)]
[assembly: EdmRelationshipAttribute("SKDModel", "FK_OrganisationDoor_Organisation", "Organisation", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SKDDriver.EFDataAccess.Organisation), "OrganisationDoor", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SKDDriver.EFDataAccess.OrganisationDoor), true)]
[assembly: EdmRelationshipAttribute("SKDModel", "FK_OrganisationUser_Organisation", "Organisation", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SKDDriver.EFDataAccess.Organisation), "OrganisationUser", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SKDDriver.EFDataAccess.OrganisationUser), true)]
[assembly: EdmRelationshipAttribute("SKDModel", "FK_PassCardTemplate_Organisation", "Organisation", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SKDDriver.EFDataAccess.Organisation), "PassCardTemplate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SKDDriver.EFDataAccess.PassCardTemplate), true)]
[assembly: EdmRelationshipAttribute("SKDModel", "FK_Position_Organisation", "Organisation", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SKDDriver.EFDataAccess.Organisation), "Position", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SKDDriver.EFDataAccess.Position), true)]
[assembly: EdmRelationshipAttribute("SKDModel", "FK_Schedule_Organisation", "Organisation", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SKDDriver.EFDataAccess.Organisation), "Schedule", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SKDDriver.EFDataAccess.Schedule), true)]
[assembly: EdmRelationshipAttribute("SKDModel", "FK_ScheduleScheme_Organisation", "Organisation", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SKDDriver.EFDataAccess.Organisation), "ScheduleScheme", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SKDDriver.EFDataAccess.ScheduleScheme), true)]
[assembly: EdmRelationshipAttribute("SKDModel", "FK_TimeTrackDocumentType_Organisation", "Organisation", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SKDDriver.EFDataAccess.Organisation), "TimeTrackDocumentType", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SKDDriver.EFDataAccess.TimeTrackDocumentType), true)]
[assembly: EdmRelationshipAttribute("SKDModel", "FK_Position_Photo", "Photo", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SKDDriver.EFDataAccess.Photo), "Position", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SKDDriver.EFDataAccess.Position), true)]
[assembly: EdmRelationshipAttribute("SKDModel", "FK_Schedule_ScheduleScheme", "ScheduleScheme", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SKDDriver.EFDataAccess.ScheduleScheme), "Schedule", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SKDDriver.EFDataAccess.Schedule), true)]
[assembly: EdmRelationshipAttribute("SKDModel", "FK_ScheduleZone_Schedule", "Schedule", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SKDDriver.EFDataAccess.Schedule), "ScheduleZone", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SKDDriver.EFDataAccess.ScheduleZone), true)]
[assembly: EdmRelationshipAttribute("SKDModel", "FK_ScheduleDay_ScheduleScheme", "ScheduleScheme", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SKDDriver.EFDataAccess.ScheduleScheme), "ScheduleDay", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SKDDriver.EFDataAccess.ScheduleDay), true)]

#endregion

namespace SKDDriver.EFDataAccess
{
    #region Контексты
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    public partial class SKDEntities : ObjectContext
    {
        #region Конструкторы
    
        /// <summary>
        /// Инициализирует новый объект SKDEntities1, используя строку соединения из раздела "SKDEntities1" файла конфигурации приложения.
        /// </summary>
        public SKDEntities() : base("name=SKDEntities1", "SKDEntities1")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Инициализация нового объекта SKDEntities1.
        /// </summary>
        public SKDEntities(string connectionString) : base(connectionString, "SKDEntities1")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Инициализация нового объекта SKDEntities1.
        /// </summary>
        public SKDEntities(EntityConnection connection) : base(connection, "SKDEntities1")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Разделяемые методы
    
        partial void OnContextCreated();
    
        #endregion
    
        #region Свойства ObjectSet
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<AccessTemplate> AccessTemplates
        {
            get
            {
                if ((_AccessTemplates == null))
                {
                    _AccessTemplates = base.CreateObjectSet<AccessTemplate>("AccessTemplates");
                }
                return _AccessTemplates;
            }
        }
        private ObjectSet<AccessTemplate> _AccessTemplates;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<AdditionalColumn> AdditionalColumns
        {
            get
            {
                if ((_AdditionalColumns == null))
                {
                    _AdditionalColumns = base.CreateObjectSet<AdditionalColumn>("AdditionalColumns");
                }
                return _AdditionalColumns;
            }
        }
        private ObjectSet<AdditionalColumn> _AdditionalColumns;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<AdditionalColumnType> AdditionalColumnTypes
        {
            get
            {
                if ((_AdditionalColumnTypes == null))
                {
                    _AdditionalColumnTypes = base.CreateObjectSet<AdditionalColumnType>("AdditionalColumnTypes");
                }
                return _AdditionalColumnTypes;
            }
        }
        private ObjectSet<AdditionalColumnType> _AdditionalColumnTypes;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Card> Cards
        {
            get
            {
                if ((_Cards == null))
                {
                    _Cards = base.CreateObjectSet<Card>("Cards");
                }
                return _Cards;
            }
        }
        private ObjectSet<Card> _Cards;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<CardDoor> CardDoors
        {
            get
            {
                if ((_CardDoors == null))
                {
                    _CardDoors = base.CreateObjectSet<CardDoor>("CardDoors");
                }
                return _CardDoors;
            }
        }
        private ObjectSet<CardDoor> _CardDoors;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<DayInterval> DayIntervals
        {
            get
            {
                if ((_DayIntervals == null))
                {
                    _DayIntervals = base.CreateObjectSet<DayInterval>("DayIntervals");
                }
                return _DayIntervals;
            }
        }
        private ObjectSet<DayInterval> _DayIntervals;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<DayIntervalPart> DayIntervalParts
        {
            get
            {
                if ((_DayIntervalParts == null))
                {
                    _DayIntervalParts = base.CreateObjectSet<DayIntervalPart>("DayIntervalParts");
                }
                return _DayIntervalParts;
            }
        }
        private ObjectSet<DayIntervalPart> _DayIntervalParts;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Department> Departments
        {
            get
            {
                if ((_Departments == null))
                {
                    _Departments = base.CreateObjectSet<Department>("Departments");
                }
                return _Departments;
            }
        }
        private ObjectSet<Department> _Departments;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Employee> Employees
        {
            get
            {
                if ((_Employees == null))
                {
                    _Employees = base.CreateObjectSet<Employee>("Employees");
                }
                return _Employees;
            }
        }
        private ObjectSet<Employee> _Employees;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<GKCard> GKCards
        {
            get
            {
                if ((_GKCards == null))
                {
                    _GKCards = base.CreateObjectSet<GKCard>("GKCards");
                }
                return _GKCards;
            }
        }
        private ObjectSet<GKCard> _GKCards;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<GKDaySchedule> GKDaySchedules
        {
            get
            {
                if ((_GKDaySchedules == null))
                {
                    _GKDaySchedules = base.CreateObjectSet<GKDaySchedule>("GKDaySchedules");
                }
                return _GKDaySchedules;
            }
        }
        private ObjectSet<GKDaySchedule> _GKDaySchedules;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<GKDaySchedulePart> GKDayScheduleParts
        {
            get
            {
                if ((_GKDayScheduleParts == null))
                {
                    _GKDayScheduleParts = base.CreateObjectSet<GKDaySchedulePart>("GKDayScheduleParts");
                }
                return _GKDayScheduleParts;
            }
        }
        private ObjectSet<GKDaySchedulePart> _GKDayScheduleParts;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<GKMetadata> GKMetadatas
        {
            get
            {
                if ((_GKMetadatas == null))
                {
                    _GKMetadatas = base.CreateObjectSet<GKMetadata>("GKMetadatas");
                }
                return _GKMetadatas;
            }
        }
        private ObjectSet<GKMetadata> _GKMetadatas;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<GKSchedule> GKSchedules
        {
            get
            {
                if ((_GKSchedules == null))
                {
                    _GKSchedules = base.CreateObjectSet<GKSchedule>("GKSchedules");
                }
                return _GKSchedules;
            }
        }
        private ObjectSet<GKSchedule> _GKSchedules;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<GKScheduleDay> GKScheduleDays
        {
            get
            {
                if ((_GKScheduleDays == null))
                {
                    _GKScheduleDays = base.CreateObjectSet<GKScheduleDay>("GKScheduleDays");
                }
                return _GKScheduleDays;
            }
        }
        private ObjectSet<GKScheduleDay> _GKScheduleDays;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Holiday> Holidays
        {
            get
            {
                if ((_Holidays == null))
                {
                    _Holidays = base.CreateObjectSet<Holiday>("Holidays");
                }
                return _Holidays;
            }
        }
        private ObjectSet<Holiday> _Holidays;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<JournalMetadata> JournalMetadatas
        {
            get
            {
                if ((_JournalMetadatas == null))
                {
                    _JournalMetadatas = base.CreateObjectSet<JournalMetadata>("JournalMetadatas");
                }
                return _JournalMetadatas;
            }
        }
        private ObjectSet<JournalMetadata> _JournalMetadatas;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<NightSetting> NightSettings
        {
            get
            {
                if ((_NightSettings == null))
                {
                    _NightSettings = base.CreateObjectSet<NightSetting>("NightSettings");
                }
                return _NightSettings;
            }
        }
        private ObjectSet<NightSetting> _NightSettings;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Organisation> Organisations
        {
            get
            {
                if ((_Organisations == null))
                {
                    _Organisations = base.CreateObjectSet<Organisation>("Organisations");
                }
                return _Organisations;
            }
        }
        private ObjectSet<Organisation> _Organisations;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<OrganisationDoor> OrganisationDoors
        {
            get
            {
                if ((_OrganisationDoors == null))
                {
                    _OrganisationDoors = base.CreateObjectSet<OrganisationDoor>("OrganisationDoors");
                }
                return _OrganisationDoors;
            }
        }
        private ObjectSet<OrganisationDoor> _OrganisationDoors;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<OrganisationUser> OrganisationUsers
        {
            get
            {
                if ((_OrganisationUsers == null))
                {
                    _OrganisationUsers = base.CreateObjectSet<OrganisationUser>("OrganisationUsers");
                }
                return _OrganisationUsers;
            }
        }
        private ObjectSet<OrganisationUser> _OrganisationUsers;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<PassCardTemplate> PassCardTemplates
        {
            get
            {
                if ((_PassCardTemplates == null))
                {
                    _PassCardTemplates = base.CreateObjectSet<PassCardTemplate>("PassCardTemplates");
                }
                return _PassCardTemplates;
            }
        }
        private ObjectSet<PassCardTemplate> _PassCardTemplates;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<PassJournalMetadata> PassJournalMetadatas
        {
            get
            {
                if ((_PassJournalMetadatas == null))
                {
                    _PassJournalMetadatas = base.CreateObjectSet<PassJournalMetadata>("PassJournalMetadatas");
                }
                return _PassJournalMetadatas;
            }
        }
        private ObjectSet<PassJournalMetadata> _PassJournalMetadatas;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Patch> Patches
        {
            get
            {
                if ((_Patches == null))
                {
                    _Patches = base.CreateObjectSet<Patch>("Patches");
                }
                return _Patches;
            }
        }
        private ObjectSet<Patch> _Patches;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<PendingCard> PendingCards
        {
            get
            {
                if ((_PendingCards == null))
                {
                    _PendingCards = base.CreateObjectSet<PendingCard>("PendingCards");
                }
                return _PendingCards;
            }
        }
        private ObjectSet<PendingCard> _PendingCards;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Photo> Photos
        {
            get
            {
                if ((_Photos == null))
                {
                    _Photos = base.CreateObjectSet<Photo>("Photos");
                }
                return _Photos;
            }
        }
        private ObjectSet<Photo> _Photos;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Position> Positions
        {
            get
            {
                if ((_Positions == null))
                {
                    _Positions = base.CreateObjectSet<Position>("Positions");
                }
                return _Positions;
            }
        }
        private ObjectSet<Position> _Positions;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Schedule> Schedules
        {
            get
            {
                if ((_Schedules == null))
                {
                    _Schedules = base.CreateObjectSet<Schedule>("Schedules");
                }
                return _Schedules;
            }
        }
        private ObjectSet<Schedule> _Schedules;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<ScheduleDay> ScheduleDays
        {
            get
            {
                if ((_ScheduleDays == null))
                {
                    _ScheduleDays = base.CreateObjectSet<ScheduleDay>("ScheduleDays");
                }
                return _ScheduleDays;
            }
        }
        private ObjectSet<ScheduleDay> _ScheduleDays;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<ScheduleGKDaySchedule> ScheduleGKDaySchedules
        {
            get
            {
                if ((_ScheduleGKDaySchedules == null))
                {
                    _ScheduleGKDaySchedules = base.CreateObjectSet<ScheduleGKDaySchedule>("ScheduleGKDaySchedules");
                }
                return _ScheduleGKDaySchedules;
            }
        }
        private ObjectSet<ScheduleGKDaySchedule> _ScheduleGKDaySchedules;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<ScheduleScheme> ScheduleSchemes
        {
            get
            {
                if ((_ScheduleSchemes == null))
                {
                    _ScheduleSchemes = base.CreateObjectSet<ScheduleScheme>("ScheduleSchemes");
                }
                return _ScheduleSchemes;
            }
        }
        private ObjectSet<ScheduleScheme> _ScheduleSchemes;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<ScheduleZone> ScheduleZones
        {
            get
            {
                if ((_ScheduleZones == null))
                {
                    _ScheduleZones = base.CreateObjectSet<ScheduleZone>("ScheduleZones");
                }
                return _ScheduleZones;
            }
        }
        private ObjectSet<ScheduleZone> _ScheduleZones;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<TimeTrackDocument> TimeTrackDocuments
        {
            get
            {
                if ((_TimeTrackDocuments == null))
                {
                    _TimeTrackDocuments = base.CreateObjectSet<TimeTrackDocument>("TimeTrackDocuments");
                }
                return _TimeTrackDocuments;
            }
        }
        private ObjectSet<TimeTrackDocument> _TimeTrackDocuments;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<TimeTrackDocumentType> TimeTrackDocumentTypes
        {
            get
            {
                if ((_TimeTrackDocumentTypes == null))
                {
                    _TimeTrackDocumentTypes = base.CreateObjectSet<TimeTrackDocumentType>("TimeTrackDocumentTypes");
                }
                return _TimeTrackDocumentTypes;
            }
        }
        private ObjectSet<TimeTrackDocumentType> _TimeTrackDocumentTypes;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<TimeTrackException> TimeTrackExceptions
        {
            get
            {
                if ((_TimeTrackExceptions == null))
                {
                    _TimeTrackExceptions = base.CreateObjectSet<TimeTrackException>("TimeTrackExceptions");
                }
                return _TimeTrackExceptions;
            }
        }
        private ObjectSet<TimeTrackException> _TimeTrackExceptions;

        #endregion
        #region Методы AddTo
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet AccessTemplates. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToAccessTemplates(AccessTemplate accessTemplate)
        {
            base.AddObject("AccessTemplates", accessTemplate);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet AdditionalColumns. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToAdditionalColumns(AdditionalColumn additionalColumn)
        {
            base.AddObject("AdditionalColumns", additionalColumn);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet AdditionalColumnTypes. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToAdditionalColumnTypes(AdditionalColumnType additionalColumnType)
        {
            base.AddObject("AdditionalColumnTypes", additionalColumnType);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Cards. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToCards(Card card)
        {
            base.AddObject("Cards", card);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet CardDoors. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToCardDoors(CardDoor cardDoor)
        {
            base.AddObject("CardDoors", cardDoor);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet DayIntervals. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToDayIntervals(DayInterval dayInterval)
        {
            base.AddObject("DayIntervals", dayInterval);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet DayIntervalParts. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToDayIntervalParts(DayIntervalPart dayIntervalPart)
        {
            base.AddObject("DayIntervalParts", dayIntervalPart);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Departments. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToDepartments(Department department)
        {
            base.AddObject("Departments", department);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Employees. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToEmployees(Employee employee)
        {
            base.AddObject("Employees", employee);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet GKCards. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToGKCards(GKCard gKCard)
        {
            base.AddObject("GKCards", gKCard);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet GKDaySchedules. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToGKDaySchedules(GKDaySchedule gKDaySchedule)
        {
            base.AddObject("GKDaySchedules", gKDaySchedule);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet GKDayScheduleParts. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToGKDayScheduleParts(GKDaySchedulePart gKDaySchedulePart)
        {
            base.AddObject("GKDayScheduleParts", gKDaySchedulePart);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet GKMetadatas. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToGKMetadatas(GKMetadata gKMetadata)
        {
            base.AddObject("GKMetadatas", gKMetadata);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet GKSchedules. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToGKSchedules(GKSchedule gKSchedule)
        {
            base.AddObject("GKSchedules", gKSchedule);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet GKScheduleDays. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToGKScheduleDays(GKScheduleDay gKScheduleDay)
        {
            base.AddObject("GKScheduleDays", gKScheduleDay);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Holidays. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToHolidays(Holiday holiday)
        {
            base.AddObject("Holidays", holiday);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet JournalMetadatas. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToJournalMetadatas(JournalMetadata journalMetadata)
        {
            base.AddObject("JournalMetadatas", journalMetadata);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet NightSettings. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToNightSettings(NightSetting nightSetting)
        {
            base.AddObject("NightSettings", nightSetting);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Organisations. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToOrganisations(Organisation organisation)
        {
            base.AddObject("Organisations", organisation);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet OrganisationDoors. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToOrganisationDoors(OrganisationDoor organisationDoor)
        {
            base.AddObject("OrganisationDoors", organisationDoor);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet OrganisationUsers. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToOrganisationUsers(OrganisationUser organisationUser)
        {
            base.AddObject("OrganisationUsers", organisationUser);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet PassCardTemplates. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToPassCardTemplates(PassCardTemplate passCardTemplate)
        {
            base.AddObject("PassCardTemplates", passCardTemplate);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet PassJournalMetadatas. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToPassJournalMetadatas(PassJournalMetadata passJournalMetadata)
        {
            base.AddObject("PassJournalMetadatas", passJournalMetadata);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Patches. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToPatches(Patch patch)
        {
            base.AddObject("Patches", patch);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet PendingCards. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToPendingCards(PendingCard pendingCard)
        {
            base.AddObject("PendingCards", pendingCard);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Photos. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToPhotos(Photo photo)
        {
            base.AddObject("Photos", photo);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Positions. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToPositions(Position position)
        {
            base.AddObject("Positions", position);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Schedules. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToSchedules(Schedule schedule)
        {
            base.AddObject("Schedules", schedule);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet ScheduleDays. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToScheduleDays(ScheduleDay scheduleDay)
        {
            base.AddObject("ScheduleDays", scheduleDay);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet ScheduleGKDaySchedules. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToScheduleGKDaySchedules(ScheduleGKDaySchedule scheduleGKDaySchedule)
        {
            base.AddObject("ScheduleGKDaySchedules", scheduleGKDaySchedule);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet ScheduleSchemes. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToScheduleSchemes(ScheduleScheme scheduleScheme)
        {
            base.AddObject("ScheduleSchemes", scheduleScheme);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet ScheduleZones. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToScheduleZones(ScheduleZone scheduleZone)
        {
            base.AddObject("ScheduleZones", scheduleZone);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet TimeTrackDocuments. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToTimeTrackDocuments(TimeTrackDocument timeTrackDocument)
        {
            base.AddObject("TimeTrackDocuments", timeTrackDocument);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet TimeTrackDocumentTypes. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToTimeTrackDocumentTypes(TimeTrackDocumentType timeTrackDocumentType)
        {
            base.AddObject("TimeTrackDocumentTypes", timeTrackDocumentType);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet TimeTrackExceptions. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToTimeTrackExceptions(TimeTrackException timeTrackException)
        {
            base.AddObject("TimeTrackExceptions", timeTrackException);
        }

        #endregion
    }
    

    #endregion
    
    #region Сущности
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SKDModel", Name="AccessTemplate")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AccessTemplate : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта AccessTemplate.
        /// </summary>
        /// <param name="uID">Исходное значение свойства UID.</param>
        /// <param name="isDeleted">Исходное значение свойства IsDeleted.</param>
        /// <param name="removalDate">Исходное значение свойства RemovalDate.</param>
        public static AccessTemplate CreateAccessTemplate(global::System.Guid uID, global::System.Boolean isDeleted, global::System.DateTime removalDate)
        {
            AccessTemplate accessTemplate = new AccessTemplate();
            accessTemplate.UID = uID;
            accessTemplate.IsDeleted = isDeleted;
            accessTemplate.RemovalDate = removalDate;
            return accessTemplate;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UID
        {
            get
            {
                return _UID;
            }
            set
            {
                if (_UID != value)
                {
                    OnUIDChanging(value);
                    ReportPropertyChanging("UID");
                    _UID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UID");
                    OnUIDChanged();
                }
            }
        }
        private global::System.Guid _UID;
        partial void OnUIDChanging(global::System.Guid value);
        partial void OnUIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime RemovalDate
        {
            get
            {
                return _RemovalDate;
            }
            set
            {
                OnRemovalDateChanging(value);
                ReportPropertyChanging("RemovalDate");
                _RemovalDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RemovalDate");
                OnRemovalDateChanged();
            }
        }
        private global::System.DateTime _RemovalDate;
        partial void OnRemovalDateChanging(global::System.DateTime value);
        partial void OnRemovalDateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> OrganisationUID
        {
            get
            {
                return _OrganisationUID;
            }
            set
            {
                OnOrganisationUIDChanging(value);
                ReportPropertyChanging("OrganisationUID");
                _OrganisationUID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OrganisationUID");
                OnOrganisationUIDChanged();
            }
        }
        private Nullable<global::System.Guid> _OrganisationUID;
        partial void OnOrganisationUIDChanging(Nullable<global::System.Guid> value);
        partial void OnOrganisationUIDChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SKDModel", "FK_AccessTemplate_Organisation", "Organisation")]
        public Organisation Organisation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organisation>("SKDModel.FK_AccessTemplate_Organisation", "Organisation").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organisation>("SKDModel.FK_AccessTemplate_Organisation", "Organisation").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Organisation> OrganisationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organisation>("SKDModel.FK_AccessTemplate_Organisation", "Organisation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Organisation>("SKDModel.FK_AccessTemplate_Organisation", "Organisation", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SKDModel", "FK_Card_AccessTemplate", "Card")]
        public EntityCollection<Card> Cards
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Card>("SKDModel.FK_Card_AccessTemplate", "Card");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Card>("SKDModel.FK_Card_AccessTemplate", "Card", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SKDModel", "FK_CardDoor_AccessTemplate", "CardDoor")]
        public EntityCollection<CardDoor> CardDoors
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CardDoor>("SKDModel.FK_CardDoor_AccessTemplate", "CardDoor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CardDoor>("SKDModel.FK_CardDoor_AccessTemplate", "CardDoor", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SKDModel", Name="AdditionalColumn")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AdditionalColumn : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта AdditionalColumn.
        /// </summary>
        /// <param name="uID">Исходное значение свойства UID.</param>
        public static AdditionalColumn CreateAdditionalColumn(global::System.Guid uID)
        {
            AdditionalColumn additionalColumn = new AdditionalColumn();
            additionalColumn.UID = uID;
            return additionalColumn;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UID
        {
            get
            {
                return _UID;
            }
            set
            {
                if (_UID != value)
                {
                    OnUIDChanging(value);
                    ReportPropertyChanging("UID");
                    _UID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UID");
                    OnUIDChanged();
                }
            }
        }
        private global::System.Guid _UID;
        partial void OnUIDChanging(global::System.Guid value);
        partial void OnUIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> EmployeeUID
        {
            get
            {
                return _EmployeeUID;
            }
            set
            {
                OnEmployeeUIDChanging(value);
                ReportPropertyChanging("EmployeeUID");
                _EmployeeUID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EmployeeUID");
                OnEmployeeUIDChanged();
            }
        }
        private Nullable<global::System.Guid> _EmployeeUID;
        partial void OnEmployeeUIDChanging(Nullable<global::System.Guid> value);
        partial void OnEmployeeUIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> AdditionalColumnTypeUID
        {
            get
            {
                return _AdditionalColumnTypeUID;
            }
            set
            {
                OnAdditionalColumnTypeUIDChanging(value);
                ReportPropertyChanging("AdditionalColumnTypeUID");
                _AdditionalColumnTypeUID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AdditionalColumnTypeUID");
                OnAdditionalColumnTypeUIDChanged();
            }
        }
        private Nullable<global::System.Guid> _AdditionalColumnTypeUID;
        partial void OnAdditionalColumnTypeUIDChanging(Nullable<global::System.Guid> value);
        partial void OnAdditionalColumnTypeUIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TextData
        {
            get
            {
                return _TextData;
            }
            set
            {
                OnTextDataChanging(value);
                ReportPropertyChanging("TextData");
                _TextData = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TextData");
                OnTextDataChanged();
            }
        }
        private global::System.String _TextData;
        partial void OnTextDataChanging(global::System.String value);
        partial void OnTextDataChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> PhotoUID
        {
            get
            {
                return _PhotoUID;
            }
            set
            {
                OnPhotoUIDChanging(value);
                ReportPropertyChanging("PhotoUID");
                _PhotoUID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PhotoUID");
                OnPhotoUIDChanged();
            }
        }
        private Nullable<global::System.Guid> _PhotoUID;
        partial void OnPhotoUIDChanging(Nullable<global::System.Guid> value);
        partial void OnPhotoUIDChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SKDModel", "FK_AdditionalColumn_AdditionalColumnType", "AdditionalColumnType")]
        public AdditionalColumnType AdditionalColumnType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdditionalColumnType>("SKDModel.FK_AdditionalColumn_AdditionalColumnType", "AdditionalColumnType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdditionalColumnType>("SKDModel.FK_AdditionalColumn_AdditionalColumnType", "AdditionalColumnType").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AdditionalColumnType> AdditionalColumnTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdditionalColumnType>("SKDModel.FK_AdditionalColumn_AdditionalColumnType", "AdditionalColumnType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AdditionalColumnType>("SKDModel.FK_AdditionalColumn_AdditionalColumnType", "AdditionalColumnType", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SKDModel", "FK_AdditionalColumn_Employee", "Employee")]
        public Employee Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("SKDModel.FK_AdditionalColumn_Employee", "Employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("SKDModel.FK_AdditionalColumn_Employee", "Employee").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> EmployeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("SKDModel.FK_AdditionalColumn_Employee", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("SKDModel.FK_AdditionalColumn_Employee", "Employee", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SKDModel", "FK_AdditionalColumn_Photo", "Photo")]
        public Photo Photo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Photo>("SKDModel.FK_AdditionalColumn_Photo", "Photo").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Photo>("SKDModel.FK_AdditionalColumn_Photo", "Photo").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Photo> PhotoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Photo>("SKDModel.FK_AdditionalColumn_Photo", "Photo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Photo>("SKDModel.FK_AdditionalColumn_Photo", "Photo", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SKDModel", Name="AdditionalColumnType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AdditionalColumnType : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта AdditionalColumnType.
        /// </summary>
        /// <param name="uID">Исходное значение свойства UID.</param>
        /// <param name="isDeleted">Исходное значение свойства IsDeleted.</param>
        /// <param name="removalDate">Исходное значение свойства RemovalDate.</param>
        /// <param name="isInGrid">Исходное значение свойства IsInGrid.</param>
        public static AdditionalColumnType CreateAdditionalColumnType(global::System.Guid uID, global::System.Boolean isDeleted, global::System.DateTime removalDate, global::System.Boolean isInGrid)
        {
            AdditionalColumnType additionalColumnType = new AdditionalColumnType();
            additionalColumnType.UID = uID;
            additionalColumnType.IsDeleted = isDeleted;
            additionalColumnType.RemovalDate = removalDate;
            additionalColumnType.IsInGrid = isInGrid;
            return additionalColumnType;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UID
        {
            get
            {
                return _UID;
            }
            set
            {
                if (_UID != value)
                {
                    OnUIDChanging(value);
                    ReportPropertyChanging("UID");
                    _UID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UID");
                    OnUIDChanged();
                }
            }
        }
        private global::System.Guid _UID;
        partial void OnUIDChanging(global::System.Guid value);
        partial void OnUIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime RemovalDate
        {
            get
            {
                return _RemovalDate;
            }
            set
            {
                OnRemovalDateChanging(value);
                ReportPropertyChanging("RemovalDate");
                _RemovalDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RemovalDate");
                OnRemovalDateChanged();
            }
        }
        private global::System.DateTime _RemovalDate;
        partial void OnRemovalDateChanging(global::System.DateTime value);
        partial void OnRemovalDateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DataType
        {
            get
            {
                return _DataType;
            }
            set
            {
                OnDataTypeChanging(value);
                ReportPropertyChanging("DataType");
                _DataType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DataType");
                OnDataTypeChanged();
            }
        }
        private Nullable<global::System.Int32> _DataType;
        partial void OnDataTypeChanging(Nullable<global::System.Int32> value);
        partial void OnDataTypeChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PersonType
        {
            get
            {
                return _PersonType;
            }
            set
            {
                OnPersonTypeChanging(value);
                ReportPropertyChanging("PersonType");
                _PersonType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PersonType");
                OnPersonTypeChanged();
            }
        }
        private Nullable<global::System.Int32> _PersonType;
        partial void OnPersonTypeChanging(Nullable<global::System.Int32> value);
        partial void OnPersonTypeChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> OrganisationUID
        {
            get
            {
                return _OrganisationUID;
            }
            set
            {
                OnOrganisationUIDChanging(value);
                ReportPropertyChanging("OrganisationUID");
                _OrganisationUID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OrganisationUID");
                OnOrganisationUIDChanged();
            }
        }
        private Nullable<global::System.Guid> _OrganisationUID;
        partial void OnOrganisationUIDChanging(Nullable<global::System.Guid> value);
        partial void OnOrganisationUIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsInGrid
        {
            get
            {
                return _IsInGrid;
            }
            set
            {
                OnIsInGridChanging(value);
                ReportPropertyChanging("IsInGrid");
                _IsInGrid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsInGrid");
                OnIsInGridChanged();
            }
        }
        private global::System.Boolean _IsInGrid;
        partial void OnIsInGridChanging(global::System.Boolean value);
        partial void OnIsInGridChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SKDModel", "FK_AdditionalColumn_AdditionalColumnType", "AdditionalColumn")]
        public EntityCollection<AdditionalColumn> AdditionalColumns
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AdditionalColumn>("SKDModel.FK_AdditionalColumn_AdditionalColumnType", "AdditionalColumn");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AdditionalColumn>("SKDModel.FK_AdditionalColumn_AdditionalColumnType", "AdditionalColumn", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SKDModel", "FK_AdditionalColumnType_Organisation", "Organisation")]
        public Organisation Organisation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organisation>("SKDModel.FK_AdditionalColumnType_Organisation", "Organisation").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organisation>("SKDModel.FK_AdditionalColumnType_Organisation", "Organisation").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Organisation> OrganisationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organisation>("SKDModel.FK_AdditionalColumnType_Organisation", "Organisation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Organisation>("SKDModel.FK_AdditionalColumnType_Organisation", "Organisation", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SKDModel", Name="Card")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Card : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Card.
        /// </summary>
        /// <param name="uID">Исходное значение свойства UID.</param>
        /// <param name="number">Исходное значение свойства Number.</param>
        /// <param name="startDate">Исходное значение свойства StartDate.</param>
        /// <param name="endDate">Исходное значение свойства EndDate.</param>
        /// <param name="isInStopList">Исходное значение свойства IsInStopList.</param>
        /// <param name="userTime">Исходное значение свойства UserTime.</param>
        /// <param name="gKLevel">Исходное значение свойства GKLevel.</param>
        /// <param name="gKLevelSchedule">Исходное значение свойства GKLevelSchedule.</param>
        /// <param name="externalKey">Исходное значение свойства ExternalKey.</param>
        /// <param name="gKCardType">Исходное значение свойства GKCardType.</param>
        public static Card CreateCard(global::System.Guid uID, global::System.Int32 number, global::System.DateTime startDate, global::System.DateTime endDate, global::System.Boolean isInStopList, global::System.Int32 userTime, global::System.Byte gKLevel, global::System.Byte gKLevelSchedule, global::System.String externalKey, global::System.Int32 gKCardType)
        {
            Card card = new Card();
            card.UID = uID;
            card.Number = number;
            card.StartDate = startDate;
            card.EndDate = endDate;
            card.IsInStopList = isInStopList;
            card.UserTime = userTime;
            card.GKLevel = gKLevel;
            card.GKLevelSchedule = gKLevelSchedule;
            card.ExternalKey = externalKey;
            card.GKCardType = gKCardType;
            return card;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UID
        {
            get
            {
                return _UID;
            }
            set
            {
                if (_UID != value)
                {
                    OnUIDChanging(value);
                    ReportPropertyChanging("UID");
                    _UID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UID");
                    OnUIDChanged();
                }
            }
        }
        private global::System.Guid _UID;
        partial void OnUIDChanging(global::System.Guid value);
        partial void OnUIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Number
        {
            get
            {
                return _Number;
            }
            set
            {
                OnNumberChanging(value);
                ReportPropertyChanging("Number");
                _Number = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Number");
                OnNumberChanged();
            }
        }
        private global::System.Int32 _Number;
        partial void OnNumberChanging(global::System.Int32 value);
        partial void OnNumberChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> EmployeeUID
        {
            get
            {
                return _EmployeeUID;
            }
            set
            {
                OnEmployeeUIDChanging(value);
                ReportPropertyChanging("EmployeeUID");
                _EmployeeUID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EmployeeUID");
                OnEmployeeUIDChanged();
            }
        }
        private Nullable<global::System.Guid> _EmployeeUID;
        partial void OnEmployeeUIDChanging(Nullable<global::System.Guid> value);
        partial void OnEmployeeUIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> AccessTemplateUID
        {
            get
            {
                return _AccessTemplateUID;
            }
            set
            {
                OnAccessTemplateUIDChanging(value);
                ReportPropertyChanging("AccessTemplateUID");
                _AccessTemplateUID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AccessTemplateUID");
                OnAccessTemplateUIDChanged();
            }
        }
        private Nullable<global::System.Guid> _AccessTemplateUID;
        partial void OnAccessTemplateUIDChanging(Nullable<global::System.Guid> value);
        partial void OnAccessTemplateUIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CardType
        {
            get
            {
                return _CardType;
            }
            set
            {
                OnCardTypeChanging(value);
                ReportPropertyChanging("CardType");
                _CardType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CardType");
                OnCardTypeChanged();
            }
        }
        private Nullable<global::System.Int32> _CardType;
        partial void OnCardTypeChanging(Nullable<global::System.Int32> value);
        partial void OnCardTypeChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private global::System.DateTime _StartDate;
        partial void OnStartDateChanging(global::System.DateTime value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                OnEndDateChanging(value);
                ReportPropertyChanging("EndDate");
                _EndDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndDate");
                OnEndDateChanged();
            }
        }
        private global::System.DateTime _EndDate;
        partial void OnEndDateChanging(global::System.DateTime value);
        partial void OnEndDateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsInStopList
        {
            get
            {
                return _IsInStopList;
            }
            set
            {
                OnIsInStopListChanging(value);
                ReportPropertyChanging("IsInStopList");
                _IsInStopList = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsInStopList");
                OnIsInStopListChanged();
            }
        }
        private global::System.Boolean _IsInStopList;
        partial void OnIsInStopListChanging(global::System.Boolean value);
        partial void OnIsInStopListChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StopReason
        {
            get
            {
                return _StopReason;
            }
            set
            {
                OnStopReasonChanging(value);
                ReportPropertyChanging("StopReason");
                _StopReason = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("StopReason");
                OnStopReasonChanged();
            }
        }
        private global::System.String _StopReason;
        partial void OnStopReasonChanging(global::System.String value);
        partial void OnStopReasonChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> PassCardTemplateUID
        {
            get
            {
                return _PassCardTemplateUID;
            }
            set
            {
                OnPassCardTemplateUIDChanging(value);
                ReportPropertyChanging("PassCardTemplateUID");
                _PassCardTemplateUID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PassCardTemplateUID");
                OnPassCardTemplateUIDChanged();
            }
        }
        private Nullable<global::System.Guid> _PassCardTemplateUID;
        partial void OnPassCardTemplateUIDChanging(Nullable<global::System.Guid> value);
        partial void OnPassCardTemplateUIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> DeactivationControllerUID
        {
            get
            {
                return _DeactivationControllerUID;
            }
            set
            {
                OnDeactivationControllerUIDChanging(value);
                ReportPropertyChanging("DeactivationControllerUID");
                _DeactivationControllerUID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeactivationControllerUID");
                OnDeactivationControllerUIDChanged();
            }
        }
        private Nullable<global::System.Guid> _DeactivationControllerUID;
        partial void OnDeactivationControllerUIDChanging(Nullable<global::System.Guid> value);
        partial void OnDeactivationControllerUIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserTime
        {
            get
            {
                return _UserTime;
            }
            set
            {
                OnUserTimeChanging(value);
                ReportPropertyChanging("UserTime");
                _UserTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserTime");
                OnUserTimeChanged();
            }
        }
        private global::System.Int32 _UserTime;
        partial void OnUserTimeChanging(global::System.Int32 value);
        partial void OnUserTimeChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte GKLevel
        {
            get
            {
                return _GKLevel;
            }
            set
            {
                OnGKLevelChanging(value);
                ReportPropertyChanging("GKLevel");
                _GKLevel = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GKLevel");
                OnGKLevelChanged();
            }
        }
        private global::System.Byte _GKLevel;
        partial void OnGKLevelChanging(global::System.Byte value);
        partial void OnGKLevelChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte GKLevelSchedule
        {
            get
            {
                return _GKLevelSchedule;
            }
            set
            {
                OnGKLevelScheduleChanging(value);
                ReportPropertyChanging("GKLevelSchedule");
                _GKLevelSchedule = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GKLevelSchedule");
                OnGKLevelScheduleChanged();
            }
        }
        private global::System.Byte _GKLevelSchedule;
        partial void OnGKLevelScheduleChanging(global::System.Byte value);
        partial void OnGKLevelScheduleChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ExternalKey
        {
            get
            {
                return _ExternalKey;
            }
            set
            {
                OnExternalKeyChanging(value);
                ReportPropertyChanging("ExternalKey");
                _ExternalKey = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ExternalKey");
                OnExternalKeyChanged();
            }
        }
        private global::System.String _ExternalKey;
        partial void OnExternalKeyChanging(global::System.String value);
        partial void OnExternalKeyChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GKCardType
        {
            get
            {
                return _GKCardType;
            }
            set
            {
                OnGKCardTypeChanging(value);
                ReportPropertyChanging("GKCardType");
                _GKCardType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GKCardType");
                OnGKCardTypeChanged();
            }
        }
        private global::System.Int32 _GKCardType;
        partial void OnGKCardTypeChanging(global::System.Int32 value);
        partial void OnGKCardTypeChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SKDModel", "FK_Card_AccessTemplate", "AccessTemplate")]
        public AccessTemplate AccessTemplate
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AccessTemplate>("SKDModel.FK_Card_AccessTemplate", "AccessTemplate").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AccessTemplate>("SKDModel.FK_Card_AccessTemplate", "AccessTemplate").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AccessTemplate> AccessTemplateReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AccessTemplate>("SKDModel.FK_Card_AccessTemplate", "AccessTemplate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AccessTemplate>("SKDModel.FK_Card_AccessTemplate", "AccessTemplate", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SKDModel", "FK_Card_Employee", "Employee")]
        public Employee Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("SKDModel.FK_Card_Employee", "Employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("SKDModel.FK_Card_Employee", "Employee").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> EmployeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("SKDModel.FK_Card_Employee", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("SKDModel.FK_Card_Employee", "Employee", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SKDModel", "FK_CardDoor_Card", "CardDoor")]
        public EntityCollection<CardDoor> CardDoors
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CardDoor>("SKDModel.FK_CardDoor_Card", "CardDoor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CardDoor>("SKDModel.FK_CardDoor_Card", "CardDoor", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SKDModel", "FK_PendingCard_Card", "PendingCard")]
        public EntityCollection<PendingCard> PendingCards
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PendingCard>("SKDModel.FK_PendingCard_Card", "PendingCard");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PendingCard>("SKDModel.FK_PendingCard_Card", "PendingCard", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SKDModel", Name="CardDoor")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CardDoor : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта CardDoor.
        /// </summary>
        /// <param name="uID">Исходное значение свойства UID.</param>
        /// <param name="doorUID">Исходное значение свойства DoorUID.</param>
        /// <param name="enterScheduleNo">Исходное значение свойства EnterScheduleNo.</param>
        /// <param name="exitScheduleNo">Исходное значение свойства ExitScheduleNo.</param>
        public static CardDoor CreateCardDoor(global::System.Guid uID, global::System.Guid doorUID, global::System.Int32 enterScheduleNo, global::System.Int32 exitScheduleNo)
        {
            CardDoor cardDoor = new CardDoor();
            cardDoor.UID = uID;
            cardDoor.DoorUID = doorUID;
            cardDoor.EnterScheduleNo = enterScheduleNo;
            cardDoor.ExitScheduleNo = exitScheduleNo;
            return cardDoor;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UID
        {
            get
            {
                return _UID;
            }
            set
            {
                if (_UID != value)
                {
                    OnUIDChanging(value);
                    ReportPropertyChanging("UID");
                    _UID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UID");
                    OnUIDChanged();
                }
            }
        }
        private global::System.Guid _UID;
        partial void OnUIDChanging(global::System.Guid value);
        partial void OnUIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid DoorUID
        {
            get
            {
                return _DoorUID;
            }
            set
            {
                OnDoorUIDChanging(value);
                ReportPropertyChanging("DoorUID");
                _DoorUID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DoorUID");
                OnDoorUIDChanged();
            }
        }
        private global::System.Guid _DoorUID;
        partial void OnDoorUIDChanging(global::System.Guid value);
        partial void OnDoorUIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> CardUID
        {
            get
            {
                return _CardUID;
            }
            set
            {
                OnCardUIDChanging(value);
                ReportPropertyChanging("CardUID");
                _CardUID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CardUID");
                OnCardUIDChanged();
            }
        }
        private Nullable<global::System.Guid> _CardUID;
        partial void OnCardUIDChanging(Nullable<global::System.Guid> value);
        partial void OnCardUIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> AccessTemplateUID
        {
            get
            {
                return _AccessTemplateUID;
            }
            set
            {
                OnAccessTemplateUIDChanging(value);
                ReportPropertyChanging("AccessTemplateUID");
                _AccessTemplateUID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AccessTemplateUID");
                OnAccessTemplateUIDChanged();
            }
        }
        private Nullable<global::System.Guid> _AccessTemplateUID;
        partial void OnAccessTemplateUIDChanging(Nullable<global::System.Guid> value);
        partial void OnAccessTemplateUIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EnterScheduleNo
        {
            get
            {
                return _EnterScheduleNo;
            }
            set
            {
                OnEnterScheduleNoChanging(value);
                ReportPropertyChanging("EnterScheduleNo");
                _EnterScheduleNo = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EnterScheduleNo");
                OnEnterScheduleNoChanged();
            }
        }
        private global::System.Int32 _EnterScheduleNo;
        partial void OnEnterScheduleNoChanging(global::System.Int32 value);
        partial void OnEnterScheduleNoChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ExitScheduleNo
        {
            get
            {
                return _ExitScheduleNo;
            }
            set
            {
                OnExitScheduleNoChanging(value);
                ReportPropertyChanging("ExitScheduleNo");
                _ExitScheduleNo = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExitScheduleNo");
                OnExitScheduleNoChanged();
            }
        }
        private global::System.Int32 _ExitScheduleNo;
        partial void OnExitScheduleNoChanging(global::System.Int32 value);
        partial void OnExitScheduleNoChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SKDModel", "FK_CardDoor_AccessTemplate", "AccessTemplate")]
        public AccessTemplate AccessTemplate
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AccessTemplate>("SKDModel.FK_CardDoor_AccessTemplate", "AccessTemplate").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AccessTemplate>("SKDModel.FK_CardDoor_AccessTemplate", "AccessTemplate").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AccessTemplate> AccessTemplateReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AccessTemplate>("SKDModel.FK_CardDoor_AccessTemplate", "AccessTemplate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AccessTemplate>("SKDModel.FK_CardDoor_AccessTemplate", "AccessTemplate", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SKDModel", "FK_CardDoor_Card", "Card")]
        public Card Card
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Card>("SKDModel.FK_CardDoor_Card", "Card").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Card>("SKDModel.FK_CardDoor_Card", "Card").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Card> CardReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Card>("SKDModel.FK_CardDoor_Card", "Card");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Card>("SKDModel.FK_CardDoor_Card", "Card", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SKDModel", Name="DayInterval")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DayInterval : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта DayInterval.
        /// </summary>
        /// <param name="uID">Исходное значение свойства UID.</param>
        /// <param name="name">Исходное значение свойства Name.</param>
        /// <param name="slideTime">Исходное значение свойства SlideTime.</param>
        /// <param name="isDeleted">Исходное значение свойства IsDeleted.</param>
        /// <param name="removalDate">Исходное значение свойства RemovalDate.</param>
        public static DayInterval CreateDayInterval(global::System.Guid uID, global::System.String name, global::System.Int32 slideTime, global::System.Boolean isDeleted, global::System.DateTime removalDate)
        {
            DayInterval dayInterval = new DayInterval();
            dayInterval.UID = uID;
            dayInterval.Name = name;
            dayInterval.SlideTime = slideTime;
            dayInterval.IsDeleted = isDeleted;
            dayInterval.RemovalDate = removalDate;
            return dayInterval;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UID
        {
            get
            {
                return _UID;
            }
            set
            {
                if (_UID != value)
                {
                    OnUIDChanging(value);
                    ReportPropertyChanging("UID");
                    _UID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UID");
                    OnUIDChanged();
                }
            }
        }
        private global::System.Guid _UID;
        partial void OnUIDChanging(global::System.Guid value);
        partial void OnUIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SlideTime
        {
            get
            {
                return _SlideTime;
            }
            set
            {
                OnSlideTimeChanging(value);
                ReportPropertyChanging("SlideTime");
                _SlideTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SlideTime");
                OnSlideTimeChanged();
            }
        }
        private global::System.Int32 _SlideTime;
        partial void OnSlideTimeChanging(global::System.Int32 value);
        partial void OnSlideTimeChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime RemovalDate
        {
            get
            {
                return _RemovalDate;
            }
            set
            {
                OnRemovalDateChanging(value);
                ReportPropertyChanging("RemovalDate");
                _RemovalDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RemovalDate");
                OnRemovalDateChanged();
            }
        }
        private global::System.DateTime _RemovalDate;
        partial void OnRemovalDateChanging(global::System.DateTime value);
        partial void OnRemovalDateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> OrganisationUID
        {
            get
            {
                return _OrganisationUID;
            }
            set
            {
                OnOrganisationUIDChanging(value);
                ReportPropertyChanging("OrganisationUID");
                _OrganisationUID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OrganisationUID");
                OnOrganisationUIDChanged();
            }
        }
        private Nullable<global::System.Guid> _OrganisationUID;
        partial void OnOrganisationUIDChanging(Nullable<global::System.Guid> value);
        partial void OnOrganisationUIDChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SKDModel", "FK_DayInterval_Organisation", "Organisation")]
        public Organisation Organisation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organisation>("SKDModel.FK_DayInterval_Organisation", "Organisation").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organisation>("SKDModel.FK_DayInterval_Organisation", "Organisation").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Organisation> OrganisationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organisation>("SKDModel.FK_DayInterval_Organisation", "Organisation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Organisation>("SKDModel.FK_DayInterval_Organisation", "Organisation", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SKDModel", "FK_DayIntervalPart_DayInterval1", "DayIntervalPart")]
        public EntityCollection<DayIntervalPart> DayIntervalParts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DayIntervalPart>("SKDModel.FK_DayIntervalPart_DayInterval1", "DayIntervalPart");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DayIntervalPart>("SKDModel.FK_DayIntervalPart_DayInterval1", "DayIntervalPart", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SKDModel", "FK_ScheduleDay_DayInterval", "ScheduleDay")]
        public EntityCollection<ScheduleDay> ScheduleDays
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ScheduleDay>("SKDModel.FK_ScheduleDay_DayInterval", "ScheduleDay");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ScheduleDay>("SKDModel.FK_ScheduleDay_DayInterval", "ScheduleDay", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SKDModel", Name="DayIntervalPart")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DayIntervalPart : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта DayIntervalPart.
        /// </summary>
        /// <param name="beginTime">Исходное значение свойства BeginTime.</param>
        /// <param name="endTime">Исходное значение свойства EndTime.</param>
        /// <param name="uID">Исходное значение свойства UID.</param>
        /// <param name="dayIntervalUID">Исходное значение свойства DayIntervalUID.</param>
        public static DayIntervalPart CreateDayIntervalPart(global::System.Int32 beginTime, global::System.Int32 endTime, global::System.Guid uID, global::System.Guid dayIntervalUID)
        {
            DayIntervalPart dayIntervalPart = new DayIntervalPart();
            dayIntervalPart.BeginTime = beginTime;
            dayIntervalPart.EndTime = endTime;
            dayIntervalPart.UID = uID;
            dayIntervalPart.DayIntervalUID = dayIntervalUID;
            return dayIntervalPart;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BeginTime
        {
            get
            {
                return _BeginTime;
            }
            set
            {
                OnBeginTimeChanging(value);
                ReportPropertyChanging("BeginTime");
                _BeginTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BeginTime");
                OnBeginTimeChanged();
            }
        }
        private global::System.Int32 _BeginTime;
        partial void OnBeginTimeChanging(global::System.Int32 value);
        partial void OnBeginTimeChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EndTime
        {
            get
            {
                return _EndTime;
            }
            set
            {
                OnEndTimeChanging(value);
                ReportPropertyChanging("EndTime");
                _EndTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndTime");
                OnEndTimeChanged();
            }
        }
        private global::System.Int32 _EndTime;
        partial void OnEndTimeChanging(global::System.Int32 value);
        partial void OnEndTimeChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UID
        {
            get
            {
                return _UID;
            }
            set
            {
                if (_UID != value)
                {
                    OnUIDChanging(value);
                    ReportPropertyChanging("UID");
                    _UID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UID");
                    OnUIDChanged();
                }
            }
        }
        private global::System.Guid _UID;
        partial void OnUIDChanging(global::System.Guid value);
        partial void OnUIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid DayIntervalUID
        {
            get
            {
                return _DayIntervalUID;
            }
            set
            {
                OnDayIntervalUIDChanging(value);
                ReportPropertyChanging("DayIntervalUID");
                _DayIntervalUID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DayIntervalUID");
                OnDayIntervalUIDChanged();
            }
        }
        private global::System.Guid _DayIntervalUID;
        partial void OnDayIntervalUIDChanging(global::System.Guid value);
        partial void OnDayIntervalUIDChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SKDModel", "FK_DayIntervalPart_DayInterval1", "DayInterval")]
        public DayInterval DayInterval
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DayInterval>("SKDModel.FK_DayIntervalPart_DayInterval1", "DayInterval").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DayInterval>("SKDModel.FK_DayIntervalPart_DayInterval1", "DayInterval").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DayInterval> DayIntervalReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DayInterval>("SKDModel.FK_DayIntervalPart_DayInterval1", "DayInterval");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DayInterval>("SKDModel.FK_DayIntervalPart_DayInterval1", "DayInterval", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SKDModel", Name="Department")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Department : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Department.
        /// </summary>
        /// <param name="uID">Исходное значение свойства UID.</param>
        /// <param name="isDeleted">Исходное значение свойства IsDeleted.</param>
        /// <param name="removalDate">Исходное значение свойства RemovalDate.</param>
        /// <param name="chiefUID">Исходное значение свойства ChiefUID.</param>
        /// <param name="externalKey">Исходное значение свойства ExternalKey.</param>
        public static Department CreateDepartment(global::System.Guid uID, global::System.Boolean isDeleted, global::System.DateTime removalDate, global::System.Guid chiefUID, global::System.String externalKey)
        {
            Department department = new Department();
            department.UID = uID;
            department.IsDeleted = isDeleted;
            department.RemovalDate = removalDate;
            department.ChiefUID = chiefUID;
            department.ExternalKey = externalKey;
            return department;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UID
        {
            get
            {
                return _UID;
            }
            set
            {
                if (_UID != value)
                {
                    OnUIDChanging(value);
                    ReportPropertyChanging("UID");
                    _UID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UID");
                    OnUIDChanged();
                }
            }
        }
        private global::System.Guid _UID;
        partial void OnUIDChanging(global::System.Guid value);
        partial void OnUIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> PhotoUID
        {
            get
            {
                return _PhotoUID;
            }
            set
            {
                OnPhotoUIDChanging(value);
                ReportPropertyChanging("PhotoUID");
                _PhotoUID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PhotoUID");
                OnPhotoUIDChanged();
            }
        }
        private Nullable<global::System.Guid> _PhotoUID;
        partial void OnPhotoUIDChanging(Nullable<global::System.Guid> value);
        partial void OnPhotoUIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ParentDepartmentUID
        {
            get
            {
                return _ParentDepartmentUID;
            }
            set
            {
                OnParentDepartmentUIDChanging(value);
                ReportPropertyChanging("ParentDepartmentUID");
                _ParentDepartmentUID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParentDepartmentUID");
                OnParentDepartmentUIDChanged();
            }
        }
        private Nullable<global::System.Guid> _ParentDepartmentUID;
        partial void OnParentDepartmentUIDChanging(Nullable<global::System.Guid> value);
        partial void OnParentDepartmentUIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ContactEmployeeUID
        {
            get
            {
                return _ContactEmployeeUID;
            }
            set
            {
                OnContactEmployeeUIDChanging(value);
                ReportPropertyChanging("ContactEmployeeUID");
                _ContactEmployeeUID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ContactEmployeeUID");
                OnContactEmployeeUIDChanged();
            }
        }
        private Nullable<global::System.Guid> _ContactEmployeeUID;
        partial void OnContactEmployeeUIDChanging(Nullable<global::System.Guid> value);
        partial void OnContactEmployeeUIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> AttendantUID
        {
            get
            {
                return _AttendantUID;
            }
            set
            {
                OnAttendantUIDChanging(value);
                ReportPropertyChanging("AttendantUID");
                _AttendantUID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AttendantUID");
                OnAttendantUIDChanged();
            }
        }
        private Nullable<global::System.Guid> _AttendantUID;
        partial void OnAttendantUIDChanging(Nullable<global::System.Guid> value);
        partial void OnAttendantUIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime RemovalDate
        {
            get
            {
                return _RemovalDate;
            }
            set
            {
                OnRemovalDateChanging(value);
                ReportPropertyChanging("RemovalDate");
                _RemovalDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RemovalDate");
                OnRemovalDateChanged();
            }
        }
        private global::System.DateTime _RemovalDate;
        partial void OnRemovalDateChanging(global::System.DateTime value);
        partial void OnRemovalDateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> OrganisationUID
        {
            get
            {
                return _OrganisationUID;
            }
            set
            {
                OnOrganisationUIDChanging(value);
                ReportPropertyChanging("OrganisationUID");
                _OrganisationUID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OrganisationUID");
                OnOrganisationUIDChanged();
            }
        }
        private Nullable<global::System.Guid> _OrganisationUID;
        partial void OnOrganisationUIDChanging(Nullable<global::System.Guid> value);
        partial void OnOrganisationUIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ChiefUID
        {
            get
            {
                return _ChiefUID;
            }
            set
            {
                OnChiefUIDChanging(value);
                ReportPropertyChanging("ChiefUID");
                _ChiefUID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChiefUID");
                OnChiefUIDChanged();
            }
        }
        private global::System.Guid _ChiefUID;
        partial void OnChiefUIDChanging(global::System.Guid value);
        partial void OnChiefUIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ExternalKey
        {
            get
            {
                return _ExternalKey;
            }
            set
            {
                OnExternalKeyChanging(value);
                ReportPropertyChanging("ExternalKey");
                _ExternalKey = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ExternalKey");
                OnExternalKeyChanged();
            }
        }
        private global::System.String _ExternalKey;
        partial void OnExternalKeyChanging(global::System.String value);
        partial void OnExternalKeyChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SKDModel", "FK_Department_Department1", "Department1")]
        public EntityCollection<Department> Department1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Department>("SKDModel.FK_Department_Department1", "Department1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Department>("SKDModel.FK_Department_Department1", "Department1", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SKDModel", "FK_Department_Department1", "Department")]
        public Department Department2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("SKDModel.FK_Department_Department1", "Department").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("SKDModel.FK_Department_Department1", "Department").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Department> Department2Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("SKDModel.FK_Department_Department1", "Department");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Department>("SKDModel.FK_Department_Department1", "Department", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SKDModel", "FK_Department_Employee", "Employee")]
        public Employee Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("SKDModel.FK_Department_Employee", "Employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("SKDModel.FK_Department_Employee", "Employee").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> EmployeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("SKDModel.FK_Department_Employee", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("SKDModel.FK_Department_Employee", "Employee", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SKDModel", "FK_Department_Employee1", "Employee")]
        public Employee Employee1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("SKDModel.FK_Department_Employee1", "Employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("SKDModel.FK_Department_Employee1", "Employee").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> Employee1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("SKDModel.FK_Department_Employee1", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("SKDModel.FK_Department_Employee1", "Employee", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SKDModel", "FK_Department_Employee2", "Employee")]
        public Employee Employee2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("SKDModel.FK_Department_Employee2", "Employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("SKDModel.FK_Department_Employee2", "Employee").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> Employee2Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("SKDModel.FK_Department_Employee2", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("SKDModel.FK_Department_Employee2", "Employee", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SKDModel", "FK_Department_Organisation", "Organisation")]
        public Organisation Organisation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organisation>("SKDModel.FK_Department_Organisation", "Organisation").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organisation>("SKDModel.FK_Department_Organisation", "Organisation").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Organisation> OrganisationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organisation>("SKDModel.FK_Department_Organisation", "Organisation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Organisation>("SKDModel.FK_Department_Organisation", "Organisation", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SKDModel", "FK_Department_Photo", "Photo")]
        public Photo Photo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Photo>("SKDModel.FK_Department_Photo", "Photo").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Photo>("SKDModel.FK_Department_Photo", "Photo").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Photo> PhotoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Photo>("SKDModel.FK_Department_Photo", "Photo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Photo>("SKDModel.FK_Department_Photo", "Photo", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SKDModel", "FK_Employee_Department1", "Employee")]
        public EntityCollection<Employee> Employees
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Employee>("SKDModel.FK_Employee_Department1", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Employee>("SKDModel.FK_Employee_Department1", "Employee", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SKDModel", Name="Employee")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Employee : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Employee.
        /// </summary>
        /// <param name="uID">Исходное значение свойства UID.</param>
        /// <param name="scheduleStartDate">Исходное значение свойства ScheduleStartDate.</param>
        /// <param name="credentialsStartDate">Исходное значение свойства CredentialsStartDate.</param>
        /// <param name="isDeleted">Исходное значение свойства IsDeleted.</param>
        /// <param name="removalDate">Исходное значение свойства RemovalDate.</param>
        /// <param name="birthDate">Исходное значение свойства BirthDate.</param>
        /// <param name="documentGivenDate">Исходное значение свойства DocumentGivenDate.</param>
        /// <param name="documentValidTo">Исходное значение свойства DocumentValidTo.</param>
        /// <param name="gender">Исходное значение свойства Gender.</param>
        /// <param name="documentType">Исходное значение свойства DocumentType.</param>
        /// <param name="lastEmployeeDayUpdate">Исходное значение свойства LastEmployeeDayUpdate.</param>
        /// <param name="externalKey">Исходное значение свойства ExternalKey.</param>
        public static Employee CreateEmployee(global::System.Guid uID, global::System.DateTime scheduleStartDate, global::System.DateTime credentialsStartDate, global::System.Boolean isDeleted, global::System.DateTime removalDate, global::System.DateTime birthDate, global::System.DateTime documentGivenDate, global::System.DateTime documentValidTo, global::System.Int32 gender, global::System.Int32 documentType, global::System.DateTime lastEmployeeDayUpdate, global::System.String externalKey)
        {
            Employee employee = new Employee();
            employee.UID = uID;
            employee.ScheduleStartDate = scheduleStartDate;
            employee.CredentialsStartDate = credentialsStartDate;
            employee.IsDeleted = isDeleted;
            employee.RemovalDate = removalDate;
            employee.BirthDate = birthDate;
            employee.DocumentGivenDate = documentGivenDate;
            employee.DocumentValidTo = documentValidTo;
            employee.Gender = gender;
            employee.DocumentType = documentType;
            employee.LastEmployeeDayUpdate = lastEmployeeDayUpdate;
            employee.ExternalKey = externalKey;
            return employee;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UID
        {
            get
            {
                return _UID;
            }
            set
            {
                if (_UID != value)
                {
                    OnUIDChanging(value);
                    ReportPropertyChanging("UID");
                    _UID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UID");
                    OnUIDChanged();
                }
            }
        }
        private global::System.Guid _UID;
        partial void OnUIDChanging(global::System.Guid value);
        partial void OnUIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SecondName
        {
            get
            {
                return _SecondName;
            }
            set
            {
                OnSecondNameChanging(value);
                ReportPropertyChanging("SecondName");
                _SecondName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SecondName");
                OnSecondNameChanged();
            }
        }
        private global::System.String _SecondName;
        partial void OnSecondNameChanging(global::System.String value);
        partial void OnSecondNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> PhotoUID
        {
            get
            {
                return _PhotoUID;
            }
            set
            {
                OnPhotoUIDChanging(value);
                ReportPropertyChanging("PhotoUID");
                _PhotoUID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PhotoUID");
                OnPhotoUIDChanged();
            }
        }
        private Nullable<global::System.Guid> _PhotoUID;
        partial void OnPhotoUIDChanging(Nullable<global::System.Guid> value);
        partial void OnPhotoUIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> PositionUID
        {
            get
            {
                return _PositionUID;
            }
            set
            {
                OnPositionUIDChanging(value);
                ReportPropertyChanging("PositionUID");
                _PositionUID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PositionUID");
                OnPositionUIDChanged();
            }
        }
        private Nullable<global::System.Guid> _PositionUID;
        partial void OnPositionUIDChanging(Nullable<global::System.Guid> value);
        partial void OnPositionUIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> DepartmentUID
        {
            get
            {
                return _DepartmentUID;
            }
            set
            {
                OnDepartmentUIDChanging(value);
                ReportPropertyChanging("DepartmentUID");
                _DepartmentUID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DepartmentUID");
                OnDepartmentUIDChanged();
            }
        }
        private Nullable<global::System.Guid> _DepartmentUID;
        partial void OnDepartmentUIDChanging(Nullable<global::System.Guid> value);
        partial void OnDepartmentUIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ScheduleUID
        {
            get
            {
                return _ScheduleUID;
            }
            set
            {
                OnScheduleUIDChanging(value);
                ReportPropertyChanging("ScheduleUID");
                _ScheduleUID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ScheduleUID");
                OnScheduleUIDChanged();
            }
        }
        private Nullable<global::System.Guid> _ScheduleUID;
        partial void OnScheduleUIDChanging(Nullable<global::System.Guid> value);
        partial void OnScheduleUIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ScheduleStartDate
        {
            get
            {
                return _ScheduleStartDate;
            }
            set
            {
                OnScheduleStartDateChanging(value);
                ReportPropertyChanging("ScheduleStartDate");
                _ScheduleStartDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ScheduleStartDate");
                OnScheduleStartDateChanged();
            }
        }
        private global::System.DateTime _ScheduleStartDate;
        partial void OnScheduleStartDateChanging(global::System.DateTime value);
        partial void OnScheduleStartDateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private Nullable<global::System.Int32> _Type;
        partial void OnTypeChanging(Nullable<global::System.Int32> value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TabelNo
        {
            get
            {
                return _TabelNo;
            }
            set
            {
                OnTabelNoChanging(value);
                ReportPropertyChanging("TabelNo");
                _TabelNo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TabelNo");
                OnTabelNoChanged();
            }
        }
        private global::System.String _TabelNo;
        partial void OnTabelNoChanging(global::System.String value);
        partial void OnTabelNoChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CredentialsStartDate
        {
            get
            {
                return _CredentialsStartDate;
            }
            set
            {
                OnCredentialsStartDateChanging(value);
                ReportPropertyChanging("CredentialsStartDate");
                _CredentialsStartDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CredentialsStartDate");
                OnCredentialsStartDateChanged();
            }
        }
        private global::System.DateTime _CredentialsStartDate;
        partial void OnCredentialsStartDateChanging(global::System.DateTime value);
        partial void OnCredentialsStartDateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> EscortUID
        {
            get
            {
                return _EscortUID;
            }
            set
            {
                OnEscortUIDChanging(value);
                ReportPropertyChanging("EscortUID");
                _EscortUID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EscortUID");
                OnEscortUIDChanged();
            }
        }
        private Nullable<global::System.Guid> _EscortUID;
        partial void OnEscortUIDChanging(Nullable<global::System.Guid> value);
        partial void OnEscortUIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime RemovalDate
        {
            get
            {
                return _RemovalDate;
            }
            set
            {
                OnRemovalDateChanging(value);
                ReportPropertyChanging("RemovalDate");
                _RemovalDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RemovalDate");
                OnRemovalDateChanged();
            }
        }
        private global::System.DateTime _RemovalDate;
        partial void OnRemovalDateChanging(global::System.DateTime value);
        partial void OnRemovalDateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> OrganisationUID
        {
            get
            {
                return _OrganisationUID;
            }
            set
            {
                OnOrganisationUIDChanging(value);
                ReportPropertyChanging("OrganisationUID");
                _OrganisationUID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OrganisationUID");
                OnOrganisationUIDChanged();
            }
        }
        private Nullable<global::System.Guid> _OrganisationUID;
        partial void OnOrganisationUIDChanging(Nullable<global::System.Guid> value);
        partial void OnOrganisationUIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DocumentNumber
        {
            get
            {
                return _DocumentNumber;
            }
            set
            {
                OnDocumentNumberChanging(value);
                ReportPropertyChanging("DocumentNumber");
                _DocumentNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DocumentNumber");
                OnDocumentNumberChanged();
            }
        }
        private global::System.String _DocumentNumber;
        partial void OnDocumentNumberChanging(global::System.String value);
        partial void OnDocumentNumberChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime BirthDate
        {
            get
            {
                return _BirthDate;
            }
            set
            {
                OnBirthDateChanging(value);
                ReportPropertyChanging("BirthDate");
                _BirthDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BirthDate");
                OnBirthDateChanged();
            }
        }
        private global::System.DateTime _BirthDate;
        partial void OnBirthDateChanging(global::System.DateTime value);
        partial void OnBirthDateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BirthPlace
        {
            get
            {
                return _BirthPlace;
            }
            set
            {
                OnBirthPlaceChanging(value);
                ReportPropertyChanging("BirthPlace");
                _BirthPlace = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BirthPlace");
                OnBirthPlaceChanged();
            }
        }
        private global::System.String _BirthPlace;
        partial void OnBirthPlaceChanging(global::System.String value);
        partial void OnBirthPlaceChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DocumentGivenDate
        {
            get
            {
                return _DocumentGivenDate;
            }
            set
            {
                OnDocumentGivenDateChanging(value);
                ReportPropertyChanging("DocumentGivenDate");
                _DocumentGivenDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DocumentGivenDate");
                OnDocumentGivenDateChanged();
            }
        }
        private global::System.DateTime _DocumentGivenDate;
        partial void OnDocumentGivenDateChanging(global::System.DateTime value);
        partial void OnDocumentGivenDateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DocumentGivenBy
        {
            get
            {
                return _DocumentGivenBy;
            }
            set
            {
                OnDocumentGivenByChanging(value);
                ReportPropertyChanging("DocumentGivenBy");
                _DocumentGivenBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DocumentGivenBy");
                OnDocumentGivenByChanged();
            }
        }
        private global::System.String _DocumentGivenBy;
        partial void OnDocumentGivenByChanging(global::System.String value);
        partial void OnDocumentGivenByChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DocumentValidTo
        {
            get
            {
                return _DocumentValidTo;
            }
            set
            {
                OnDocumentValidToChanging(value);
                ReportPropertyChanging("DocumentValidTo");
                _DocumentValidTo = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DocumentValidTo");
                OnDocumentValidToChanged();
            }
        }
        private global::System.DateTime _DocumentValidTo;
        partial void OnDocumentValidToChanging(global::System.DateTime value);
        partial void OnDocumentValidToChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Gender
        {
            get
            {
                return _Gender;
            }
            set
            {
                OnGenderChanging(value);
                ReportPropertyChanging("Gender");
                _Gender = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Gender");
                OnGenderChanged();
            }
        }
        private global::System.Int32 _Gender;
        partial void OnGenderChanging(global::System.Int32 value);
        partial void OnGenderChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DocumentDepartmentCode
        {
            get
            {
                return _DocumentDepartmentCode;
            }
            set
            {
                OnDocumentDepartmentCodeChanging(value);
                ReportPropertyChanging("DocumentDepartmentCode");
                _DocumentDepartmentCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DocumentDepartmentCode");
                OnDocumentDepartmentCodeChanged();
            }
        }
        private global::System.String _DocumentDepartmentCode;
        partial void OnDocumentDepartmentCodeChanging(global::System.String value);
        partial void OnDocumentDepartmentCodeChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Citizenship
        {
            get
            {
                return _Citizenship;
            }
            set
            {
                OnCitizenshipChanging(value);
                ReportPropertyChanging("Citizenship");
                _Citizenship = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Citizenship");
                OnCitizenshipChanged();
            }
        }
        private global::System.String _Citizenship;
        partial void OnCitizenshipChanging(global::System.String value);
        partial void OnCitizenshipChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DocumentType
        {
            get
            {
                return _DocumentType;
            }
            set
            {
                OnDocumentTypeChanging(value);
                ReportPropertyChanging("DocumentType");
                _DocumentType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DocumentType");
                OnDocumentTypeChanged();
            }
        }
        private global::System.Int32 _DocumentType;
        partial void OnDocumentTypeChanging(global::System.Int32 value);
        partial void OnDocumentTypeChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastEmployeeDayUpdate
        {
            get
            {
                return _LastEmployeeDayUpdate;
            }
            set
            {
                OnLastEmployeeDayUpdateChanging(value);
                ReportPropertyChanging("LastEmployeeDayUpdate");
                _LastEmployeeDayUpdate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastEmployeeDayUpdate");
                OnLastEmployeeDayUpdateChanged();
            }
        }
        private global::System.DateTime _LastEmployeeDayUpdate;
        partial void OnLastEmployeeDayUpdateChanging(global::System.DateTime value);
        partial void OnLastEmployeeDayUpdateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ExternalKey
        {
            get
            {
                return _ExternalKey;
            }
            set
            {
                OnExternalKeyChanging(value);
                ReportPropertyChanging("ExternalKey");
                _ExternalKey = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ExternalKey");
                OnExternalKeyChanged();
            }
        }
        private global::System.String _ExternalKey;
        partial void OnExternalKeyChanging(global::System.String value);
        partial void OnExternalKeyChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SKDModel", "FK_AdditionalColumn_Employee", "AdditionalColumn")]
        public EntityCollection<AdditionalColumn> AdditionalColumns
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AdditionalColumn>("SKDModel.FK_AdditionalColumn_Employee", "AdditionalColumn");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AdditionalColumn>("SKDModel.FK_AdditionalColumn_Employee", "AdditionalColumn", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SKDModel", "FK_Card_Employee", "Card")]
        public EntityCollection<Card> Cards
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Card>("SKDModel.FK_Card_Employee", "Card");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Card>("SKDModel.FK_Card_Employee", "Card", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SKDModel", "FK_Department_Employee", "Department")]
        public EntityCollection<Department> Departments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Department>("SKDModel.FK_Department_Employee", "Department");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Department>("SKDModel.FK_Department_Employee", "Department", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SKDModel", "FK_Department_Employee1", "Department")]
        public EntityCollection<Department> Departments1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Department>("SKDModel.FK_Department_Employee1", "Department");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Department>("SKDModel.FK_Department_Employee1", "Department", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SKDModel", "FK_Department_Employee2", "Department")]
        public EntityCollection<Department> Departments2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Department>("SKDModel.FK_Department_Employee2", "Department");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Department>("SKDModel.FK_Department_Employee2", "Department", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SKDModel", "FK_Employee_Department1", "Department")]
        public Department Department
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("SKDModel.FK_Employee_Department1", "Department").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("SKDModel.FK_Employee_Department1", "Department").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Department> DepartmentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("SKDModel.FK_Employee_Department1", "Department");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Department>("SKDModel.FK_Employee_Department1", "Department", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SKDModel", "FK_Employee_Employee", "Employee1")]
        public EntityCollection<Employee> Employee1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Employee>("SKDModel.FK_Employee_Employee", "Employee1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Employee>("SKDModel.FK_Employee_Employee", "Employee1", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SKDModel", "FK_Employee_Employee", "Employee")]
        public Employee Employee2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("SKDModel.FK_Employee_Employee", "Employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("SKDModel.FK_Employee_Employee", "Employee").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> Employee2Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("SKDModel.FK_Employee_Employee", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("SKDModel.FK_Employee_Employee", "Employee", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SKDModel", "FK_Employee_Organisation", "Organisation")]
        public Organisation Organisation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organisation>("SKDModel.FK_Employee_Organisation", "Organisation").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organisation>("SKDModel.FK_Employee_Organisation", "Organisation").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Organisation> OrganisationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organisation>("SKDModel.FK_Employee_Organisation", "Organisation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Organisation>("SKDModel.FK_Employee_Organisation", "Organisation", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SKDModel", "FK_Employee_Photo", "Photo")]
        public Photo Photo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Photo>("SKDModel.FK_Employee_Photo", "Photo").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Photo>("SKDModel.FK_Employee_Photo", "Photo").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Photo> PhotoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Photo>("SKDModel.FK_Employee_Photo", "Photo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Photo>("SKDModel.FK_Employee_Photo", "Photo", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SKDModel", "FK_Employee_Position", "Position")]
        public Position Position
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Position>("SKDModel.FK_Employee_Position", "Position").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Position>("SKDModel.FK_Employee_Position", "Position").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Position> PositionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Position>("SKDModel.FK_Employee_Position", "Position");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Position>("SKDModel.FK_Employee_Position", "Position", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SKDModel", "FK_Employee_Schedule", "Schedule")]
        public Schedule Schedule
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Schedule>("SKDModel.FK_Employee_Schedule", "Schedule").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Schedule>("SKDModel.FK_Employee_Schedule", "Schedule").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Schedule> ScheduleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Schedule>("SKDModel.FK_Employee_Schedule", "Schedule");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Schedule>("SKDModel.FK_Employee_Schedule", "Schedule", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SKDModel", "FK_Organisation_Employee", "Organisation")]
        public EntityCollection<Organisation> Organisations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Organisation>("SKDModel.FK_Organisation_Employee", "Organisation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Organisation>("SKDModel.FK_Organisation_Employee", "Organisation", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SKDModel", "FK_Organisation_Employee3", "Organisation")]
        public EntityCollection<Organisation> Organisations1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Organisation>("SKDModel.FK_Organisation_Employee3", "Organisation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Organisation>("SKDModel.FK_Organisation_Employee3", "Organisation", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SKDModel", "FK_TimeTrackException_Employee", "TimeTrackException")]
        public EntityCollection<TimeTrackException> TimeTrackExceptions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TimeTrackException>("SKDModel.FK_TimeTrackException_Employee", "TimeTrackException");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TimeTrackException>("SKDModel.FK_TimeTrackException_Employee", "TimeTrackException", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SKDModel", Name="GKCard")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GKCard : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта GKCard.
        /// </summary>
        /// <param name="uID">Исходное значение свойства UID.</param>
        /// <param name="iPAddress">Исходное значение свойства IPAddress.</param>
        /// <param name="gKNo">Исходное значение свойства GKNo.</param>
        /// <param name="cardNo">Исходное значение свойства CardNo.</param>
        /// <param name="fIO">Исходное значение свойства FIO.</param>
        /// <param name="isActive">Исходное значение свойства IsActive.</param>
        /// <param name="userType">Исходное значение свойства UserType.</param>
        public static GKCard CreateGKCard(global::System.Guid uID, global::System.String iPAddress, global::System.Int32 gKNo, global::System.Int32 cardNo, global::System.String fIO, global::System.Boolean isActive, global::System.Byte userType)
        {
            GKCard gKCard = new GKCard();
            gKCard.UID = uID;
            gKCard.IPAddress = iPAddress;
            gKCard.GKNo = gKNo;
            gKCard.CardNo = cardNo;
            gKCard.FIO = fIO;
            gKCard.IsActive = isActive;
            gKCard.UserType = userType;
            return gKCard;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UID
        {
            get
            {
                return _UID;
            }
            set
            {
                if (_UID != value)
                {
                    OnUIDChanging(value);
                    ReportPropertyChanging("UID");
                    _UID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UID");
                    OnUIDChanged();
                }
            }
        }
        private global::System.Guid _UID;
        partial void OnUIDChanging(global::System.Guid value);
        partial void OnUIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String IPAddress
        {
            get
            {
                return _IPAddress;
            }
            set
            {
                OnIPAddressChanging(value);
                ReportPropertyChanging("IPAddress");
                _IPAddress = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("IPAddress");
                OnIPAddressChanged();
            }
        }
        private global::System.String _IPAddress;
        partial void OnIPAddressChanging(global::System.String value);
        partial void OnIPAddressChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GKNo
        {
            get
            {
                return _GKNo;
            }
            set
            {
                OnGKNoChanging(value);
                ReportPropertyChanging("GKNo");
                _GKNo = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GKNo");
                OnGKNoChanged();
            }
        }
        private global::System.Int32 _GKNo;
        partial void OnGKNoChanging(global::System.Int32 value);
        partial void OnGKNoChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CardNo
        {
            get
            {
                return _CardNo;
            }
            set
            {
                OnCardNoChanging(value);
                ReportPropertyChanging("CardNo");
                _CardNo = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CardNo");
                OnCardNoChanged();
            }
        }
        private global::System.Int32 _CardNo;
        partial void OnCardNoChanging(global::System.Int32 value);
        partial void OnCardNoChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FIO
        {
            get
            {
                return _FIO;
            }
            set
            {
                OnFIOChanging(value);
                ReportPropertyChanging("FIO");
                _FIO = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FIO");
                OnFIOChanged();
            }
        }
        private global::System.String _FIO;
        partial void OnFIOChanging(global::System.String value);
        partial void OnFIOChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte UserType
        {
            get
            {
                return _UserType;
            }
            set
            {
                OnUserTypeChanging(value);
                ReportPropertyChanging("UserType");
                _UserType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserType");
                OnUserTypeChanged();
            }
        }
        private global::System.Byte _UserType;
        partial void OnUserTypeChanging(global::System.Byte value);
        partial void OnUserTypeChanged();

        #endregion
    
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SKDModel", Name="GKDaySchedule")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GKDaySchedule : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта GKDaySchedule.
        /// </summary>
        /// <param name="uID">Исходное значение свойства UID.</param>
        /// <param name="no">Исходное значение свойства No.</param>
        public static GKDaySchedule CreateGKDaySchedule(global::System.Guid uID, global::System.Int32 no)
        {
            GKDaySchedule gKDaySchedule = new GKDaySchedule();
            gKDaySchedule.UID = uID;
            gKDaySchedule.No = no;
            return gKDaySchedule;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UID
        {
            get
            {
                return _UID;
            }
            set
            {
                if (_UID != value)
                {
                    OnUIDChanging(value);
                    ReportPropertyChanging("UID");
                    _UID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UID");
                    OnUIDChanged();
                }
            }
        }
        private global::System.Guid _UID;
        partial void OnUIDChanging(global::System.Guid value);
        partial void OnUIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 No
        {
            get
            {
                return _No;
            }
            set
            {
                OnNoChanging(value);
                ReportPropertyChanging("No");
                _No = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("No");
                OnNoChanged();
            }
        }
        private global::System.Int32 _No;
        partial void OnNoChanging(global::System.Int32 value);
        partial void OnNoChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SKDModel", "FK_GKDaySchedulePart_GKDaySchedule", "GKDaySchedulePart")]
        public EntityCollection<GKDaySchedulePart> GKDayScheduleParts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GKDaySchedulePart>("SKDModel.FK_GKDaySchedulePart_GKDaySchedule", "GKDaySchedulePart");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GKDaySchedulePart>("SKDModel.FK_GKDaySchedulePart_GKDaySchedule", "GKDaySchedulePart", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SKDModel", "FK_ScheduleGKSchedule_GKDaySchedule", "ScheduleGKDaySchedule")]
        public EntityCollection<ScheduleGKDaySchedule> ScheduleGKDaySchedules
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ScheduleGKDaySchedule>("SKDModel.FK_ScheduleGKSchedule_GKDaySchedule", "ScheduleGKDaySchedule");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ScheduleGKDaySchedule>("SKDModel.FK_ScheduleGKSchedule_GKDaySchedule", "ScheduleGKDaySchedule", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SKDModel", Name="GKDaySchedulePart")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GKDaySchedulePart : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта GKDaySchedulePart.
        /// </summary>
        /// <param name="uID">Исходное значение свойства UID.</param>
        /// <param name="no">Исходное значение свойства No.</param>
        /// <param name="startMilliseconds">Исходное значение свойства StartMilliseconds.</param>
        /// <param name="endMilliseconds">Исходное значение свойства EndMilliseconds.</param>
        /// <param name="dayScheduleUID">Исходное значение свойства DayScheduleUID.</param>
        public static GKDaySchedulePart CreateGKDaySchedulePart(global::System.Guid uID, global::System.Int32 no, global::System.Double startMilliseconds, global::System.Double endMilliseconds, global::System.Guid dayScheduleUID)
        {
            GKDaySchedulePart gKDaySchedulePart = new GKDaySchedulePart();
            gKDaySchedulePart.UID = uID;
            gKDaySchedulePart.No = no;
            gKDaySchedulePart.StartMilliseconds = startMilliseconds;
            gKDaySchedulePart.EndMilliseconds = endMilliseconds;
            gKDaySchedulePart.DayScheduleUID = dayScheduleUID;
            return gKDaySchedulePart;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UID
        {
            get
            {
                return _UID;
            }
            set
            {
                if (_UID != value)
                {
                    OnUIDChanging(value);
                    ReportPropertyChanging("UID");
                    _UID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UID");
                    OnUIDChanged();
                }
            }
        }
        private global::System.Guid _UID;
        partial void OnUIDChanging(global::System.Guid value);
        partial void OnUIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 No
        {
            get
            {
                return _No;
            }
            set
            {
                OnNoChanging(value);
                ReportPropertyChanging("No");
                _No = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("No");
                OnNoChanged();
            }
        }
        private global::System.Int32 _No;
        partial void OnNoChanging(global::System.Int32 value);
        partial void OnNoChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double StartMilliseconds
        {
            get
            {
                return _StartMilliseconds;
            }
            set
            {
                OnStartMillisecondsChanging(value);
                ReportPropertyChanging("StartMilliseconds");
                _StartMilliseconds = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartMilliseconds");
                OnStartMillisecondsChanged();
            }
        }
        private global::System.Double _StartMilliseconds;
        partial void OnStartMillisecondsChanging(global::System.Double value);
        partial void OnStartMillisecondsChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double EndMilliseconds
        {
            get
            {
                return _EndMilliseconds;
            }
            set
            {
                OnEndMillisecondsChanging(value);
                ReportPropertyChanging("EndMilliseconds");
                _EndMilliseconds = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndMilliseconds");
                OnEndMillisecondsChanged();
            }
        }
        private global::System.Double _EndMilliseconds;
        partial void OnEndMillisecondsChanging(global::System.Double value);
        partial void OnEndMillisecondsChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid DayScheduleUID
        {
            get
            {
                return _DayScheduleUID;
            }
            set
            {
                OnDayScheduleUIDChanging(value);
                ReportPropertyChanging("DayScheduleUID");
                _DayScheduleUID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DayScheduleUID");
                OnDayScheduleUIDChanged();
            }
        }
        private global::System.Guid _DayScheduleUID;
        partial void OnDayScheduleUIDChanging(global::System.Guid value);
        partial void OnDayScheduleUIDChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SKDModel", "FK_GKDaySchedulePart_GKDaySchedule", "GKDaySchedule")]
        public GKDaySchedule GKDaySchedule
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GKDaySchedule>("SKDModel.FK_GKDaySchedulePart_GKDaySchedule", "GKDaySchedule").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GKDaySchedule>("SKDModel.FK_GKDaySchedulePart_GKDaySchedule", "GKDaySchedule").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<GKDaySchedule> GKDayScheduleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GKDaySchedule>("SKDModel.FK_GKDaySchedulePart_GKDaySchedule", "GKDaySchedule");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<GKDaySchedule>("SKDModel.FK_GKDaySchedulePart_GKDaySchedule", "GKDaySchedule", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SKDModel", Name="GKMetadata")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GKMetadata : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта GKMetadata.
        /// </summary>
        /// <param name="uID">Исходное значение свойства UID.</param>
        /// <param name="iPAddress">Исходное значение свойства IPAddress.</param>
        /// <param name="serialNo">Исходное значение свойства SerialNo.</param>
        /// <param name="lastJournalNo">Исходное значение свойства LastJournalNo.</param>
        public static GKMetadata CreateGKMetadata(global::System.Guid uID, global::System.String iPAddress, global::System.String serialNo, global::System.Int32 lastJournalNo)
        {
            GKMetadata gKMetadata = new GKMetadata();
            gKMetadata.UID = uID;
            gKMetadata.IPAddress = iPAddress;
            gKMetadata.SerialNo = serialNo;
            gKMetadata.LastJournalNo = lastJournalNo;
            return gKMetadata;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UID
        {
            get
            {
                return _UID;
            }
            set
            {
                if (_UID != value)
                {
                    OnUIDChanging(value);
                    ReportPropertyChanging("UID");
                    _UID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UID");
                    OnUIDChanged();
                }
            }
        }
        private global::System.Guid _UID;
        partial void OnUIDChanging(global::System.Guid value);
        partial void OnUIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String IPAddress
        {
            get
            {
                return _IPAddress;
            }
            set
            {
                OnIPAddressChanging(value);
                ReportPropertyChanging("IPAddress");
                _IPAddress = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("IPAddress");
                OnIPAddressChanged();
            }
        }
        private global::System.String _IPAddress;
        partial void OnIPAddressChanging(global::System.String value);
        partial void OnIPAddressChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SerialNo
        {
            get
            {
                return _SerialNo;
            }
            set
            {
                OnSerialNoChanging(value);
                ReportPropertyChanging("SerialNo");
                _SerialNo = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SerialNo");
                OnSerialNoChanged();
            }
        }
        private global::System.String _SerialNo;
        partial void OnSerialNoChanging(global::System.String value);
        partial void OnSerialNoChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LastJournalNo
        {
            get
            {
                return _LastJournalNo;
            }
            set
            {
                OnLastJournalNoChanging(value);
                ReportPropertyChanging("LastJournalNo");
                _LastJournalNo = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastJournalNo");
                OnLastJournalNoChanged();
            }
        }
        private global::System.Int32 _LastJournalNo;
        partial void OnLastJournalNoChanging(global::System.Int32 value);
        partial void OnLastJournalNoChanged();

        #endregion
    
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SKDModel", Name="GKSchedule")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GKSchedule : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта GKSchedule.
        /// </summary>
        /// <param name="uID">Исходное значение свойства UID.</param>
        /// <param name="no">Исходное значение свойства No.</param>
        /// <param name="type">Исходное значение свойства Type.</param>
        /// <param name="periodType">Исходное значение свойства PeriodType.</param>
        /// <param name="startDateTime">Исходное значение свойства StartDateTime.</param>
        /// <param name="hoursPeriod">Исходное значение свойства HoursPeriod.</param>
        /// <param name="holidayScheduleNo">Исходное значение свойства HolidayScheduleNo.</param>
        /// <param name="workingHolidayScheduleNo">Исходное значение свойства WorkingHolidayScheduleNo.</param>
        /// <param name="year">Исходное значение свойства Year.</param>
        public static GKSchedule CreateGKSchedule(global::System.Guid uID, global::System.Int32 no, global::System.Int32 type, global::System.Int32 periodType, global::System.DateTime startDateTime, global::System.Int32 hoursPeriod, global::System.Int32 holidayScheduleNo, global::System.Int32 workingHolidayScheduleNo, global::System.Int32 year)
        {
            GKSchedule gKSchedule = new GKSchedule();
            gKSchedule.UID = uID;
            gKSchedule.No = no;
            gKSchedule.Type = type;
            gKSchedule.PeriodType = periodType;
            gKSchedule.StartDateTime = startDateTime;
            gKSchedule.HoursPeriod = hoursPeriod;
            gKSchedule.HolidayScheduleNo = holidayScheduleNo;
            gKSchedule.WorkingHolidayScheduleNo = workingHolidayScheduleNo;
            gKSchedule.Year = year;
            return gKSchedule;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UID
        {
            get
            {
                return _UID;
            }
            set
            {
                if (_UID != value)
                {
                    OnUIDChanging(value);
                    ReportPropertyChanging("UID");
                    _UID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UID");
                    OnUIDChanged();
                }
            }
        }
        private global::System.Guid _UID;
        partial void OnUIDChanging(global::System.Guid value);
        partial void OnUIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 No
        {
            get
            {
                return _No;
            }
            set
            {
                OnNoChanging(value);
                ReportPropertyChanging("No");
                _No = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("No");
                OnNoChanged();
            }
        }
        private global::System.Int32 _No;
        partial void OnNoChanging(global::System.Int32 value);
        partial void OnNoChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.Int32 _Type;
        partial void OnTypeChanging(global::System.Int32 value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PeriodType
        {
            get
            {
                return _PeriodType;
            }
            set
            {
                OnPeriodTypeChanging(value);
                ReportPropertyChanging("PeriodType");
                _PeriodType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PeriodType");
                OnPeriodTypeChanged();
            }
        }
        private global::System.Int32 _PeriodType;
        partial void OnPeriodTypeChanging(global::System.Int32 value);
        partial void OnPeriodTypeChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartDateTime
        {
            get
            {
                return _StartDateTime;
            }
            set
            {
                OnStartDateTimeChanging(value);
                ReportPropertyChanging("StartDateTime");
                _StartDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartDateTime");
                OnStartDateTimeChanged();
            }
        }
        private global::System.DateTime _StartDateTime;
        partial void OnStartDateTimeChanging(global::System.DateTime value);
        partial void OnStartDateTimeChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 HoursPeriod
        {
            get
            {
                return _HoursPeriod;
            }
            set
            {
                OnHoursPeriodChanging(value);
                ReportPropertyChanging("HoursPeriod");
                _HoursPeriod = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HoursPeriod");
                OnHoursPeriodChanged();
            }
        }
        private global::System.Int32 _HoursPeriod;
        partial void OnHoursPeriodChanging(global::System.Int32 value);
        partial void OnHoursPeriodChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 HolidayScheduleNo
        {
            get
            {
                return _HolidayScheduleNo;
            }
            set
            {
                OnHolidayScheduleNoChanging(value);
                ReportPropertyChanging("HolidayScheduleNo");
                _HolidayScheduleNo = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HolidayScheduleNo");
                OnHolidayScheduleNoChanged();
            }
        }
        private global::System.Int32 _HolidayScheduleNo;
        partial void OnHolidayScheduleNoChanging(global::System.Int32 value);
        partial void OnHolidayScheduleNoChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 WorkingHolidayScheduleNo
        {
            get
            {
                return _WorkingHolidayScheduleNo;
            }
            set
            {
                OnWorkingHolidayScheduleNoChanging(value);
                ReportPropertyChanging("WorkingHolidayScheduleNo");
                _WorkingHolidayScheduleNo = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WorkingHolidayScheduleNo");
                OnWorkingHolidayScheduleNoChanged();
            }
        }
        private global::System.Int32 _WorkingHolidayScheduleNo;
        partial void OnWorkingHolidayScheduleNoChanging(global::System.Int32 value);
        partial void OnWorkingHolidayScheduleNoChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Year
        {
            get
            {
                return _Year;
            }
            set
            {
                OnYearChanging(value);
                ReportPropertyChanging("Year");
                _Year = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Year");
                OnYearChanged();
            }
        }
        private global::System.Int32 _Year;
        partial void OnYearChanging(global::System.Int32 value);
        partial void OnYearChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SKDModel", "FK_GKScheduleDay_GKSchedule", "GKScheduleDay")]
        public EntityCollection<GKScheduleDay> GKScheduleDays
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GKScheduleDay>("SKDModel.FK_GKScheduleDay_GKSchedule", "GKScheduleDay");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GKScheduleDay>("SKDModel.FK_GKScheduleDay_GKSchedule", "GKScheduleDay", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SKDModel", "FK_ScheduleGKSchedule_GKSchedule", "ScheduleGKDaySchedule")]
        public EntityCollection<ScheduleGKDaySchedule> ScheduleGKDaySchedules
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ScheduleGKDaySchedule>("SKDModel.FK_ScheduleGKSchedule_GKSchedule", "ScheduleGKDaySchedule");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ScheduleGKDaySchedule>("SKDModel.FK_ScheduleGKSchedule_GKSchedule", "ScheduleGKDaySchedule", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SKDModel", Name="GKScheduleDay")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GKScheduleDay : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта GKScheduleDay.
        /// </summary>
        /// <param name="uID">Исходное значение свойства UID.</param>
        /// <param name="scheduleUID">Исходное значение свойства ScheduleUID.</param>
        /// <param name="dateTime">Исходное значение свойства DateTime.</param>
        public static GKScheduleDay CreateGKScheduleDay(global::System.Guid uID, global::System.Guid scheduleUID, global::System.DateTime dateTime)
        {
            GKScheduleDay gKScheduleDay = new GKScheduleDay();
            gKScheduleDay.UID = uID;
            gKScheduleDay.ScheduleUID = scheduleUID;
            gKScheduleDay.DateTime = dateTime;
            return gKScheduleDay;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UID
        {
            get
            {
                return _UID;
            }
            set
            {
                if (_UID != value)
                {
                    OnUIDChanging(value);
                    ReportPropertyChanging("UID");
                    _UID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UID");
                    OnUIDChanged();
                }
            }
        }
        private global::System.Guid _UID;
        partial void OnUIDChanging(global::System.Guid value);
        partial void OnUIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ScheduleUID
        {
            get
            {
                return _ScheduleUID;
            }
            set
            {
                OnScheduleUIDChanging(value);
                ReportPropertyChanging("ScheduleUID");
                _ScheduleUID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ScheduleUID");
                OnScheduleUIDChanged();
            }
        }
        private global::System.Guid _ScheduleUID;
        partial void OnScheduleUIDChanging(global::System.Guid value);
        partial void OnScheduleUIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateTime
        {
            get
            {
                return _DateTime;
            }
            set
            {
                OnDateTimeChanging(value);
                ReportPropertyChanging("DateTime");
                _DateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateTime");
                OnDateTimeChanged();
            }
        }
        private global::System.DateTime _DateTime;
        partial void OnDateTimeChanging(global::System.DateTime value);
        partial void OnDateTimeChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SKDModel", "FK_GKScheduleDay_GKSchedule", "GKSchedule")]
        public GKSchedule GKSchedule
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GKSchedule>("SKDModel.FK_GKScheduleDay_GKSchedule", "GKSchedule").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GKSchedule>("SKDModel.FK_GKScheduleDay_GKSchedule", "GKSchedule").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<GKSchedule> GKScheduleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GKSchedule>("SKDModel.FK_GKScheduleDay_GKSchedule", "GKSchedule");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<GKSchedule>("SKDModel.FK_GKScheduleDay_GKSchedule", "GKSchedule", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SKDModel", Name="Holiday")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Holiday : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Holiday.
        /// </summary>
        /// <param name="uID">Исходное значение свойства UID.</param>
        /// <param name="name">Исходное значение свойства Name.</param>
        /// <param name="type">Исходное значение свойства Type.</param>
        /// <param name="date">Исходное значение свойства Date.</param>
        /// <param name="reduction">Исходное значение свойства Reduction.</param>
        /// <param name="isDeleted">Исходное значение свойства IsDeleted.</param>
        /// <param name="removalDate">Исходное значение свойства RemovalDate.</param>
        public static Holiday CreateHoliday(global::System.Guid uID, global::System.String name, global::System.Int32 type, global::System.DateTime date, global::System.Int32 reduction, global::System.Boolean isDeleted, global::System.DateTime removalDate)
        {
            Holiday holiday = new Holiday();
            holiday.UID = uID;
            holiday.Name = name;
            holiday.Type = type;
            holiday.Date = date;
            holiday.Reduction = reduction;
            holiday.IsDeleted = isDeleted;
            holiday.RemovalDate = removalDate;
            return holiday;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UID
        {
            get
            {
                return _UID;
            }
            set
            {
                if (_UID != value)
                {
                    OnUIDChanging(value);
                    ReportPropertyChanging("UID");
                    _UID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UID");
                    OnUIDChanged();
                }
            }
        }
        private global::System.Guid _UID;
        partial void OnUIDChanging(global::System.Guid value);
        partial void OnUIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.Int32 _Type;
        partial void OnTypeChanging(global::System.Int32 value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> TransferDate
        {
            get
            {
                return _TransferDate;
            }
            set
            {
                OnTransferDateChanging(value);
                ReportPropertyChanging("TransferDate");
                _TransferDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TransferDate");
                OnTransferDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _TransferDate;
        partial void OnTransferDateChanging(Nullable<global::System.DateTime> value);
        partial void OnTransferDateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Reduction
        {
            get
            {
                return _Reduction;
            }
            set
            {
                OnReductionChanging(value);
                ReportPropertyChanging("Reduction");
                _Reduction = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Reduction");
                OnReductionChanged();
            }
        }
        private global::System.Int32 _Reduction;
        partial void OnReductionChanging(global::System.Int32 value);
        partial void OnReductionChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime RemovalDate
        {
            get
            {
                return _RemovalDate;
            }
            set
            {
                OnRemovalDateChanging(value);
                ReportPropertyChanging("RemovalDate");
                _RemovalDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RemovalDate");
                OnRemovalDateChanged();
            }
        }
        private global::System.DateTime _RemovalDate;
        partial void OnRemovalDateChanging(global::System.DateTime value);
        partial void OnRemovalDateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> OrganisationUID
        {
            get
            {
                return _OrganisationUID;
            }
            set
            {
                OnOrganisationUIDChanging(value);
                ReportPropertyChanging("OrganisationUID");
                _OrganisationUID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OrganisationUID");
                OnOrganisationUIDChanged();
            }
        }
        private Nullable<global::System.Guid> _OrganisationUID;
        partial void OnOrganisationUIDChanging(Nullable<global::System.Guid> value);
        partial void OnOrganisationUIDChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SKDModel", "FK_Holiday_Organisation", "Organisation")]
        public Organisation Organisation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organisation>("SKDModel.FK_Holiday_Organisation", "Organisation").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organisation>("SKDModel.FK_Holiday_Organisation", "Organisation").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Organisation> OrganisationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organisation>("SKDModel.FK_Holiday_Organisation", "Organisation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Organisation>("SKDModel.FK_Holiday_Organisation", "Organisation", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SKDModel", Name="JournalMetadata")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class JournalMetadata : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта JournalMetadata.
        /// </summary>
        /// <param name="uID">Исходное значение свойства UID.</param>
        /// <param name="no">Исходное значение свойства No.</param>
        /// <param name="startDateTime">Исходное значение свойства StartDateTime.</param>
        /// <param name="endDateTime">Исходное значение свойства EndDateTime.</param>
        public static JournalMetadata CreateJournalMetadata(global::System.Guid uID, global::System.Int32 no, global::System.DateTime startDateTime, global::System.DateTime endDateTime)
        {
            JournalMetadata journalMetadata = new JournalMetadata();
            journalMetadata.UID = uID;
            journalMetadata.No = no;
            journalMetadata.StartDateTime = startDateTime;
            journalMetadata.EndDateTime = endDateTime;
            return journalMetadata;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UID
        {
            get
            {
                return _UID;
            }
            set
            {
                if (_UID != value)
                {
                    OnUIDChanging(value);
                    ReportPropertyChanging("UID");
                    _UID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UID");
                    OnUIDChanged();
                }
            }
        }
        private global::System.Guid _UID;
        partial void OnUIDChanging(global::System.Guid value);
        partial void OnUIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 No
        {
            get
            {
                return _No;
            }
            set
            {
                OnNoChanging(value);
                ReportPropertyChanging("No");
                _No = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("No");
                OnNoChanged();
            }
        }
        private global::System.Int32 _No;
        partial void OnNoChanging(global::System.Int32 value);
        partial void OnNoChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartDateTime
        {
            get
            {
                return _StartDateTime;
            }
            set
            {
                OnStartDateTimeChanging(value);
                ReportPropertyChanging("StartDateTime");
                _StartDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartDateTime");
                OnStartDateTimeChanged();
            }
        }
        private global::System.DateTime _StartDateTime;
        partial void OnStartDateTimeChanging(global::System.DateTime value);
        partial void OnStartDateTimeChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EndDateTime
        {
            get
            {
                return _EndDateTime;
            }
            set
            {
                OnEndDateTimeChanging(value);
                ReportPropertyChanging("EndDateTime");
                _EndDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndDateTime");
                OnEndDateTimeChanged();
            }
        }
        private global::System.DateTime _EndDateTime;
        partial void OnEndDateTimeChanging(global::System.DateTime value);
        partial void OnEndDateTimeChanged();

        #endregion
    
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SKDModel", Name="NightSetting")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class NightSetting : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта NightSetting.
        /// </summary>
        /// <param name="uID">Исходное значение свойства UID.</param>
        /// <param name="nightStartTime">Исходное значение свойства NightStartTime.</param>
        /// <param name="nightEndTime">Исходное значение свойства NightEndTime.</param>
        public static NightSetting CreateNightSetting(global::System.Guid uID, global::System.Int64 nightStartTime, global::System.Int64 nightEndTime)
        {
            NightSetting nightSetting = new NightSetting();
            nightSetting.UID = uID;
            nightSetting.NightStartTime = nightStartTime;
            nightSetting.NightEndTime = nightEndTime;
            return nightSetting;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UID
        {
            get
            {
                return _UID;
            }
            set
            {
                if (_UID != value)
                {
                    OnUIDChanging(value);
                    ReportPropertyChanging("UID");
                    _UID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UID");
                    OnUIDChanged();
                }
            }
        }
        private global::System.Guid _UID;
        partial void OnUIDChanging(global::System.Guid value);
        partial void OnUIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> OrganisationUID
        {
            get
            {
                return _OrganisationUID;
            }
            set
            {
                OnOrganisationUIDChanging(value);
                ReportPropertyChanging("OrganisationUID");
                _OrganisationUID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OrganisationUID");
                OnOrganisationUIDChanged();
            }
        }
        private Nullable<global::System.Guid> _OrganisationUID;
        partial void OnOrganisationUIDChanging(Nullable<global::System.Guid> value);
        partial void OnOrganisationUIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 NightStartTime
        {
            get
            {
                return _NightStartTime;
            }
            set
            {
                OnNightStartTimeChanging(value);
                ReportPropertyChanging("NightStartTime");
                _NightStartTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NightStartTime");
                OnNightStartTimeChanged();
            }
        }
        private global::System.Int64 _NightStartTime;
        partial void OnNightStartTimeChanging(global::System.Int64 value);
        partial void OnNightStartTimeChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 NightEndTime
        {
            get
            {
                return _NightEndTime;
            }
            set
            {
                OnNightEndTimeChanging(value);
                ReportPropertyChanging("NightEndTime");
                _NightEndTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NightEndTime");
                OnNightEndTimeChanged();
            }
        }
        private global::System.Int64 _NightEndTime;
        partial void OnNightEndTimeChanging(global::System.Int64 value);
        partial void OnNightEndTimeChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SKDModel", "FK_NightSettings_Organisation", "Organisation")]
        public Organisation Organisation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organisation>("SKDModel.FK_NightSettings_Organisation", "Organisation").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organisation>("SKDModel.FK_NightSettings_Organisation", "Organisation").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Organisation> OrganisationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organisation>("SKDModel.FK_NightSettings_Organisation", "Organisation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Organisation>("SKDModel.FK_NightSettings_Organisation", "Organisation", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SKDModel", Name="Organisation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Organisation : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Organisation.
        /// </summary>
        /// <param name="uID">Исходное значение свойства UID.</param>
        /// <param name="isDeleted">Исходное значение свойства IsDeleted.</param>
        /// <param name="removalDate">Исходное значение свойства RemovalDate.</param>
        /// <param name="chiefUID">Исходное значение свойства ChiefUID.</param>
        /// <param name="hRChiefUID">Исходное значение свойства HRChiefUID.</param>
        /// <param name="externalKey">Исходное значение свойства ExternalKey.</param>
        public static Organisation CreateOrganisation(global::System.Guid uID, global::System.Boolean isDeleted, global::System.DateTime removalDate, global::System.Guid chiefUID, global::System.Guid hRChiefUID, global::System.String externalKey)
        {
            Organisation organisation = new Organisation();
            organisation.UID = uID;
            organisation.IsDeleted = isDeleted;
            organisation.RemovalDate = removalDate;
            organisation.ChiefUID = chiefUID;
            organisation.HRChiefUID = hRChiefUID;
            organisation.ExternalKey = externalKey;
            return organisation;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UID
        {
            get
            {
                return _UID;
            }
            set
            {
                if (_UID != value)
                {
                    OnUIDChanging(value);
                    ReportPropertyChanging("UID");
                    _UID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UID");
                    OnUIDChanged();
                }
            }
        }
        private global::System.Guid _UID;
        partial void OnUIDChanging(global::System.Guid value);
        partial void OnUIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> PhotoUID
        {
            get
            {
                return _PhotoUID;
            }
            set
            {
                OnPhotoUIDChanging(value);
                ReportPropertyChanging("PhotoUID");
                _PhotoUID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PhotoUID");
                OnPhotoUIDChanged();
            }
        }
        private Nullable<global::System.Guid> _PhotoUID;
        partial void OnPhotoUIDChanging(Nullable<global::System.Guid> value);
        partial void OnPhotoUIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime RemovalDate
        {
            get
            {
                return _RemovalDate;
            }
            set
            {
                OnRemovalDateChanging(value);
                ReportPropertyChanging("RemovalDate");
                _RemovalDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RemovalDate");
                OnRemovalDateChanged();
            }
        }
        private global::System.DateTime _RemovalDate;
        partial void OnRemovalDateChanging(global::System.DateTime value);
        partial void OnRemovalDateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ChiefUID
        {
            get
            {
                return _ChiefUID;
            }
            set
            {
                OnChiefUIDChanging(value);
                ReportPropertyChanging("ChiefUID");
                _ChiefUID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChiefUID");
                OnChiefUIDChanged();
            }
        }
        private global::System.Guid _ChiefUID;
        partial void OnChiefUIDChanging(global::System.Guid value);
        partial void OnChiefUIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid HRChiefUID
        {
            get
            {
                return _HRChiefUID;
            }
            set
            {
                OnHRChiefUIDChanging(value);
                ReportPropertyChanging("HRChiefUID");
                _HRChiefUID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HRChiefUID");
                OnHRChiefUIDChanged();
            }
        }
        private global::System.Guid _HRChiefUID;
        partial void OnHRChiefUIDChanging(global::System.Guid value);
        partial void OnHRChiefUIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ExternalKey
        {
            get
            {
                return _ExternalKey;
            }
            set
            {
                OnExternalKeyChanging(value);
                ReportPropertyChanging("ExternalKey");
                _ExternalKey = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ExternalKey");
                OnExternalKeyChanged();
            }
        }
        private global::System.String _ExternalKey;
        partial void OnExternalKeyChanging(global::System.String value);
        partial void OnExternalKeyChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SKDModel", "FK_AccessTemplate_Organisation", "AccessTemplate")]
        public EntityCollection<AccessTemplate> AccessTemplates
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AccessTemplate>("SKDModel.FK_AccessTemplate_Organisation", "AccessTemplate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AccessTemplate>("SKDModel.FK_AccessTemplate_Organisation", "AccessTemplate", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SKDModel", "FK_AdditionalColumnType_Organisation", "AdditionalColumnType")]
        public EntityCollection<AdditionalColumnType> AdditionalColumnTypes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AdditionalColumnType>("SKDModel.FK_AdditionalColumnType_Organisation", "AdditionalColumnType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AdditionalColumnType>("SKDModel.FK_AdditionalColumnType_Organisation", "AdditionalColumnType", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SKDModel", "FK_DayInterval_Organisation", "DayInterval")]
        public EntityCollection<DayInterval> DayIntervals
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DayInterval>("SKDModel.FK_DayInterval_Organisation", "DayInterval");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DayInterval>("SKDModel.FK_DayInterval_Organisation", "DayInterval", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SKDModel", "FK_Department_Organisation", "Department")]
        public EntityCollection<Department> Departments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Department>("SKDModel.FK_Department_Organisation", "Department");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Department>("SKDModel.FK_Department_Organisation", "Department", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SKDModel", "FK_Employee_Organisation", "Employee")]
        public EntityCollection<Employee> Employees
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Employee>("SKDModel.FK_Employee_Organisation", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Employee>("SKDModel.FK_Employee_Organisation", "Employee", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SKDModel", "FK_Organisation_Employee", "Employee")]
        public Employee Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("SKDModel.FK_Organisation_Employee", "Employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("SKDModel.FK_Organisation_Employee", "Employee").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> EmployeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("SKDModel.FK_Organisation_Employee", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("SKDModel.FK_Organisation_Employee", "Employee", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SKDModel", "FK_Organisation_Employee3", "Employee")]
        public Employee Employee1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("SKDModel.FK_Organisation_Employee3", "Employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("SKDModel.FK_Organisation_Employee3", "Employee").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> Employee1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("SKDModel.FK_Organisation_Employee3", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("SKDModel.FK_Organisation_Employee3", "Employee", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SKDModel", "FK_Holiday_Organisation", "Holiday")]
        public EntityCollection<Holiday> Holidays
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Holiday>("SKDModel.FK_Holiday_Organisation", "Holiday");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Holiday>("SKDModel.FK_Holiday_Organisation", "Holiday", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SKDModel", "FK_NightSettings_Organisation", "NightSettings")]
        public EntityCollection<NightSetting> NightSettings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<NightSetting>("SKDModel.FK_NightSettings_Organisation", "NightSettings");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<NightSetting>("SKDModel.FK_NightSettings_Organisation", "NightSettings", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SKDModel", "FK_Organisation_Photo", "Photo")]
        public Photo Photo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Photo>("SKDModel.FK_Organisation_Photo", "Photo").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Photo>("SKDModel.FK_Organisation_Photo", "Photo").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Photo> PhotoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Photo>("SKDModel.FK_Organisation_Photo", "Photo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Photo>("SKDModel.FK_Organisation_Photo", "Photo", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SKDModel", "FK_OrganisationDoor_Organisation", "OrganisationDoor")]
        public EntityCollection<OrganisationDoor> OrganisationDoors
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OrganisationDoor>("SKDModel.FK_OrganisationDoor_Organisation", "OrganisationDoor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OrganisationDoor>("SKDModel.FK_OrganisationDoor_Organisation", "OrganisationDoor", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SKDModel", "FK_OrganisationUser_Organisation", "OrganisationUser")]
        public EntityCollection<OrganisationUser> OrganisationUsers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OrganisationUser>("SKDModel.FK_OrganisationUser_Organisation", "OrganisationUser");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OrganisationUser>("SKDModel.FK_OrganisationUser_Organisation", "OrganisationUser", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SKDModel", "FK_PassCardTemplate_Organisation", "PassCardTemplate")]
        public EntityCollection<PassCardTemplate> PassCardTemplates
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PassCardTemplate>("SKDModel.FK_PassCardTemplate_Organisation", "PassCardTemplate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PassCardTemplate>("SKDModel.FK_PassCardTemplate_Organisation", "PassCardTemplate", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SKDModel", "FK_Position_Organisation", "Position")]
        public EntityCollection<Position> Positions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Position>("SKDModel.FK_Position_Organisation", "Position");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Position>("SKDModel.FK_Position_Organisation", "Position", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SKDModel", "FK_Schedule_Organisation", "Schedule")]
        public EntityCollection<Schedule> Schedules
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Schedule>("SKDModel.FK_Schedule_Organisation", "Schedule");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Schedule>("SKDModel.FK_Schedule_Organisation", "Schedule", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SKDModel", "FK_ScheduleScheme_Organisation", "ScheduleScheme")]
        public EntityCollection<ScheduleScheme> ScheduleSchemes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ScheduleScheme>("SKDModel.FK_ScheduleScheme_Organisation", "ScheduleScheme");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ScheduleScheme>("SKDModel.FK_ScheduleScheme_Organisation", "ScheduleScheme", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SKDModel", "FK_TimeTrackDocumentType_Organisation", "TimeTrackDocumentType")]
        public EntityCollection<TimeTrackDocumentType> TimeTrackDocumentTypes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TimeTrackDocumentType>("SKDModel.FK_TimeTrackDocumentType_Organisation", "TimeTrackDocumentType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TimeTrackDocumentType>("SKDModel.FK_TimeTrackDocumentType_Organisation", "TimeTrackDocumentType", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SKDModel", Name="OrganisationDoor")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OrganisationDoor : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта OrganisationDoor.
        /// </summary>
        /// <param name="uID">Исходное значение свойства UID.</param>
        /// <param name="doorUID">Исходное значение свойства DoorUID.</param>
        /// <param name="organisationUID">Исходное значение свойства OrganisationUID.</param>
        public static OrganisationDoor CreateOrganisationDoor(global::System.Guid uID, global::System.Guid doorUID, global::System.Guid organisationUID)
        {
            OrganisationDoor organisationDoor = new OrganisationDoor();
            organisationDoor.UID = uID;
            organisationDoor.DoorUID = doorUID;
            organisationDoor.OrganisationUID = organisationUID;
            return organisationDoor;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UID
        {
            get
            {
                return _UID;
            }
            set
            {
                if (_UID != value)
                {
                    OnUIDChanging(value);
                    ReportPropertyChanging("UID");
                    _UID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UID");
                    OnUIDChanged();
                }
            }
        }
        private global::System.Guid _UID;
        partial void OnUIDChanging(global::System.Guid value);
        partial void OnUIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid DoorUID
        {
            get
            {
                return _DoorUID;
            }
            set
            {
                OnDoorUIDChanging(value);
                ReportPropertyChanging("DoorUID");
                _DoorUID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DoorUID");
                OnDoorUIDChanged();
            }
        }
        private global::System.Guid _DoorUID;
        partial void OnDoorUIDChanging(global::System.Guid value);
        partial void OnDoorUIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid OrganisationUID
        {
            get
            {
                return _OrganisationUID;
            }
            set
            {
                OnOrganisationUIDChanging(value);
                ReportPropertyChanging("OrganisationUID");
                _OrganisationUID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OrganisationUID");
                OnOrganisationUIDChanged();
            }
        }
        private global::System.Guid _OrganisationUID;
        partial void OnOrganisationUIDChanging(global::System.Guid value);
        partial void OnOrganisationUIDChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SKDModel", "FK_OrganisationDoor_Organisation", "Organisation")]
        public Organisation Organisation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organisation>("SKDModel.FK_OrganisationDoor_Organisation", "Organisation").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organisation>("SKDModel.FK_OrganisationDoor_Organisation", "Organisation").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Organisation> OrganisationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organisation>("SKDModel.FK_OrganisationDoor_Organisation", "Organisation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Organisation>("SKDModel.FK_OrganisationDoor_Organisation", "Organisation", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SKDModel", Name="OrganisationUser")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OrganisationUser : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта OrganisationUser.
        /// </summary>
        /// <param name="uID">Исходное значение свойства UID.</param>
        /// <param name="userUID">Исходное значение свойства UserUID.</param>
        /// <param name="organisationUID">Исходное значение свойства OrganisationUID.</param>
        public static OrganisationUser CreateOrganisationUser(global::System.Guid uID, global::System.Guid userUID, global::System.Guid organisationUID)
        {
            OrganisationUser organisationUser = new OrganisationUser();
            organisationUser.UID = uID;
            organisationUser.UserUID = userUID;
            organisationUser.OrganisationUID = organisationUID;
            return organisationUser;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UID
        {
            get
            {
                return _UID;
            }
            set
            {
                if (_UID != value)
                {
                    OnUIDChanging(value);
                    ReportPropertyChanging("UID");
                    _UID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UID");
                    OnUIDChanged();
                }
            }
        }
        private global::System.Guid _UID;
        partial void OnUIDChanging(global::System.Guid value);
        partial void OnUIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserUID
        {
            get
            {
                return _UserUID;
            }
            set
            {
                OnUserUIDChanging(value);
                ReportPropertyChanging("UserUID");
                _UserUID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserUID");
                OnUserUIDChanged();
            }
        }
        private global::System.Guid _UserUID;
        partial void OnUserUIDChanging(global::System.Guid value);
        partial void OnUserUIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid OrganisationUID
        {
            get
            {
                return _OrganisationUID;
            }
            set
            {
                OnOrganisationUIDChanging(value);
                ReportPropertyChanging("OrganisationUID");
                _OrganisationUID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OrganisationUID");
                OnOrganisationUIDChanged();
            }
        }
        private global::System.Guid _OrganisationUID;
        partial void OnOrganisationUIDChanging(global::System.Guid value);
        partial void OnOrganisationUIDChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SKDModel", "FK_OrganisationUser_Organisation", "Organisation")]
        public Organisation Organisation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organisation>("SKDModel.FK_OrganisationUser_Organisation", "Organisation").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organisation>("SKDModel.FK_OrganisationUser_Organisation", "Organisation").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Organisation> OrganisationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organisation>("SKDModel.FK_OrganisationUser_Organisation", "Organisation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Organisation>("SKDModel.FK_OrganisationUser_Organisation", "Organisation", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SKDModel", Name="PassCardTemplate")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PassCardTemplate : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта PassCardTemplate.
        /// </summary>
        /// <param name="uID">Исходное значение свойства UID.</param>
        /// <param name="isDeleted">Исходное значение свойства IsDeleted.</param>
        /// <param name="removalDate">Исходное значение свойства RemovalDate.</param>
        public static PassCardTemplate CreatePassCardTemplate(global::System.Guid uID, global::System.Boolean isDeleted, global::System.DateTime removalDate)
        {
            PassCardTemplate passCardTemplate = new PassCardTemplate();
            passCardTemplate.UID = uID;
            passCardTemplate.IsDeleted = isDeleted;
            passCardTemplate.RemovalDate = removalDate;
            return passCardTemplate;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UID
        {
            get
            {
                return _UID;
            }
            set
            {
                if (_UID != value)
                {
                    OnUIDChanging(value);
                    ReportPropertyChanging("UID");
                    _UID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UID");
                    OnUIDChanged();
                }
            }
        }
        private global::System.Guid _UID;
        partial void OnUIDChanging(global::System.Guid value);
        partial void OnUIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime RemovalDate
        {
            get
            {
                return _RemovalDate;
            }
            set
            {
                OnRemovalDateChanging(value);
                ReportPropertyChanging("RemovalDate");
                _RemovalDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RemovalDate");
                OnRemovalDateChanged();
            }
        }
        private global::System.DateTime _RemovalDate;
        partial void OnRemovalDateChanging(global::System.DateTime value);
        partial void OnRemovalDateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> OrganisationUID
        {
            get
            {
                return _OrganisationUID;
            }
            set
            {
                OnOrganisationUIDChanging(value);
                ReportPropertyChanging("OrganisationUID");
                _OrganisationUID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OrganisationUID");
                OnOrganisationUIDChanged();
            }
        }
        private Nullable<global::System.Guid> _OrganisationUID;
        partial void OnOrganisationUIDChanging(Nullable<global::System.Guid> value);
        partial void OnOrganisationUIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Data
        {
            get
            {
                return StructuralObject.GetValidValue(_Data);
            }
            set
            {
                OnDataChanging(value);
                ReportPropertyChanging("Data");
                _Data = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Data");
                OnDataChanged();
            }
        }
        private global::System.Byte[] _Data;
        partial void OnDataChanging(global::System.Byte[] value);
        partial void OnDataChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SKDModel", "FK_PassCardTemplate_Organisation", "Organisation")]
        public Organisation Organisation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organisation>("SKDModel.FK_PassCardTemplate_Organisation", "Organisation").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organisation>("SKDModel.FK_PassCardTemplate_Organisation", "Organisation").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Organisation> OrganisationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organisation>("SKDModel.FK_PassCardTemplate_Organisation", "Organisation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Organisation>("SKDModel.FK_PassCardTemplate_Organisation", "Organisation", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SKDModel", Name="PassJournalMetadata")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PassJournalMetadata : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта PassJournalMetadata.
        /// </summary>
        /// <param name="uID">Исходное значение свойства UID.</param>
        /// <param name="no">Исходное значение свойства No.</param>
        /// <param name="startDateTime">Исходное значение свойства StartDateTime.</param>
        /// <param name="endDateTime">Исходное значение свойства EndDateTime.</param>
        public static PassJournalMetadata CreatePassJournalMetadata(global::System.Guid uID, global::System.Int32 no, global::System.DateTime startDateTime, global::System.DateTime endDateTime)
        {
            PassJournalMetadata passJournalMetadata = new PassJournalMetadata();
            passJournalMetadata.UID = uID;
            passJournalMetadata.No = no;
            passJournalMetadata.StartDateTime = startDateTime;
            passJournalMetadata.EndDateTime = endDateTime;
            return passJournalMetadata;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UID
        {
            get
            {
                return _UID;
            }
            set
            {
                if (_UID != value)
                {
                    OnUIDChanging(value);
                    ReportPropertyChanging("UID");
                    _UID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UID");
                    OnUIDChanged();
                }
            }
        }
        private global::System.Guid _UID;
        partial void OnUIDChanging(global::System.Guid value);
        partial void OnUIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 No
        {
            get
            {
                return _No;
            }
            set
            {
                OnNoChanging(value);
                ReportPropertyChanging("No");
                _No = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("No");
                OnNoChanged();
            }
        }
        private global::System.Int32 _No;
        partial void OnNoChanging(global::System.Int32 value);
        partial void OnNoChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartDateTime
        {
            get
            {
                return _StartDateTime;
            }
            set
            {
                OnStartDateTimeChanging(value);
                ReportPropertyChanging("StartDateTime");
                _StartDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartDateTime");
                OnStartDateTimeChanged();
            }
        }
        private global::System.DateTime _StartDateTime;
        partial void OnStartDateTimeChanging(global::System.DateTime value);
        partial void OnStartDateTimeChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EndDateTime
        {
            get
            {
                return _EndDateTime;
            }
            set
            {
                OnEndDateTimeChanging(value);
                ReportPropertyChanging("EndDateTime");
                _EndDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndDateTime");
                OnEndDateTimeChanged();
            }
        }
        private global::System.DateTime _EndDateTime;
        partial void OnEndDateTimeChanging(global::System.DateTime value);
        partial void OnEndDateTimeChanged();

        #endregion
    
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SKDModel", Name="Patch")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Patch : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Patch.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        public static Patch CreatePatch(global::System.String id)
        {
            Patch patch = new Patch();
            patch.Id = id;
            return patch;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.String _Id;
        partial void OnIdChanging(global::System.String value);
        partial void OnIdChanged();

        #endregion
    
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SKDModel", Name="PendingCard")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PendingCard : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта PendingCard.
        /// </summary>
        /// <param name="uID">Исходное значение свойства UID.</param>
        /// <param name="cardUID">Исходное значение свойства CardUID.</param>
        /// <param name="controllerUID">Исходное значение свойства ControllerUID.</param>
        /// <param name="action">Исходное значение свойства Action.</param>
        public static PendingCard CreatePendingCard(global::System.Guid uID, global::System.Guid cardUID, global::System.Guid controllerUID, global::System.Int32 action)
        {
            PendingCard pendingCard = new PendingCard();
            pendingCard.UID = uID;
            pendingCard.CardUID = cardUID;
            pendingCard.ControllerUID = controllerUID;
            pendingCard.Action = action;
            return pendingCard;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UID
        {
            get
            {
                return _UID;
            }
            set
            {
                if (_UID != value)
                {
                    OnUIDChanging(value);
                    ReportPropertyChanging("UID");
                    _UID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UID");
                    OnUIDChanged();
                }
            }
        }
        private global::System.Guid _UID;
        partial void OnUIDChanging(global::System.Guid value);
        partial void OnUIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid CardUID
        {
            get
            {
                return _CardUID;
            }
            set
            {
                OnCardUIDChanging(value);
                ReportPropertyChanging("CardUID");
                _CardUID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CardUID");
                OnCardUIDChanged();
            }
        }
        private global::System.Guid _CardUID;
        partial void OnCardUIDChanging(global::System.Guid value);
        partial void OnCardUIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ControllerUID
        {
            get
            {
                return _ControllerUID;
            }
            set
            {
                OnControllerUIDChanging(value);
                ReportPropertyChanging("ControllerUID");
                _ControllerUID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ControllerUID");
                OnControllerUIDChanged();
            }
        }
        private global::System.Guid _ControllerUID;
        partial void OnControllerUIDChanging(global::System.Guid value);
        partial void OnControllerUIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Action
        {
            get
            {
                return _Action;
            }
            set
            {
                OnActionChanging(value);
                ReportPropertyChanging("Action");
                _Action = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Action");
                OnActionChanged();
            }
        }
        private global::System.Int32 _Action;
        partial void OnActionChanging(global::System.Int32 value);
        partial void OnActionChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SKDModel", "FK_PendingCard_Card", "Card")]
        public Card Card
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Card>("SKDModel.FK_PendingCard_Card", "Card").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Card>("SKDModel.FK_PendingCard_Card", "Card").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Card> CardReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Card>("SKDModel.FK_PendingCard_Card", "Card");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Card>("SKDModel.FK_PendingCard_Card", "Card", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SKDModel", Name="Photo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Photo : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Photo.
        /// </summary>
        /// <param name="uID">Исходное значение свойства UID.</param>
        public static Photo CreatePhoto(global::System.Guid uID)
        {
            Photo photo = new Photo();
            photo.UID = uID;
            return photo;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UID
        {
            get
            {
                return _UID;
            }
            set
            {
                if (_UID != value)
                {
                    OnUIDChanging(value);
                    ReportPropertyChanging("UID");
                    _UID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UID");
                    OnUIDChanged();
                }
            }
        }
        private global::System.Guid _UID;
        partial void OnUIDChanging(global::System.Guid value);
        partial void OnUIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Data
        {
            get
            {
                return StructuralObject.GetValidValue(_Data);
            }
            set
            {
                OnDataChanging(value);
                ReportPropertyChanging("Data");
                _Data = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Data");
                OnDataChanged();
            }
        }
        private global::System.Byte[] _Data;
        partial void OnDataChanging(global::System.Byte[] value);
        partial void OnDataChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SKDModel", "FK_AdditionalColumn_Photo", "AdditionalColumn")]
        public EntityCollection<AdditionalColumn> AdditionalColumns
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AdditionalColumn>("SKDModel.FK_AdditionalColumn_Photo", "AdditionalColumn");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AdditionalColumn>("SKDModel.FK_AdditionalColumn_Photo", "AdditionalColumn", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SKDModel", "FK_Department_Photo", "Department")]
        public EntityCollection<Department> Departments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Department>("SKDModel.FK_Department_Photo", "Department");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Department>("SKDModel.FK_Department_Photo", "Department", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SKDModel", "FK_Employee_Photo", "Employee")]
        public EntityCollection<Employee> Employees
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Employee>("SKDModel.FK_Employee_Photo", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Employee>("SKDModel.FK_Employee_Photo", "Employee", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SKDModel", "FK_Organisation_Photo", "Organisation")]
        public EntityCollection<Organisation> Organisations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Organisation>("SKDModel.FK_Organisation_Photo", "Organisation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Organisation>("SKDModel.FK_Organisation_Photo", "Organisation", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SKDModel", "FK_Position_Photo", "Position")]
        public EntityCollection<Position> Positions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Position>("SKDModel.FK_Position_Photo", "Position");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Position>("SKDModel.FK_Position_Photo", "Position", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SKDModel", Name="Position")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Position : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Position.
        /// </summary>
        /// <param name="uID">Исходное значение свойства UID.</param>
        /// <param name="isDeleted">Исходное значение свойства IsDeleted.</param>
        /// <param name="removalDate">Исходное значение свойства RemovalDate.</param>
        /// <param name="externalKey">Исходное значение свойства ExternalKey.</param>
        public static Position CreatePosition(global::System.Guid uID, global::System.Boolean isDeleted, global::System.DateTime removalDate, global::System.String externalKey)
        {
            Position position = new Position();
            position.UID = uID;
            position.IsDeleted = isDeleted;
            position.RemovalDate = removalDate;
            position.ExternalKey = externalKey;
            return position;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UID
        {
            get
            {
                return _UID;
            }
            set
            {
                if (_UID != value)
                {
                    OnUIDChanging(value);
                    ReportPropertyChanging("UID");
                    _UID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UID");
                    OnUIDChanged();
                }
            }
        }
        private global::System.Guid _UID;
        partial void OnUIDChanging(global::System.Guid value);
        partial void OnUIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime RemovalDate
        {
            get
            {
                return _RemovalDate;
            }
            set
            {
                OnRemovalDateChanging(value);
                ReportPropertyChanging("RemovalDate");
                _RemovalDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RemovalDate");
                OnRemovalDateChanged();
            }
        }
        private global::System.DateTime _RemovalDate;
        partial void OnRemovalDateChanging(global::System.DateTime value);
        partial void OnRemovalDateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> OrganisationUID
        {
            get
            {
                return _OrganisationUID;
            }
            set
            {
                OnOrganisationUIDChanging(value);
                ReportPropertyChanging("OrganisationUID");
                _OrganisationUID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OrganisationUID");
                OnOrganisationUIDChanged();
            }
        }
        private Nullable<global::System.Guid> _OrganisationUID;
        partial void OnOrganisationUIDChanging(Nullable<global::System.Guid> value);
        partial void OnOrganisationUIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> PhotoUID
        {
            get
            {
                return _PhotoUID;
            }
            set
            {
                OnPhotoUIDChanging(value);
                ReportPropertyChanging("PhotoUID");
                _PhotoUID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PhotoUID");
                OnPhotoUIDChanged();
            }
        }
        private Nullable<global::System.Guid> _PhotoUID;
        partial void OnPhotoUIDChanging(Nullable<global::System.Guid> value);
        partial void OnPhotoUIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ExternalKey
        {
            get
            {
                return _ExternalKey;
            }
            set
            {
                OnExternalKeyChanging(value);
                ReportPropertyChanging("ExternalKey");
                _ExternalKey = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ExternalKey");
                OnExternalKeyChanged();
            }
        }
        private global::System.String _ExternalKey;
        partial void OnExternalKeyChanging(global::System.String value);
        partial void OnExternalKeyChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SKDModel", "FK_Employee_Position", "Employee")]
        public EntityCollection<Employee> Employees
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Employee>("SKDModel.FK_Employee_Position", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Employee>("SKDModel.FK_Employee_Position", "Employee", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SKDModel", "FK_Position_Organisation", "Organisation")]
        public Organisation Organisation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organisation>("SKDModel.FK_Position_Organisation", "Organisation").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organisation>("SKDModel.FK_Position_Organisation", "Organisation").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Organisation> OrganisationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organisation>("SKDModel.FK_Position_Organisation", "Organisation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Organisation>("SKDModel.FK_Position_Organisation", "Organisation", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SKDModel", "FK_Position_Photo", "Photo")]
        public Photo Photo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Photo>("SKDModel.FK_Position_Photo", "Photo").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Photo>("SKDModel.FK_Position_Photo", "Photo").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Photo> PhotoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Photo>("SKDModel.FK_Position_Photo", "Photo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Photo>("SKDModel.FK_Position_Photo", "Photo", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SKDModel", Name="Schedule")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Schedule : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Schedule.
        /// </summary>
        /// <param name="uID">Исходное значение свойства UID.</param>
        /// <param name="name">Исходное значение свойства Name.</param>
        /// <param name="isIgnoreHoliday">Исходное значение свойства IsIgnoreHoliday.</param>
        /// <param name="isOnlyFirstEnter">Исходное значение свойства IsOnlyFirstEnter.</param>
        /// <param name="allowedLate">Исходное значение свойства AllowedLate.</param>
        /// <param name="allowedEarlyLeave">Исходное значение свойства AllowedEarlyLeave.</param>
        /// <param name="isDeleted">Исходное значение свойства IsDeleted.</param>
        /// <param name="removalDate">Исходное значение свойства RemovalDate.</param>
        public static Schedule CreateSchedule(global::System.Guid uID, global::System.String name, global::System.Boolean isIgnoreHoliday, global::System.Boolean isOnlyFirstEnter, global::System.Int32 allowedLate, global::System.Int32 allowedEarlyLeave, global::System.Boolean isDeleted, global::System.DateTime removalDate)
        {
            Schedule schedule = new Schedule();
            schedule.UID = uID;
            schedule.Name = name;
            schedule.IsIgnoreHoliday = isIgnoreHoliday;
            schedule.IsOnlyFirstEnter = isOnlyFirstEnter;
            schedule.AllowedLate = allowedLate;
            schedule.AllowedEarlyLeave = allowedEarlyLeave;
            schedule.IsDeleted = isDeleted;
            schedule.RemovalDate = removalDate;
            return schedule;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UID
        {
            get
            {
                return _UID;
            }
            set
            {
                if (_UID != value)
                {
                    OnUIDChanging(value);
                    ReportPropertyChanging("UID");
                    _UID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UID");
                    OnUIDChanged();
                }
            }
        }
        private global::System.Guid _UID;
        partial void OnUIDChanging(global::System.Guid value);
        partial void OnUIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ScheduleSchemeUID
        {
            get
            {
                return _ScheduleSchemeUID;
            }
            set
            {
                OnScheduleSchemeUIDChanging(value);
                ReportPropertyChanging("ScheduleSchemeUID");
                _ScheduleSchemeUID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ScheduleSchemeUID");
                OnScheduleSchemeUIDChanged();
            }
        }
        private Nullable<global::System.Guid> _ScheduleSchemeUID;
        partial void OnScheduleSchemeUIDChanging(Nullable<global::System.Guid> value);
        partial void OnScheduleSchemeUIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsIgnoreHoliday
        {
            get
            {
                return _IsIgnoreHoliday;
            }
            set
            {
                OnIsIgnoreHolidayChanging(value);
                ReportPropertyChanging("IsIgnoreHoliday");
                _IsIgnoreHoliday = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsIgnoreHoliday");
                OnIsIgnoreHolidayChanged();
            }
        }
        private global::System.Boolean _IsIgnoreHoliday;
        partial void OnIsIgnoreHolidayChanging(global::System.Boolean value);
        partial void OnIsIgnoreHolidayChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsOnlyFirstEnter
        {
            get
            {
                return _IsOnlyFirstEnter;
            }
            set
            {
                OnIsOnlyFirstEnterChanging(value);
                ReportPropertyChanging("IsOnlyFirstEnter");
                _IsOnlyFirstEnter = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsOnlyFirstEnter");
                OnIsOnlyFirstEnterChanged();
            }
        }
        private global::System.Boolean _IsOnlyFirstEnter;
        partial void OnIsOnlyFirstEnterChanging(global::System.Boolean value);
        partial void OnIsOnlyFirstEnterChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AllowedLate
        {
            get
            {
                return _AllowedLate;
            }
            set
            {
                OnAllowedLateChanging(value);
                ReportPropertyChanging("AllowedLate");
                _AllowedLate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AllowedLate");
                OnAllowedLateChanged();
            }
        }
        private global::System.Int32 _AllowedLate;
        partial void OnAllowedLateChanging(global::System.Int32 value);
        partial void OnAllowedLateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AllowedEarlyLeave
        {
            get
            {
                return _AllowedEarlyLeave;
            }
            set
            {
                OnAllowedEarlyLeaveChanging(value);
                ReportPropertyChanging("AllowedEarlyLeave");
                _AllowedEarlyLeave = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AllowedEarlyLeave");
                OnAllowedEarlyLeaveChanged();
            }
        }
        private global::System.Int32 _AllowedEarlyLeave;
        partial void OnAllowedEarlyLeaveChanging(global::System.Int32 value);
        partial void OnAllowedEarlyLeaveChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime RemovalDate
        {
            get
            {
                return _RemovalDate;
            }
            set
            {
                OnRemovalDateChanging(value);
                ReportPropertyChanging("RemovalDate");
                _RemovalDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RemovalDate");
                OnRemovalDateChanged();
            }
        }
        private global::System.DateTime _RemovalDate;
        partial void OnRemovalDateChanging(global::System.DateTime value);
        partial void OnRemovalDateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> OrganisationUID
        {
            get
            {
                return _OrganisationUID;
            }
            set
            {
                OnOrganisationUIDChanging(value);
                ReportPropertyChanging("OrganisationUID");
                _OrganisationUID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OrganisationUID");
                OnOrganisationUIDChanged();
            }
        }
        private Nullable<global::System.Guid> _OrganisationUID;
        partial void OnOrganisationUIDChanging(Nullable<global::System.Guid> value);
        partial void OnOrganisationUIDChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SKDModel", "FK_Employee_Schedule", "Employee")]
        public EntityCollection<Employee> Employees
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Employee>("SKDModel.FK_Employee_Schedule", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Employee>("SKDModel.FK_Employee_Schedule", "Employee", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SKDModel", "FK_Schedule_Organisation", "Organisation")]
        public Organisation Organisation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organisation>("SKDModel.FK_Schedule_Organisation", "Organisation").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organisation>("SKDModel.FK_Schedule_Organisation", "Organisation").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Organisation> OrganisationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organisation>("SKDModel.FK_Schedule_Organisation", "Organisation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Organisation>("SKDModel.FK_Schedule_Organisation", "Organisation", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SKDModel", "FK_Schedule_ScheduleScheme", "ScheduleScheme")]
        public ScheduleScheme ScheduleScheme
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ScheduleScheme>("SKDModel.FK_Schedule_ScheduleScheme", "ScheduleScheme").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ScheduleScheme>("SKDModel.FK_Schedule_ScheduleScheme", "ScheduleScheme").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ScheduleScheme> ScheduleSchemeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ScheduleScheme>("SKDModel.FK_Schedule_ScheduleScheme", "ScheduleScheme");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ScheduleScheme>("SKDModel.FK_Schedule_ScheduleScheme", "ScheduleScheme", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SKDModel", "FK_ScheduleZone_Schedule", "ScheduleZone")]
        public EntityCollection<ScheduleZone> ScheduleZones
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ScheduleZone>("SKDModel.FK_ScheduleZone_Schedule", "ScheduleZone");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ScheduleZone>("SKDModel.FK_ScheduleZone_Schedule", "ScheduleZone", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SKDModel", Name="ScheduleDay")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ScheduleDay : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта ScheduleDay.
        /// </summary>
        /// <param name="uID">Исходное значение свойства UID.</param>
        /// <param name="scheduleSchemeUID">Исходное значение свойства ScheduleSchemeUID.</param>
        /// <param name="number">Исходное значение свойства Number.</param>
        public static ScheduleDay CreateScheduleDay(global::System.Guid uID, global::System.Guid scheduleSchemeUID, global::System.Int32 number)
        {
            ScheduleDay scheduleDay = new ScheduleDay();
            scheduleDay.UID = uID;
            scheduleDay.ScheduleSchemeUID = scheduleSchemeUID;
            scheduleDay.Number = number;
            return scheduleDay;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UID
        {
            get
            {
                return _UID;
            }
            set
            {
                if (_UID != value)
                {
                    OnUIDChanging(value);
                    ReportPropertyChanging("UID");
                    _UID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UID");
                    OnUIDChanged();
                }
            }
        }
        private global::System.Guid _UID;
        partial void OnUIDChanging(global::System.Guid value);
        partial void OnUIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> DayIntervalUID
        {
            get
            {
                return _DayIntervalUID;
            }
            set
            {
                OnDayIntervalUIDChanging(value);
                ReportPropertyChanging("DayIntervalUID");
                _DayIntervalUID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DayIntervalUID");
                OnDayIntervalUIDChanged();
            }
        }
        private Nullable<global::System.Guid> _DayIntervalUID;
        partial void OnDayIntervalUIDChanging(Nullable<global::System.Guid> value);
        partial void OnDayIntervalUIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ScheduleSchemeUID
        {
            get
            {
                return _ScheduleSchemeUID;
            }
            set
            {
                OnScheduleSchemeUIDChanging(value);
                ReportPropertyChanging("ScheduleSchemeUID");
                _ScheduleSchemeUID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ScheduleSchemeUID");
                OnScheduleSchemeUIDChanged();
            }
        }
        private global::System.Guid _ScheduleSchemeUID;
        partial void OnScheduleSchemeUIDChanging(global::System.Guid value);
        partial void OnScheduleSchemeUIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Number
        {
            get
            {
                return _Number;
            }
            set
            {
                OnNumberChanging(value);
                ReportPropertyChanging("Number");
                _Number = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Number");
                OnNumberChanged();
            }
        }
        private global::System.Int32 _Number;
        partial void OnNumberChanging(global::System.Int32 value);
        partial void OnNumberChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SKDModel", "FK_ScheduleDay_DayInterval", "DayInterval")]
        public DayInterval DayInterval
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DayInterval>("SKDModel.FK_ScheduleDay_DayInterval", "DayInterval").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DayInterval>("SKDModel.FK_ScheduleDay_DayInterval", "DayInterval").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DayInterval> DayIntervalReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DayInterval>("SKDModel.FK_ScheduleDay_DayInterval", "DayInterval");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DayInterval>("SKDModel.FK_ScheduleDay_DayInterval", "DayInterval", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SKDModel", "FK_ScheduleDay_ScheduleScheme", "ScheduleScheme")]
        public ScheduleScheme ScheduleScheme
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ScheduleScheme>("SKDModel.FK_ScheduleDay_ScheduleScheme", "ScheduleScheme").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ScheduleScheme>("SKDModel.FK_ScheduleDay_ScheduleScheme", "ScheduleScheme").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ScheduleScheme> ScheduleSchemeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ScheduleScheme>("SKDModel.FK_ScheduleDay_ScheduleScheme", "ScheduleScheme");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ScheduleScheme>("SKDModel.FK_ScheduleDay_ScheduleScheme", "ScheduleScheme", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SKDModel", Name="ScheduleGKDaySchedule")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ScheduleGKDaySchedule : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта ScheduleGKDaySchedule.
        /// </summary>
        /// <param name="uID">Исходное значение свойства UID.</param>
        /// <param name="scheduleUID">Исходное значение свойства ScheduleUID.</param>
        /// <param name="dayScheduleUID">Исходное значение свойства DayScheduleUID.</param>
        public static ScheduleGKDaySchedule CreateScheduleGKDaySchedule(global::System.Guid uID, global::System.Guid scheduleUID, global::System.Guid dayScheduleUID)
        {
            ScheduleGKDaySchedule scheduleGKDaySchedule = new ScheduleGKDaySchedule();
            scheduleGKDaySchedule.UID = uID;
            scheduleGKDaySchedule.ScheduleUID = scheduleUID;
            scheduleGKDaySchedule.DayScheduleUID = dayScheduleUID;
            return scheduleGKDaySchedule;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UID
        {
            get
            {
                return _UID;
            }
            set
            {
                if (_UID != value)
                {
                    OnUIDChanging(value);
                    ReportPropertyChanging("UID");
                    _UID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UID");
                    OnUIDChanged();
                }
            }
        }
        private global::System.Guid _UID;
        partial void OnUIDChanging(global::System.Guid value);
        partial void OnUIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ScheduleUID
        {
            get
            {
                return _ScheduleUID;
            }
            set
            {
                OnScheduleUIDChanging(value);
                ReportPropertyChanging("ScheduleUID");
                _ScheduleUID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ScheduleUID");
                OnScheduleUIDChanged();
            }
        }
        private global::System.Guid _ScheduleUID;
        partial void OnScheduleUIDChanging(global::System.Guid value);
        partial void OnScheduleUIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid DayScheduleUID
        {
            get
            {
                return _DayScheduleUID;
            }
            set
            {
                OnDayScheduleUIDChanging(value);
                ReportPropertyChanging("DayScheduleUID");
                _DayScheduleUID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DayScheduleUID");
                OnDayScheduleUIDChanged();
            }
        }
        private global::System.Guid _DayScheduleUID;
        partial void OnDayScheduleUIDChanging(global::System.Guid value);
        partial void OnDayScheduleUIDChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SKDModel", "FK_ScheduleGKSchedule_GKDaySchedule", "GKDaySchedule")]
        public GKDaySchedule GKDaySchedule
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GKDaySchedule>("SKDModel.FK_ScheduleGKSchedule_GKDaySchedule", "GKDaySchedule").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GKDaySchedule>("SKDModel.FK_ScheduleGKSchedule_GKDaySchedule", "GKDaySchedule").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<GKDaySchedule> GKDayScheduleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GKDaySchedule>("SKDModel.FK_ScheduleGKSchedule_GKDaySchedule", "GKDaySchedule");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<GKDaySchedule>("SKDModel.FK_ScheduleGKSchedule_GKDaySchedule", "GKDaySchedule", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SKDModel", "FK_ScheduleGKSchedule_GKSchedule", "GKSchedule")]
        public GKSchedule GKSchedule
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GKSchedule>("SKDModel.FK_ScheduleGKSchedule_GKSchedule", "GKSchedule").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GKSchedule>("SKDModel.FK_ScheduleGKSchedule_GKSchedule", "GKSchedule").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<GKSchedule> GKScheduleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GKSchedule>("SKDModel.FK_ScheduleGKSchedule_GKSchedule", "GKSchedule");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<GKSchedule>("SKDModel.FK_ScheduleGKSchedule_GKSchedule", "GKSchedule", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SKDModel", Name="ScheduleScheme")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ScheduleScheme : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта ScheduleScheme.
        /// </summary>
        /// <param name="uID">Исходное значение свойства UID.</param>
        /// <param name="name">Исходное значение свойства Name.</param>
        /// <param name="type">Исходное значение свойства Type.</param>
        /// <param name="daysCount">Исходное значение свойства DaysCount.</param>
        /// <param name="isDeleted">Исходное значение свойства IsDeleted.</param>
        /// <param name="removalDate">Исходное значение свойства RemovalDate.</param>
        public static ScheduleScheme CreateScheduleScheme(global::System.Guid uID, global::System.String name, global::System.Int32 type, global::System.Int32 daysCount, global::System.Boolean isDeleted, global::System.DateTime removalDate)
        {
            ScheduleScheme scheduleScheme = new ScheduleScheme();
            scheduleScheme.UID = uID;
            scheduleScheme.Name = name;
            scheduleScheme.Type = type;
            scheduleScheme.DaysCount = daysCount;
            scheduleScheme.IsDeleted = isDeleted;
            scheduleScheme.RemovalDate = removalDate;
            return scheduleScheme;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UID
        {
            get
            {
                return _UID;
            }
            set
            {
                if (_UID != value)
                {
                    OnUIDChanging(value);
                    ReportPropertyChanging("UID");
                    _UID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UID");
                    OnUIDChanged();
                }
            }
        }
        private global::System.Guid _UID;
        partial void OnUIDChanging(global::System.Guid value);
        partial void OnUIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.Int32 _Type;
        partial void OnTypeChanging(global::System.Int32 value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DaysCount
        {
            get
            {
                return _DaysCount;
            }
            set
            {
                OnDaysCountChanging(value);
                ReportPropertyChanging("DaysCount");
                _DaysCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DaysCount");
                OnDaysCountChanged();
            }
        }
        private global::System.Int32 _DaysCount;
        partial void OnDaysCountChanging(global::System.Int32 value);
        partial void OnDaysCountChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime RemovalDate
        {
            get
            {
                return _RemovalDate;
            }
            set
            {
                OnRemovalDateChanging(value);
                ReportPropertyChanging("RemovalDate");
                _RemovalDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RemovalDate");
                OnRemovalDateChanged();
            }
        }
        private global::System.DateTime _RemovalDate;
        partial void OnRemovalDateChanging(global::System.DateTime value);
        partial void OnRemovalDateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> OrganisationUID
        {
            get
            {
                return _OrganisationUID;
            }
            set
            {
                OnOrganisationUIDChanging(value);
                ReportPropertyChanging("OrganisationUID");
                _OrganisationUID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OrganisationUID");
                OnOrganisationUIDChanged();
            }
        }
        private Nullable<global::System.Guid> _OrganisationUID;
        partial void OnOrganisationUIDChanging(Nullable<global::System.Guid> value);
        partial void OnOrganisationUIDChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SKDModel", "FK_ScheduleScheme_Organisation", "Organisation")]
        public Organisation Organisation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organisation>("SKDModel.FK_ScheduleScheme_Organisation", "Organisation").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organisation>("SKDModel.FK_ScheduleScheme_Organisation", "Organisation").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Organisation> OrganisationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organisation>("SKDModel.FK_ScheduleScheme_Organisation", "Organisation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Organisation>("SKDModel.FK_ScheduleScheme_Organisation", "Organisation", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SKDModel", "FK_Schedule_ScheduleScheme", "Schedule")]
        public EntityCollection<Schedule> Schedules
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Schedule>("SKDModel.FK_Schedule_ScheduleScheme", "Schedule");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Schedule>("SKDModel.FK_Schedule_ScheduleScheme", "Schedule", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SKDModel", "FK_ScheduleDay_ScheduleScheme", "ScheduleDay")]
        public EntityCollection<ScheduleDay> ScheduleDays
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ScheduleDay>("SKDModel.FK_ScheduleDay_ScheduleScheme", "ScheduleDay");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ScheduleDay>("SKDModel.FK_ScheduleDay_ScheduleScheme", "ScheduleDay", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SKDModel", Name="ScheduleZone")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ScheduleZone : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта ScheduleZone.
        /// </summary>
        /// <param name="uID">Исходное значение свойства UID.</param>
        /// <param name="zoneUID">Исходное значение свойства ZoneUID.</param>
        /// <param name="doorUID">Исходное значение свойства DoorUID.</param>
        /// <param name="scheduleUID">Исходное значение свойства ScheduleUID.</param>
        public static ScheduleZone CreateScheduleZone(global::System.Guid uID, global::System.Guid zoneUID, global::System.Guid doorUID, global::System.Guid scheduleUID)
        {
            ScheduleZone scheduleZone = new ScheduleZone();
            scheduleZone.UID = uID;
            scheduleZone.ZoneUID = zoneUID;
            scheduleZone.DoorUID = doorUID;
            scheduleZone.ScheduleUID = scheduleUID;
            return scheduleZone;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UID
        {
            get
            {
                return _UID;
            }
            set
            {
                if (_UID != value)
                {
                    OnUIDChanging(value);
                    ReportPropertyChanging("UID");
                    _UID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UID");
                    OnUIDChanged();
                }
            }
        }
        private global::System.Guid _UID;
        partial void OnUIDChanging(global::System.Guid value);
        partial void OnUIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ZoneUID
        {
            get
            {
                return _ZoneUID;
            }
            set
            {
                OnZoneUIDChanging(value);
                ReportPropertyChanging("ZoneUID");
                _ZoneUID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ZoneUID");
                OnZoneUIDChanged();
            }
        }
        private global::System.Guid _ZoneUID;
        partial void OnZoneUIDChanging(global::System.Guid value);
        partial void OnZoneUIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid DoorUID
        {
            get
            {
                return _DoorUID;
            }
            set
            {
                OnDoorUIDChanging(value);
                ReportPropertyChanging("DoorUID");
                _DoorUID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DoorUID");
                OnDoorUIDChanged();
            }
        }
        private global::System.Guid _DoorUID;
        partial void OnDoorUIDChanging(global::System.Guid value);
        partial void OnDoorUIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ScheduleUID
        {
            get
            {
                return _ScheduleUID;
            }
            set
            {
                OnScheduleUIDChanging(value);
                ReportPropertyChanging("ScheduleUID");
                _ScheduleUID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ScheduleUID");
                OnScheduleUIDChanged();
            }
        }
        private global::System.Guid _ScheduleUID;
        partial void OnScheduleUIDChanging(global::System.Guid value);
        partial void OnScheduleUIDChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SKDModel", "FK_ScheduleZone_Schedule", "Schedule")]
        public Schedule Schedule
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Schedule>("SKDModel.FK_ScheduleZone_Schedule", "Schedule").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Schedule>("SKDModel.FK_ScheduleZone_Schedule", "Schedule").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Schedule> ScheduleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Schedule>("SKDModel.FK_ScheduleZone_Schedule", "Schedule");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Schedule>("SKDModel.FK_ScheduleZone_Schedule", "Schedule", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SKDModel", Name="TimeTrackDocument")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TimeTrackDocument : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта TimeTrackDocument.
        /// </summary>
        /// <param name="uID">Исходное значение свойства UID.</param>
        /// <param name="employeeUID">Исходное значение свойства EmployeeUID.</param>
        /// <param name="startDateTime">Исходное значение свойства StartDateTime.</param>
        /// <param name="endDateTime">Исходное значение свойства EndDateTime.</param>
        /// <param name="documentCode">Исходное значение свойства DocumentCode.</param>
        /// <param name="documentDateTime">Исходное значение свойства DocumentDateTime.</param>
        /// <param name="documentNumber">Исходное значение свойства DocumentNumber.</param>
        public static TimeTrackDocument CreateTimeTrackDocument(global::System.Guid uID, global::System.Guid employeeUID, global::System.DateTime startDateTime, global::System.DateTime endDateTime, global::System.Int32 documentCode, global::System.DateTime documentDateTime, global::System.Int32 documentNumber)
        {
            TimeTrackDocument timeTrackDocument = new TimeTrackDocument();
            timeTrackDocument.UID = uID;
            timeTrackDocument.EmployeeUID = employeeUID;
            timeTrackDocument.StartDateTime = startDateTime;
            timeTrackDocument.EndDateTime = endDateTime;
            timeTrackDocument.DocumentCode = documentCode;
            timeTrackDocument.DocumentDateTime = documentDateTime;
            timeTrackDocument.DocumentNumber = documentNumber;
            return timeTrackDocument;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UID
        {
            get
            {
                return _UID;
            }
            set
            {
                if (_UID != value)
                {
                    OnUIDChanging(value);
                    ReportPropertyChanging("UID");
                    _UID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UID");
                    OnUIDChanged();
                }
            }
        }
        private global::System.Guid _UID;
        partial void OnUIDChanging(global::System.Guid value);
        partial void OnUIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid EmployeeUID
        {
            get
            {
                return _EmployeeUID;
            }
            set
            {
                OnEmployeeUIDChanging(value);
                ReportPropertyChanging("EmployeeUID");
                _EmployeeUID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EmployeeUID");
                OnEmployeeUIDChanged();
            }
        }
        private global::System.Guid _EmployeeUID;
        partial void OnEmployeeUIDChanging(global::System.Guid value);
        partial void OnEmployeeUIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartDateTime
        {
            get
            {
                return _StartDateTime;
            }
            set
            {
                OnStartDateTimeChanging(value);
                ReportPropertyChanging("StartDateTime");
                _StartDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartDateTime");
                OnStartDateTimeChanged();
            }
        }
        private global::System.DateTime _StartDateTime;
        partial void OnStartDateTimeChanging(global::System.DateTime value);
        partial void OnStartDateTimeChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EndDateTime
        {
            get
            {
                return _EndDateTime;
            }
            set
            {
                OnEndDateTimeChanging(value);
                ReportPropertyChanging("EndDateTime");
                _EndDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndDateTime");
                OnEndDateTimeChanged();
            }
        }
        private global::System.DateTime _EndDateTime;
        partial void OnEndDateTimeChanging(global::System.DateTime value);
        partial void OnEndDateTimeChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DocumentCode
        {
            get
            {
                return _DocumentCode;
            }
            set
            {
                OnDocumentCodeChanging(value);
                ReportPropertyChanging("DocumentCode");
                _DocumentCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DocumentCode");
                OnDocumentCodeChanged();
            }
        }
        private global::System.Int32 _DocumentCode;
        partial void OnDocumentCodeChanging(global::System.Int32 value);
        partial void OnDocumentCodeChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comment
        {
            get
            {
                return _Comment;
            }
            set
            {
                OnCommentChanging(value);
                ReportPropertyChanging("Comment");
                _Comment = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comment");
                OnCommentChanged();
            }
        }
        private global::System.String _Comment;
        partial void OnCommentChanging(global::System.String value);
        partial void OnCommentChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FileName
        {
            get
            {
                return _FileName;
            }
            set
            {
                OnFileNameChanging(value);
                ReportPropertyChanging("FileName");
                _FileName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FileName");
                OnFileNameChanged();
            }
        }
        private global::System.String _FileName;
        partial void OnFileNameChanging(global::System.String value);
        partial void OnFileNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DocumentDateTime
        {
            get
            {
                return _DocumentDateTime;
            }
            set
            {
                OnDocumentDateTimeChanging(value);
                ReportPropertyChanging("DocumentDateTime");
                _DocumentDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DocumentDateTime");
                OnDocumentDateTimeChanged();
            }
        }
        private global::System.DateTime _DocumentDateTime;
        partial void OnDocumentDateTimeChanging(global::System.DateTime value);
        partial void OnDocumentDateTimeChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DocumentNumber
        {
            get
            {
                return _DocumentNumber;
            }
            set
            {
                OnDocumentNumberChanging(value);
                ReportPropertyChanging("DocumentNumber");
                _DocumentNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DocumentNumber");
                OnDocumentNumberChanged();
            }
        }
        private global::System.Int32 _DocumentNumber;
        partial void OnDocumentNumberChanging(global::System.Int32 value);
        partial void OnDocumentNumberChanged();

        #endregion
    
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SKDModel", Name="TimeTrackDocumentType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TimeTrackDocumentType : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта TimeTrackDocumentType.
        /// </summary>
        /// <param name="uID">Исходное значение свойства UID.</param>
        /// <param name="name">Исходное значение свойства Name.</param>
        /// <param name="shortName">Исходное значение свойства ShortName.</param>
        /// <param name="documentCode">Исходное значение свойства DocumentCode.</param>
        /// <param name="documentType">Исходное значение свойства DocumentType.</param>
        /// <param name="organisationUID">Исходное значение свойства OrganisationUID.</param>
        public static TimeTrackDocumentType CreateTimeTrackDocumentType(global::System.Guid uID, global::System.String name, global::System.String shortName, global::System.Int32 documentCode, global::System.Int32 documentType, global::System.Guid organisationUID)
        {
            TimeTrackDocumentType timeTrackDocumentType = new TimeTrackDocumentType();
            timeTrackDocumentType.UID = uID;
            timeTrackDocumentType.Name = name;
            timeTrackDocumentType.ShortName = shortName;
            timeTrackDocumentType.DocumentCode = documentCode;
            timeTrackDocumentType.DocumentType = documentType;
            timeTrackDocumentType.OrganisationUID = organisationUID;
            return timeTrackDocumentType;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UID
        {
            get
            {
                return _UID;
            }
            set
            {
                if (_UID != value)
                {
                    OnUIDChanging(value);
                    ReportPropertyChanging("UID");
                    _UID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UID");
                    OnUIDChanged();
                }
            }
        }
        private global::System.Guid _UID;
        partial void OnUIDChanging(global::System.Guid value);
        partial void OnUIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ShortName
        {
            get
            {
                return _ShortName;
            }
            set
            {
                OnShortNameChanging(value);
                ReportPropertyChanging("ShortName");
                _ShortName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ShortName");
                OnShortNameChanged();
            }
        }
        private global::System.String _ShortName;
        partial void OnShortNameChanging(global::System.String value);
        partial void OnShortNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DocumentCode
        {
            get
            {
                return _DocumentCode;
            }
            set
            {
                OnDocumentCodeChanging(value);
                ReportPropertyChanging("DocumentCode");
                _DocumentCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DocumentCode");
                OnDocumentCodeChanged();
            }
        }
        private global::System.Int32 _DocumentCode;
        partial void OnDocumentCodeChanging(global::System.Int32 value);
        partial void OnDocumentCodeChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DocumentType
        {
            get
            {
                return _DocumentType;
            }
            set
            {
                OnDocumentTypeChanging(value);
                ReportPropertyChanging("DocumentType");
                _DocumentType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DocumentType");
                OnDocumentTypeChanged();
            }
        }
        private global::System.Int32 _DocumentType;
        partial void OnDocumentTypeChanging(global::System.Int32 value);
        partial void OnDocumentTypeChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid OrganisationUID
        {
            get
            {
                return _OrganisationUID;
            }
            set
            {
                OnOrganisationUIDChanging(value);
                ReportPropertyChanging("OrganisationUID");
                _OrganisationUID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OrganisationUID");
                OnOrganisationUIDChanged();
            }
        }
        private global::System.Guid _OrganisationUID;
        partial void OnOrganisationUIDChanging(global::System.Guid value);
        partial void OnOrganisationUIDChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SKDModel", "FK_TimeTrackDocumentType_Organisation", "Organisation")]
        public Organisation Organisation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organisation>("SKDModel.FK_TimeTrackDocumentType_Organisation", "Organisation").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organisation>("SKDModel.FK_TimeTrackDocumentType_Organisation", "Organisation").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Organisation> OrganisationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organisation>("SKDModel.FK_TimeTrackDocumentType_Organisation", "Organisation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Organisation>("SKDModel.FK_TimeTrackDocumentType_Organisation", "Organisation", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SKDModel", Name="TimeTrackException")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TimeTrackException : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта TimeTrackException.
        /// </summary>
        /// <param name="uID">Исходное значение свойства UID.</param>
        /// <param name="employeeUID">Исходное значение свойства EmployeeUID.</param>
        /// <param name="startDateTime">Исходное значение свойства StartDateTime.</param>
        /// <param name="endDateTime">Исходное значение свойства EndDateTime.</param>
        /// <param name="documentType">Исходное значение свойства DocumentType.</param>
        public static TimeTrackException CreateTimeTrackException(global::System.Guid uID, global::System.Guid employeeUID, global::System.DateTime startDateTime, global::System.DateTime endDateTime, global::System.Int32 documentType)
        {
            TimeTrackException timeTrackException = new TimeTrackException();
            timeTrackException.UID = uID;
            timeTrackException.EmployeeUID = employeeUID;
            timeTrackException.StartDateTime = startDateTime;
            timeTrackException.EndDateTime = endDateTime;
            timeTrackException.DocumentType = documentType;
            return timeTrackException;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UID
        {
            get
            {
                return _UID;
            }
            set
            {
                if (_UID != value)
                {
                    OnUIDChanging(value);
                    ReportPropertyChanging("UID");
                    _UID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UID");
                    OnUIDChanged();
                }
            }
        }
        private global::System.Guid _UID;
        partial void OnUIDChanging(global::System.Guid value);
        partial void OnUIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid EmployeeUID
        {
            get
            {
                return _EmployeeUID;
            }
            set
            {
                OnEmployeeUIDChanging(value);
                ReportPropertyChanging("EmployeeUID");
                _EmployeeUID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EmployeeUID");
                OnEmployeeUIDChanged();
            }
        }
        private global::System.Guid _EmployeeUID;
        partial void OnEmployeeUIDChanging(global::System.Guid value);
        partial void OnEmployeeUIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartDateTime
        {
            get
            {
                return _StartDateTime;
            }
            set
            {
                OnStartDateTimeChanging(value);
                ReportPropertyChanging("StartDateTime");
                _StartDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartDateTime");
                OnStartDateTimeChanged();
            }
        }
        private global::System.DateTime _StartDateTime;
        partial void OnStartDateTimeChanging(global::System.DateTime value);
        partial void OnStartDateTimeChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EndDateTime
        {
            get
            {
                return _EndDateTime;
            }
            set
            {
                OnEndDateTimeChanging(value);
                ReportPropertyChanging("EndDateTime");
                _EndDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndDateTime");
                OnEndDateTimeChanged();
            }
        }
        private global::System.DateTime _EndDateTime;
        partial void OnEndDateTimeChanging(global::System.DateTime value);
        partial void OnEndDateTimeChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DocumentType
        {
            get
            {
                return _DocumentType;
            }
            set
            {
                OnDocumentTypeChanging(value);
                ReportPropertyChanging("DocumentType");
                _DocumentType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DocumentType");
                OnDocumentTypeChanged();
            }
        }
        private global::System.Int32 _DocumentType;
        partial void OnDocumentTypeChanging(global::System.Int32 value);
        partial void OnDocumentTypeChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comment
        {
            get
            {
                return _Comment;
            }
            set
            {
                OnCommentChanging(value);
                ReportPropertyChanging("Comment");
                _Comment = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comment");
                OnCommentChanged();
            }
        }
        private global::System.String _Comment;
        partial void OnCommentChanging(global::System.String value);
        partial void OnCommentChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SKDModel", "FK_TimeTrackException_Employee", "Employee")]
        public Employee Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("SKDModel.FK_TimeTrackException_Employee", "Employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("SKDModel.FK_TimeTrackException_Employee", "Employee").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> EmployeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("SKDModel.FK_TimeTrackException_Employee", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("SKDModel.FK_TimeTrackException_Employee", "Employee", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
