#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SKDDriver.DataAccess
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="SKD")]
	public partial class SKDDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAccessTemplate(AccessTemplate instance);
    partial void UpdateAccessTemplate(AccessTemplate instance);
    partial void DeleteAccessTemplate(AccessTemplate instance);
    partial void InsertAdditionalColumn(AdditionalColumn instance);
    partial void UpdateAdditionalColumn(AdditionalColumn instance);
    partial void DeleteAdditionalColumn(AdditionalColumn instance);
    partial void InsertAdditionalColumnType(AdditionalColumnType instance);
    partial void UpdateAdditionalColumnType(AdditionalColumnType instance);
    partial void DeleteAdditionalColumnType(AdditionalColumnType instance);
    partial void InsertCardDoor(CardDoor instance);
    partial void UpdateCardDoor(CardDoor instance);
    partial void DeleteCardDoor(CardDoor instance);
    partial void InsertDayInterval(DayInterval instance);
    partial void UpdateDayInterval(DayInterval instance);
    partial void DeleteDayInterval(DayInterval instance);
    partial void InsertDayIntervalPart(DayIntervalPart instance);
    partial void UpdateDayIntervalPart(DayIntervalPart instance);
    partial void DeleteDayIntervalPart(DayIntervalPart instance);
    partial void InsertDepartment(Department instance);
    partial void UpdateDepartment(Department instance);
    partial void DeleteDepartment(Department instance);
    partial void InsertGKCard(GKCard instance);
    partial void UpdateGKCard(GKCard instance);
    partial void DeleteGKCard(GKCard instance);
    partial void InsertGKMetadata(GKMetadata instance);
    partial void UpdateGKMetadata(GKMetadata instance);
    partial void DeleteGKMetadata(GKMetadata instance);
    partial void InsertHoliday(Holiday instance);
    partial void UpdateHoliday(Holiday instance);
    partial void DeleteHoliday(Holiday instance);
    partial void InsertJournalMetadata(JournalMetadata instance);
    partial void UpdateJournalMetadata(JournalMetadata instance);
    partial void DeleteJournalMetadata(JournalMetadata instance);
    partial void InsertOrganisation(Organisation instance);
    partial void UpdateOrganisation(Organisation instance);
    partial void DeleteOrganisation(Organisation instance);
    partial void InsertOrganisationDoor(OrganisationDoor instance);
    partial void UpdateOrganisationDoor(OrganisationDoor instance);
    partial void DeleteOrganisationDoor(OrganisationDoor instance);
    partial void InsertOrganisationUser(OrganisationUser instance);
    partial void UpdateOrganisationUser(OrganisationUser instance);
    partial void DeleteOrganisationUser(OrganisationUser instance);
    partial void InsertPassCardTemplate(PassCardTemplate instance);
    partial void UpdatePassCardTemplate(PassCardTemplate instance);
    partial void DeletePassCardTemplate(PassCardTemplate instance);
    partial void InsertPassJournalMetadata(PassJournalMetadata instance);
    partial void UpdatePassJournalMetadata(PassJournalMetadata instance);
    partial void DeletePassJournalMetadata(PassJournalMetadata instance);
    partial void InsertPendingCard(PendingCard instance);
    partial void UpdatePendingCard(PendingCard instance);
    partial void DeletePendingCard(PendingCard instance);
    partial void InsertPhoto(Photo instance);
    partial void UpdatePhoto(Photo instance);
    partial void DeletePhoto(Photo instance);
    partial void InsertPosition(Position instance);
    partial void UpdatePosition(Position instance);
    partial void DeletePosition(Position instance);
    partial void InsertSchedule(Schedule instance);
    partial void UpdateSchedule(Schedule instance);
    partial void DeleteSchedule(Schedule instance);
    partial void InsertScheduleDay(ScheduleDay instance);
    partial void UpdateScheduleDay(ScheduleDay instance);
    partial void DeleteScheduleDay(ScheduleDay instance);
    partial void InsertScheduleScheme(ScheduleScheme instance);
    partial void UpdateScheduleScheme(ScheduleScheme instance);
    partial void DeleteScheduleScheme(ScheduleScheme instance);
    partial void InsertScheduleZone(ScheduleZone instance);
    partial void UpdateScheduleZone(ScheduleZone instance);
    partial void DeleteScheduleZone(ScheduleZone instance);
    partial void InsertTimeTrackDocumentType(TimeTrackDocumentType instance);
    partial void UpdateTimeTrackDocumentType(TimeTrackDocumentType instance);
    partial void DeleteTimeTrackDocumentType(TimeTrackDocumentType instance);
    partial void InsertTimeTrackException(TimeTrackException instance);
    partial void UpdateTimeTrackException(TimeTrackException instance);
    partial void DeleteTimeTrackException(TimeTrackException instance);
    partial void InsertNightSetting(NightSetting instance);
    partial void UpdateNightSetting(NightSetting instance);
    partial void DeleteNightSetting(NightSetting instance);
    partial void InsertEmployee(Employee instance);
    partial void UpdateEmployee(Employee instance);
    partial void DeleteEmployee(Employee instance);
    partial void InsertTimeTrackDocument(TimeTrackDocument instance);
    partial void UpdateTimeTrackDocument(TimeTrackDocument instance);
    partial void DeleteTimeTrackDocument(TimeTrackDocument instance);
    partial void InsertCard(Card instance);
    partial void UpdateCard(Card instance);
    partial void DeleteCard(Card instance);
    partial void InsertGKScheduleDay(GKScheduleDay instance);
    partial void UpdateGKScheduleDay(GKScheduleDay instance);
    partial void DeleteGKScheduleDay(GKScheduleDay instance);
    partial void InsertGKDaySchedule(GKDaySchedule instance);
    partial void UpdateGKDaySchedule(GKDaySchedule instance);
    partial void DeleteGKDaySchedule(GKDaySchedule instance);
    partial void InsertGKDaySchedulePart(GKDaySchedulePart instance);
    partial void UpdateGKDaySchedulePart(GKDaySchedulePart instance);
    partial void DeleteGKDaySchedulePart(GKDaySchedulePart instance);
    partial void InsertScheduleGKDaySchedule(ScheduleGKDaySchedule instance);
    partial void UpdateScheduleGKDaySchedule(ScheduleGKDaySchedule instance);
    partial void DeleteScheduleGKDaySchedule(ScheduleGKDaySchedule instance);
    partial void InsertGKSchedule(GKSchedule instance);
    partial void UpdateGKSchedule(GKSchedule instance);
    partial void DeleteGKSchedule(GKSchedule instance);
    #endregion
		
		public SKDDataContext() : 
				base("Data Source=02-KBP-NIO-0524\\SQLEXPRESS;Initial Catalog=SKD;Integrated Security=Tr" +
						"ue", mappingSource)
		{
			OnCreated();
		}
		
		public SKDDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SKDDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SKDDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SKDDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<AccessTemplate> AccessTemplates
		{
			get
			{
				return this.GetTable<AccessTemplate>();
			}
		}
		
		public System.Data.Linq.Table<AdditionalColumn> AdditionalColumns
		{
			get
			{
				return this.GetTable<AdditionalColumn>();
			}
		}
		
		public System.Data.Linq.Table<AdditionalColumnType> AdditionalColumnTypes
		{
			get
			{
				return this.GetTable<AdditionalColumnType>();
			}
		}
		
		public System.Data.Linq.Table<CardDoor> CardDoors
		{
			get
			{
				return this.GetTable<CardDoor>();
			}
		}
		
		public System.Data.Linq.Table<DayInterval> DayIntervals
		{
			get
			{
				return this.GetTable<DayInterval>();
			}
		}
		
		public System.Data.Linq.Table<DayIntervalPart> DayIntervalParts
		{
			get
			{
				return this.GetTable<DayIntervalPart>();
			}
		}
		
		public System.Data.Linq.Table<Department> Departments
		{
			get
			{
				return this.GetTable<Department>();
			}
		}
		
		public System.Data.Linq.Table<GKCard> GKCards
		{
			get
			{
				return this.GetTable<GKCard>();
			}
		}
		
		public System.Data.Linq.Table<GKMetadata> GKMetadatas
		{
			get
			{
				return this.GetTable<GKMetadata>();
			}
		}
		
		public System.Data.Linq.Table<Holiday> Holidays
		{
			get
			{
				return this.GetTable<Holiday>();
			}
		}
		
		public System.Data.Linq.Table<JournalMetadata> JournalMetadatas
		{
			get
			{
				return this.GetTable<JournalMetadata>();
			}
		}
		
		public System.Data.Linq.Table<Organisation> Organisations
		{
			get
			{
				return this.GetTable<Organisation>();
			}
		}
		
		public System.Data.Linq.Table<OrganisationDoor> OrganisationDoors
		{
			get
			{
				return this.GetTable<OrganisationDoor>();
			}
		}
		
		public System.Data.Linq.Table<OrganisationUser> OrganisationUsers
		{
			get
			{
				return this.GetTable<OrganisationUser>();
			}
		}
		
		public System.Data.Linq.Table<PassCardTemplate> PassCardTemplates
		{
			get
			{
				return this.GetTable<PassCardTemplate>();
			}
		}
		
		public System.Data.Linq.Table<PassJournalMetadata> PassJournalMetadatas
		{
			get
			{
				return this.GetTable<PassJournalMetadata>();
			}
		}
		
		public System.Data.Linq.Table<Patch> Patches
		{
			get
			{
				return this.GetTable<Patch>();
			}
		}
		
		public System.Data.Linq.Table<PendingCard> PendingCards
		{
			get
			{
				return this.GetTable<PendingCard>();
			}
		}
		
		public System.Data.Linq.Table<Photo> Photos
		{
			get
			{
				return this.GetTable<Photo>();
			}
		}
		
		public System.Data.Linq.Table<Position> Positions
		{
			get
			{
				return this.GetTable<Position>();
			}
		}
		
		public System.Data.Linq.Table<Schedule> Schedules
		{
			get
			{
				return this.GetTable<Schedule>();
			}
		}
		
		public System.Data.Linq.Table<ScheduleDay> ScheduleDays
		{
			get
			{
				return this.GetTable<ScheduleDay>();
			}
		}
		
		public System.Data.Linq.Table<ScheduleScheme> ScheduleSchemes
		{
			get
			{
				return this.GetTable<ScheduleScheme>();
			}
		}
		
		public System.Data.Linq.Table<ScheduleZone> ScheduleZones
		{
			get
			{
				return this.GetTable<ScheduleZone>();
			}
		}
		
		public System.Data.Linq.Table<TimeTrackDocumentType> TimeTrackDocumentTypes
		{
			get
			{
				return this.GetTable<TimeTrackDocumentType>();
			}
		}
		
		public System.Data.Linq.Table<TimeTrackException> TimeTrackExceptions
		{
			get
			{
				return this.GetTable<TimeTrackException>();
			}
		}
		
		public System.Data.Linq.Table<NightSetting> NightSettings
		{
			get
			{
				return this.GetTable<NightSetting>();
			}
		}
		
		public System.Data.Linq.Table<Employee> Employees
		{
			get
			{
				return this.GetTable<Employee>();
			}
		}
		
		public System.Data.Linq.Table<TimeTrackDocument> TimeTrackDocuments
		{
			get
			{
				return this.GetTable<TimeTrackDocument>();
			}
		}
		
		public System.Data.Linq.Table<Card> Cards
		{
			get
			{
				return this.GetTable<Card>();
			}
		}
		
		public System.Data.Linq.Table<GKScheduleDay> GKScheduleDays
		{
			get
			{
				return this.GetTable<GKScheduleDay>();
			}
		}
		
		public System.Data.Linq.Table<GKDaySchedule> GKDaySchedules
		{
			get
			{
				return this.GetTable<GKDaySchedule>();
			}
		}
		
		public System.Data.Linq.Table<GKDaySchedulePart> GKDayScheduleParts
		{
			get
			{
				return this.GetTable<GKDaySchedulePart>();
			}
		}
		
		public System.Data.Linq.Table<ScheduleGKDaySchedule> ScheduleGKDaySchedules
		{
			get
			{
				return this.GetTable<ScheduleGKDaySchedule>();
			}
		}
		
		public System.Data.Linq.Table<GKSchedule> GKSchedules
		{
			get
			{
				return this.GetTable<GKSchedule>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AccessTemplate")]
	public partial class AccessTemplate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UID;
		
		private string _Name;
		
		private string _Description;
		
		private bool _IsDeleted;
		
		private System.DateTime _RemovalDate;
		
		private System.Nullable<System.Guid> _OrganisationUID;
		
		private EntitySet<CardDoor> _CardDoors;
		
		private EntitySet<Card> _Cards;
		
		private EntityRef<Organisation> _Organisation;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUIDChanging(System.Guid value);
    partial void OnUIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnRemovalDateChanging(System.DateTime value);
    partial void OnRemovalDateChanged();
    partial void OnOrganisationUIDChanging(System.Nullable<System.Guid> value);
    partial void OnOrganisationUIDChanged();
    #endregion
		
		public AccessTemplate()
		{
			this._CardDoors = new EntitySet<CardDoor>(new Action<CardDoor>(this.attach_CardDoors), new Action<CardDoor>(this.detach_CardDoors));
			this._Cards = new EntitySet<Card>(new Action<Card>(this.attach_Cards), new Action<Card>(this.detach_Cards));
			this._Organisation = default(EntityRef<Organisation>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UID
		{
			get
			{
				return this._UID;
			}
			set
			{
				if ((this._UID != value))
				{
					this.OnUIDChanging(value);
					this.SendPropertyChanging();
					this._UID = value;
					this.SendPropertyChanged("UID");
					this.OnUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RemovalDate", DbType="DateTime NOT NULL")]
		public System.DateTime RemovalDate
		{
			get
			{
				return this._RemovalDate;
			}
			set
			{
				if ((this._RemovalDate != value))
				{
					this.OnRemovalDateChanging(value);
					this.SendPropertyChanging();
					this._RemovalDate = value;
					this.SendPropertyChanged("RemovalDate");
					this.OnRemovalDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrganisationUID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> OrganisationUID
		{
			get
			{
				return this._OrganisationUID;
			}
			set
			{
				if ((this._OrganisationUID != value))
				{
					if (this._Organisation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrganisationUIDChanging(value);
					this.SendPropertyChanging();
					this._OrganisationUID = value;
					this.SendPropertyChanged("OrganisationUID");
					this.OnOrganisationUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AccessTemplate_CardDoor", Storage="_CardDoors", ThisKey="UID", OtherKey="AccessTemplateUID")]
		public EntitySet<CardDoor> CardDoors
		{
			get
			{
				return this._CardDoors;
			}
			set
			{
				this._CardDoors.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AccessTemplate_Card", Storage="_Cards", ThisKey="UID", OtherKey="AccessTemplateUID")]
		public EntitySet<Card> Cards
		{
			get
			{
				return this._Cards;
			}
			set
			{
				this._Cards.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organisation_AccessTemplate", Storage="_Organisation", ThisKey="OrganisationUID", OtherKey="UID", IsForeignKey=true)]
		public Organisation Organisation
		{
			get
			{
				return this._Organisation.Entity;
			}
			set
			{
				Organisation previousValue = this._Organisation.Entity;
				if (((previousValue != value) 
							|| (this._Organisation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Organisation.Entity = null;
						previousValue.AccessTemplates.Remove(this);
					}
					this._Organisation.Entity = value;
					if ((value != null))
					{
						value.AccessTemplates.Add(this);
						this._OrganisationUID = value.UID;
					}
					else
					{
						this._OrganisationUID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Organisation");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CardDoors(CardDoor entity)
		{
			this.SendPropertyChanging();
			entity.AccessTemplate = this;
		}
		
		private void detach_CardDoors(CardDoor entity)
		{
			this.SendPropertyChanging();
			entity.AccessTemplate = null;
		}
		
		private void attach_Cards(Card entity)
		{
			this.SendPropertyChanging();
			entity.AccessTemplate = this;
		}
		
		private void detach_Cards(Card entity)
		{
			this.SendPropertyChanging();
			entity.AccessTemplate = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AdditionalColumn")]
	public partial class AdditionalColumn : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UID;
		
		private System.Nullable<System.Guid> _EmployeeUID;
		
		private System.Nullable<System.Guid> _AdditionalColumnTypeUID;
		
		private string _TextData;
		
		private System.Nullable<System.Guid> _PhotoUID;
		
		private EntityRef<AdditionalColumnType> _AdditionalColumnType;
		
		private EntityRef<Photo> _Photo;
		
		private EntityRef<Employee> _Employee;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUIDChanging(System.Guid value);
    partial void OnUIDChanged();
    partial void OnEmployeeUIDChanging(System.Nullable<System.Guid> value);
    partial void OnEmployeeUIDChanged();
    partial void OnAdditionalColumnTypeUIDChanging(System.Nullable<System.Guid> value);
    partial void OnAdditionalColumnTypeUIDChanged();
    partial void OnTextDataChanging(string value);
    partial void OnTextDataChanged();
    partial void OnPhotoUIDChanging(System.Nullable<System.Guid> value);
    partial void OnPhotoUIDChanged();
    #endregion
		
		public AdditionalColumn()
		{
			this._AdditionalColumnType = default(EntityRef<AdditionalColumnType>);
			this._Photo = default(EntityRef<Photo>);
			this._Employee = default(EntityRef<Employee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UID
		{
			get
			{
				return this._UID;
			}
			set
			{
				if ((this._UID != value))
				{
					this.OnUIDChanging(value);
					this.SendPropertyChanging();
					this._UID = value;
					this.SendPropertyChanged("UID");
					this.OnUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeUID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> EmployeeUID
		{
			get
			{
				return this._EmployeeUID;
			}
			set
			{
				if ((this._EmployeeUID != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeUIDChanging(value);
					this.SendPropertyChanging();
					this._EmployeeUID = value;
					this.SendPropertyChanged("EmployeeUID");
					this.OnEmployeeUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdditionalColumnTypeUID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> AdditionalColumnTypeUID
		{
			get
			{
				return this._AdditionalColumnTypeUID;
			}
			set
			{
				if ((this._AdditionalColumnTypeUID != value))
				{
					if (this._AdditionalColumnType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAdditionalColumnTypeUIDChanging(value);
					this.SendPropertyChanging();
					this._AdditionalColumnTypeUID = value;
					this.SendPropertyChanged("AdditionalColumnTypeUID");
					this.OnAdditionalColumnTypeUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TextData", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string TextData
		{
			get
			{
				return this._TextData;
			}
			set
			{
				if ((this._TextData != value))
				{
					this.OnTextDataChanging(value);
					this.SendPropertyChanging();
					this._TextData = value;
					this.SendPropertyChanged("TextData");
					this.OnTextDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhotoUID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PhotoUID
		{
			get
			{
				return this._PhotoUID;
			}
			set
			{
				if ((this._PhotoUID != value))
				{
					if (this._Photo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPhotoUIDChanging(value);
					this.SendPropertyChanging();
					this._PhotoUID = value;
					this.SendPropertyChanged("PhotoUID");
					this.OnPhotoUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdditionalColumnType_AdditionalColumn", Storage="_AdditionalColumnType", ThisKey="AdditionalColumnTypeUID", OtherKey="UID", IsForeignKey=true)]
		public AdditionalColumnType AdditionalColumnType
		{
			get
			{
				return this._AdditionalColumnType.Entity;
			}
			set
			{
				AdditionalColumnType previousValue = this._AdditionalColumnType.Entity;
				if (((previousValue != value) 
							|| (this._AdditionalColumnType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AdditionalColumnType.Entity = null;
						previousValue.AdditionalColumns.Remove(this);
					}
					this._AdditionalColumnType.Entity = value;
					if ((value != null))
					{
						value.AdditionalColumns.Add(this);
						this._AdditionalColumnTypeUID = value.UID;
					}
					else
					{
						this._AdditionalColumnTypeUID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("AdditionalColumnType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Photo_AdditionalColumn", Storage="_Photo", ThisKey="PhotoUID", OtherKey="UID", IsForeignKey=true)]
		public Photo Photo
		{
			get
			{
				return this._Photo.Entity;
			}
			set
			{
				Photo previousValue = this._Photo.Entity;
				if (((previousValue != value) 
							|| (this._Photo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Photo.Entity = null;
						previousValue.AdditionalColumns.Remove(this);
					}
					this._Photo.Entity = value;
					if ((value != null))
					{
						value.AdditionalColumns.Add(this);
						this._PhotoUID = value.UID;
					}
					else
					{
						this._PhotoUID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Photo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_AdditionalColumn", Storage="_Employee", ThisKey="EmployeeUID", OtherKey="UID", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.AdditionalColumns.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.AdditionalColumns.Add(this);
						this._EmployeeUID = value.UID;
					}
					else
					{
						this._EmployeeUID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AdditionalColumnType")]
	public partial class AdditionalColumnType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UID;
		
		private bool _IsDeleted;
		
		private System.DateTime _RemovalDate;
		
		private string _Name;
		
		private string _Description;
		
		private System.Nullable<int> _DataType;
		
		private System.Nullable<int> _PersonType;
		
		private System.Nullable<System.Guid> _OrganisationUID;
		
		private bool _IsInGrid;
		
		private EntitySet<AdditionalColumn> _AdditionalColumns;
		
		private EntityRef<Organisation> _Organisation;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUIDChanging(System.Guid value);
    partial void OnUIDChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnRemovalDateChanging(System.DateTime value);
    partial void OnRemovalDateChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnDataTypeChanging(System.Nullable<int> value);
    partial void OnDataTypeChanged();
    partial void OnPersonTypeChanging(System.Nullable<int> value);
    partial void OnPersonTypeChanged();
    partial void OnOrganisationUIDChanging(System.Nullable<System.Guid> value);
    partial void OnOrganisationUIDChanged();
    partial void OnIsInGridChanging(bool value);
    partial void OnIsInGridChanged();
    #endregion
		
		public AdditionalColumnType()
		{
			this._AdditionalColumns = new EntitySet<AdditionalColumn>(new Action<AdditionalColumn>(this.attach_AdditionalColumns), new Action<AdditionalColumn>(this.detach_AdditionalColumns));
			this._Organisation = default(EntityRef<Organisation>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UID
		{
			get
			{
				return this._UID;
			}
			set
			{
				if ((this._UID != value))
				{
					this.OnUIDChanging(value);
					this.SendPropertyChanging();
					this._UID = value;
					this.SendPropertyChanged("UID");
					this.OnUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RemovalDate", DbType="DateTime NOT NULL")]
		public System.DateTime RemovalDate
		{
			get
			{
				return this._RemovalDate;
			}
			set
			{
				if ((this._RemovalDate != value))
				{
					this.OnRemovalDateChanging(value);
					this.SendPropertyChanging();
					this._RemovalDate = value;
					this.SendPropertyChanged("RemovalDate");
					this.OnRemovalDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataType", DbType="Int")]
		public System.Nullable<int> DataType
		{
			get
			{
				return this._DataType;
			}
			set
			{
				if ((this._DataType != value))
				{
					this.OnDataTypeChanging(value);
					this.SendPropertyChanging();
					this._DataType = value;
					this.SendPropertyChanged("DataType");
					this.OnDataTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonType", DbType="Int")]
		public System.Nullable<int> PersonType
		{
			get
			{
				return this._PersonType;
			}
			set
			{
				if ((this._PersonType != value))
				{
					this.OnPersonTypeChanging(value);
					this.SendPropertyChanging();
					this._PersonType = value;
					this.SendPropertyChanged("PersonType");
					this.OnPersonTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrganisationUID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> OrganisationUID
		{
			get
			{
				return this._OrganisationUID;
			}
			set
			{
				if ((this._OrganisationUID != value))
				{
					if (this._Organisation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrganisationUIDChanging(value);
					this.SendPropertyChanging();
					this._OrganisationUID = value;
					this.SendPropertyChanged("OrganisationUID");
					this.OnOrganisationUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsInGrid", DbType="Bit NOT NULL")]
		public bool IsInGrid
		{
			get
			{
				return this._IsInGrid;
			}
			set
			{
				if ((this._IsInGrid != value))
				{
					this.OnIsInGridChanging(value);
					this.SendPropertyChanging();
					this._IsInGrid = value;
					this.SendPropertyChanged("IsInGrid");
					this.OnIsInGridChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdditionalColumnType_AdditionalColumn", Storage="_AdditionalColumns", ThisKey="UID", OtherKey="AdditionalColumnTypeUID")]
		public EntitySet<AdditionalColumn> AdditionalColumns
		{
			get
			{
				return this._AdditionalColumns;
			}
			set
			{
				this._AdditionalColumns.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organisation_AdditionalColumnType", Storage="_Organisation", ThisKey="OrganisationUID", OtherKey="UID", IsForeignKey=true)]
		public Organisation Organisation
		{
			get
			{
				return this._Organisation.Entity;
			}
			set
			{
				Organisation previousValue = this._Organisation.Entity;
				if (((previousValue != value) 
							|| (this._Organisation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Organisation.Entity = null;
						previousValue.AdditionalColumnTypes.Remove(this);
					}
					this._Organisation.Entity = value;
					if ((value != null))
					{
						value.AdditionalColumnTypes.Add(this);
						this._OrganisationUID = value.UID;
					}
					else
					{
						this._OrganisationUID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Organisation");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AdditionalColumns(AdditionalColumn entity)
		{
			this.SendPropertyChanging();
			entity.AdditionalColumnType = this;
		}
		
		private void detach_AdditionalColumns(AdditionalColumn entity)
		{
			this.SendPropertyChanging();
			entity.AdditionalColumnType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CardDoor")]
	public partial class CardDoor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UID;
		
		private System.Guid _DoorUID;
		
		private System.Nullable<System.Guid> _CardUID;
		
		private System.Nullable<System.Guid> _AccessTemplateUID;
		
		private int _EnterScheduleNo;
		
		private EntityRef<AccessTemplate> _AccessTemplate;
		
		private EntityRef<Card> _Card;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUIDChanging(System.Guid value);
    partial void OnUIDChanged();
    partial void OnDoorUIDChanging(System.Guid value);
    partial void OnDoorUIDChanged();
    partial void OnCardUIDChanging(System.Nullable<System.Guid> value);
    partial void OnCardUIDChanged();
    partial void OnAccessTemplateUIDChanging(System.Nullable<System.Guid> value);
    partial void OnAccessTemplateUIDChanged();
    partial void OnEnterScheduleNoChanging(int value);
    partial void OnEnterScheduleNoChanged();
    #endregion
		
		public CardDoor()
		{
			this._AccessTemplate = default(EntityRef<AccessTemplate>);
			this._Card = default(EntityRef<Card>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UID
		{
			get
			{
				return this._UID;
			}
			set
			{
				if ((this._UID != value))
				{
					this.OnUIDChanging(value);
					this.SendPropertyChanging();
					this._UID = value;
					this.SendPropertyChanged("UID");
					this.OnUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoorUID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid DoorUID
		{
			get
			{
				return this._DoorUID;
			}
			set
			{
				if ((this._DoorUID != value))
				{
					this.OnDoorUIDChanging(value);
					this.SendPropertyChanging();
					this._DoorUID = value;
					this.SendPropertyChanged("DoorUID");
					this.OnDoorUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CardUID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> CardUID
		{
			get
			{
				return this._CardUID;
			}
			set
			{
				if ((this._CardUID != value))
				{
					if (this._Card.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCardUIDChanging(value);
					this.SendPropertyChanging();
					this._CardUID = value;
					this.SendPropertyChanged("CardUID");
					this.OnCardUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccessTemplateUID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> AccessTemplateUID
		{
			get
			{
				return this._AccessTemplateUID;
			}
			set
			{
				if ((this._AccessTemplateUID != value))
				{
					if (this._AccessTemplate.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccessTemplateUIDChanging(value);
					this.SendPropertyChanging();
					this._AccessTemplateUID = value;
					this.SendPropertyChanged("AccessTemplateUID");
					this.OnAccessTemplateUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnterScheduleNo", DbType="Int NOT NULL")]
		public int EnterScheduleNo
		{
			get
			{
				return this._EnterScheduleNo;
			}
			set
			{
				if ((this._EnterScheduleNo != value))
				{
					this.OnEnterScheduleNoChanging(value);
					this.SendPropertyChanging();
					this._EnterScheduleNo = value;
					this.SendPropertyChanged("EnterScheduleNo");
					this.OnEnterScheduleNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AccessTemplate_CardDoor", Storage="_AccessTemplate", ThisKey="AccessTemplateUID", OtherKey="UID", IsForeignKey=true, DeleteRule="CASCADE")]
		public AccessTemplate AccessTemplate
		{
			get
			{
				return this._AccessTemplate.Entity;
			}
			set
			{
				AccessTemplate previousValue = this._AccessTemplate.Entity;
				if (((previousValue != value) 
							|| (this._AccessTemplate.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AccessTemplate.Entity = null;
						previousValue.CardDoors.Remove(this);
					}
					this._AccessTemplate.Entity = value;
					if ((value != null))
					{
						value.CardDoors.Add(this);
						this._AccessTemplateUID = value.UID;
					}
					else
					{
						this._AccessTemplateUID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("AccessTemplate");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Card_CardDoor", Storage="_Card", ThisKey="CardUID", OtherKey="UID", IsForeignKey=true, DeleteRule="CASCADE")]
		public Card Card
		{
			get
			{
				return this._Card.Entity;
			}
			set
			{
				Card previousValue = this._Card.Entity;
				if (((previousValue != value) 
							|| (this._Card.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Card.Entity = null;
						previousValue.CardDoors.Remove(this);
					}
					this._Card.Entity = value;
					if ((value != null))
					{
						value.CardDoors.Add(this);
						this._CardUID = value.UID;
					}
					else
					{
						this._CardUID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Card");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DayInterval")]
	public partial class DayInterval : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UID;
		
		private string _Name;
		
		private string _Description;
		
		private int _SlideTime;
		
		private bool _IsDeleted;
		
		private System.DateTime _RemovalDate;
		
		private System.Nullable<System.Guid> _OrganisationUID;
		
		private EntitySet<DayIntervalPart> _DayIntervalParts;
		
		private EntitySet<ScheduleDay> _ScheduleDays;
		
		private EntityRef<Organisation> _Organisation;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUIDChanging(System.Guid value);
    partial void OnUIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnSlideTimeChanging(int value);
    partial void OnSlideTimeChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnRemovalDateChanging(System.DateTime value);
    partial void OnRemovalDateChanged();
    partial void OnOrganisationUIDChanging(System.Nullable<System.Guid> value);
    partial void OnOrganisationUIDChanged();
    #endregion
		
		public DayInterval()
		{
			this._DayIntervalParts = new EntitySet<DayIntervalPart>(new Action<DayIntervalPart>(this.attach_DayIntervalParts), new Action<DayIntervalPart>(this.detach_DayIntervalParts));
			this._ScheduleDays = new EntitySet<ScheduleDay>(new Action<ScheduleDay>(this.attach_ScheduleDays), new Action<ScheduleDay>(this.detach_ScheduleDays));
			this._Organisation = default(EntityRef<Organisation>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UID
		{
			get
			{
				return this._UID;
			}
			set
			{
				if ((this._UID != value))
				{
					this.OnUIDChanging(value);
					this.SendPropertyChanging();
					this._UID = value;
					this.SendPropertyChanged("UID");
					this.OnUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SlideTime", DbType="Int NOT NULL")]
		public int SlideTime
		{
			get
			{
				return this._SlideTime;
			}
			set
			{
				if ((this._SlideTime != value))
				{
					this.OnSlideTimeChanging(value);
					this.SendPropertyChanging();
					this._SlideTime = value;
					this.SendPropertyChanged("SlideTime");
					this.OnSlideTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RemovalDate", DbType="DateTime NOT NULL")]
		public System.DateTime RemovalDate
		{
			get
			{
				return this._RemovalDate;
			}
			set
			{
				if ((this._RemovalDate != value))
				{
					this.OnRemovalDateChanging(value);
					this.SendPropertyChanging();
					this._RemovalDate = value;
					this.SendPropertyChanged("RemovalDate");
					this.OnRemovalDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrganisationUID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> OrganisationUID
		{
			get
			{
				return this._OrganisationUID;
			}
			set
			{
				if ((this._OrganisationUID != value))
				{
					if (this._Organisation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrganisationUIDChanging(value);
					this.SendPropertyChanging();
					this._OrganisationUID = value;
					this.SendPropertyChanged("OrganisationUID");
					this.OnOrganisationUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DayInterval_DayIntervalPart", Storage="_DayIntervalParts", ThisKey="UID", OtherKey="DayIntervalUID")]
		public EntitySet<DayIntervalPart> DayIntervalParts
		{
			get
			{
				return this._DayIntervalParts;
			}
			set
			{
				this._DayIntervalParts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DayInterval_ScheduleDay", Storage="_ScheduleDays", ThisKey="UID", OtherKey="DayIntervalUID")]
		public EntitySet<ScheduleDay> ScheduleDays
		{
			get
			{
				return this._ScheduleDays;
			}
			set
			{
				this._ScheduleDays.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organisation_DayInterval", Storage="_Organisation", ThisKey="OrganisationUID", OtherKey="UID", IsForeignKey=true)]
		public Organisation Organisation
		{
			get
			{
				return this._Organisation.Entity;
			}
			set
			{
				Organisation previousValue = this._Organisation.Entity;
				if (((previousValue != value) 
							|| (this._Organisation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Organisation.Entity = null;
						previousValue.DayIntervals.Remove(this);
					}
					this._Organisation.Entity = value;
					if ((value != null))
					{
						value.DayIntervals.Add(this);
						this._OrganisationUID = value.UID;
					}
					else
					{
						this._OrganisationUID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Organisation");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DayIntervalParts(DayIntervalPart entity)
		{
			this.SendPropertyChanging();
			entity.DayInterval = this;
		}
		
		private void detach_DayIntervalParts(DayIntervalPart entity)
		{
			this.SendPropertyChanging();
			entity.DayInterval = null;
		}
		
		private void attach_ScheduleDays(ScheduleDay entity)
		{
			this.SendPropertyChanging();
			entity.DayInterval = this;
		}
		
		private void detach_ScheduleDays(ScheduleDay entity)
		{
			this.SendPropertyChanging();
			entity.DayInterval = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DayIntervalPart")]
	public partial class DayIntervalPart : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BeginTime;
		
		private int _EndTime;
		
		private System.Guid _UID;
		
		private System.Guid _DayIntervalUID;
		
		private EntityRef<DayInterval> _DayInterval;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBeginTimeChanging(int value);
    partial void OnBeginTimeChanged();
    partial void OnEndTimeChanging(int value);
    partial void OnEndTimeChanged();
    partial void OnUIDChanging(System.Guid value);
    partial void OnUIDChanged();
    partial void OnDayIntervalUIDChanging(System.Guid value);
    partial void OnDayIntervalUIDChanged();
    #endregion
		
		public DayIntervalPart()
		{
			this._DayInterval = default(EntityRef<DayInterval>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BeginTime", DbType="Int NOT NULL")]
		public int BeginTime
		{
			get
			{
				return this._BeginTime;
			}
			set
			{
				if ((this._BeginTime != value))
				{
					this.OnBeginTimeChanging(value);
					this.SendPropertyChanging();
					this._BeginTime = value;
					this.SendPropertyChanged("BeginTime");
					this.OnBeginTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndTime", DbType="Int NOT NULL")]
		public int EndTime
		{
			get
			{
				return this._EndTime;
			}
			set
			{
				if ((this._EndTime != value))
				{
					this.OnEndTimeChanging(value);
					this.SendPropertyChanging();
					this._EndTime = value;
					this.SendPropertyChanged("EndTime");
					this.OnEndTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UID
		{
			get
			{
				return this._UID;
			}
			set
			{
				if ((this._UID != value))
				{
					this.OnUIDChanging(value);
					this.SendPropertyChanging();
					this._UID = value;
					this.SendPropertyChanged("UID");
					this.OnUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DayIntervalUID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid DayIntervalUID
		{
			get
			{
				return this._DayIntervalUID;
			}
			set
			{
				if ((this._DayIntervalUID != value))
				{
					if (this._DayInterval.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDayIntervalUIDChanging(value);
					this.SendPropertyChanging();
					this._DayIntervalUID = value;
					this.SendPropertyChanged("DayIntervalUID");
					this.OnDayIntervalUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DayInterval_DayIntervalPart", Storage="_DayInterval", ThisKey="DayIntervalUID", OtherKey="UID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public DayInterval DayInterval
		{
			get
			{
				return this._DayInterval.Entity;
			}
			set
			{
				DayInterval previousValue = this._DayInterval.Entity;
				if (((previousValue != value) 
							|| (this._DayInterval.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DayInterval.Entity = null;
						previousValue.DayIntervalParts.Remove(this);
					}
					this._DayInterval.Entity = value;
					if ((value != null))
					{
						value.DayIntervalParts.Add(this);
						this._DayIntervalUID = value.UID;
					}
					else
					{
						this._DayIntervalUID = default(System.Guid);
					}
					this.SendPropertyChanged("DayInterval");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Department")]
	public partial class Department : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UID;
		
		private string _Name;
		
		private string _Description;
		
		private System.Nullable<System.Guid> _PhotoUID;
		
		private System.Nullable<System.Guid> _ParentDepartmentUID;
		
		private System.Nullable<System.Guid> _ContactEmployeeUID;
		
		private System.Nullable<System.Guid> _AttendantUID;
		
		private bool _IsDeleted;
		
		private System.DateTime _RemovalDate;
		
		private System.Nullable<System.Guid> _OrganisationUID;
		
		private System.Guid _ChiefUID;
		
		private string _Phone;
		
		private string _ExternalKey;
		
		private EntitySet<Department> _Departments;
		
		private EntitySet<Employee> _Employees;
		
		private EntityRef<Department> _Department1;
		
		private EntityRef<Organisation> _Organisation;
		
		private EntityRef<Photo> _Photo;
		
		private EntityRef<Employee> _Employee;
		
		private EntityRef<Employee> _Employee1;
		
		private EntityRef<Employee> _Employee2;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUIDChanging(System.Guid value);
    partial void OnUIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnPhotoUIDChanging(System.Nullable<System.Guid> value);
    partial void OnPhotoUIDChanged();
    partial void OnParentDepartmentUIDChanging(System.Nullable<System.Guid> value);
    partial void OnParentDepartmentUIDChanged();
    partial void OnContactEmployeeUIDChanging(System.Nullable<System.Guid> value);
    partial void OnContactEmployeeUIDChanged();
    partial void OnAttendantUIDChanging(System.Nullable<System.Guid> value);
    partial void OnAttendantUIDChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnRemovalDateChanging(System.DateTime value);
    partial void OnRemovalDateChanged();
    partial void OnOrganisationUIDChanging(System.Nullable<System.Guid> value);
    partial void OnOrganisationUIDChanged();
    partial void OnChiefUIDChanging(System.Guid value);
    partial void OnChiefUIDChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnExternalKeyChanging(string value);
    partial void OnExternalKeyChanged();
    #endregion
		
		public Department()
		{
			this._Departments = new EntitySet<Department>(new Action<Department>(this.attach_Departments), new Action<Department>(this.detach_Departments));
			this._Employees = new EntitySet<Employee>(new Action<Employee>(this.attach_Employees), new Action<Employee>(this.detach_Employees));
			this._Department1 = default(EntityRef<Department>);
			this._Organisation = default(EntityRef<Organisation>);
			this._Photo = default(EntityRef<Photo>);
			this._Employee = default(EntityRef<Employee>);
			this._Employee1 = default(EntityRef<Employee>);
			this._Employee2 = default(EntityRef<Employee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UID
		{
			get
			{
				return this._UID;
			}
			set
			{
				if ((this._UID != value))
				{
					this.OnUIDChanging(value);
					this.SendPropertyChanging();
					this._UID = value;
					this.SendPropertyChanged("UID");
					this.OnUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhotoUID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PhotoUID
		{
			get
			{
				return this._PhotoUID;
			}
			set
			{
				if ((this._PhotoUID != value))
				{
					if (this._Photo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPhotoUIDChanging(value);
					this.SendPropertyChanging();
					this._PhotoUID = value;
					this.SendPropertyChanged("PhotoUID");
					this.OnPhotoUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentDepartmentUID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ParentDepartmentUID
		{
			get
			{
				return this._ParentDepartmentUID;
			}
			set
			{
				if ((this._ParentDepartmentUID != value))
				{
					if (this._Department1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentDepartmentUIDChanging(value);
					this.SendPropertyChanging();
					this._ParentDepartmentUID = value;
					this.SendPropertyChanged("ParentDepartmentUID");
					this.OnParentDepartmentUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactEmployeeUID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ContactEmployeeUID
		{
			get
			{
				return this._ContactEmployeeUID;
			}
			set
			{
				if ((this._ContactEmployeeUID != value))
				{
					if (this._Employee1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnContactEmployeeUIDChanging(value);
					this.SendPropertyChanging();
					this._ContactEmployeeUID = value;
					this.SendPropertyChanged("ContactEmployeeUID");
					this.OnContactEmployeeUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttendantUID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> AttendantUID
		{
			get
			{
				return this._AttendantUID;
			}
			set
			{
				if ((this._AttendantUID != value))
				{
					if (this._Employee2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAttendantUIDChanging(value);
					this.SendPropertyChanging();
					this._AttendantUID = value;
					this.SendPropertyChanged("AttendantUID");
					this.OnAttendantUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RemovalDate", DbType="DateTime NOT NULL")]
		public System.DateTime RemovalDate
		{
			get
			{
				return this._RemovalDate;
			}
			set
			{
				if ((this._RemovalDate != value))
				{
					this.OnRemovalDateChanging(value);
					this.SendPropertyChanging();
					this._RemovalDate = value;
					this.SendPropertyChanged("RemovalDate");
					this.OnRemovalDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrganisationUID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> OrganisationUID
		{
			get
			{
				return this._OrganisationUID;
			}
			set
			{
				if ((this._OrganisationUID != value))
				{
					if (this._Organisation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrganisationUIDChanging(value);
					this.SendPropertyChanging();
					this._OrganisationUID = value;
					this.SendPropertyChanged("OrganisationUID");
					this.OnOrganisationUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChiefUID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ChiefUID
		{
			get
			{
				return this._ChiefUID;
			}
			set
			{
				if ((this._ChiefUID != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnChiefUIDChanging(value);
					this.SendPropertyChanging();
					this._ChiefUID = value;
					this.SendPropertyChanged("ChiefUID");
					this.OnChiefUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(50)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternalKey", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string ExternalKey
		{
			get
			{
				return this._ExternalKey;
			}
			set
			{
				if ((this._ExternalKey != value))
				{
					this.OnExternalKeyChanging(value);
					this.SendPropertyChanging();
					this._ExternalKey = value;
					this.SendPropertyChanged("ExternalKey");
					this.OnExternalKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Department", Storage="_Departments", ThisKey="UID", OtherKey="ParentDepartmentUID")]
		public EntitySet<Department> Departments
		{
			get
			{
				return this._Departments;
			}
			set
			{
				this._Departments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Employee", Storage="_Employees", ThisKey="UID", OtherKey="DepartmentUID")]
		public EntitySet<Employee> Employees
		{
			get
			{
				return this._Employees;
			}
			set
			{
				this._Employees.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Department", Storage="_Department1", ThisKey="ParentDepartmentUID", OtherKey="UID", IsForeignKey=true)]
		public Department Department1
		{
			get
			{
				return this._Department1.Entity;
			}
			set
			{
				Department previousValue = this._Department1.Entity;
				if (((previousValue != value) 
							|| (this._Department1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Department1.Entity = null;
						previousValue.Departments.Remove(this);
					}
					this._Department1.Entity = value;
					if ((value != null))
					{
						value.Departments.Add(this);
						this._ParentDepartmentUID = value.UID;
					}
					else
					{
						this._ParentDepartmentUID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Department1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organisation_Department", Storage="_Organisation", ThisKey="OrganisationUID", OtherKey="UID", IsForeignKey=true)]
		public Organisation Organisation
		{
			get
			{
				return this._Organisation.Entity;
			}
			set
			{
				Organisation previousValue = this._Organisation.Entity;
				if (((previousValue != value) 
							|| (this._Organisation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Organisation.Entity = null;
						previousValue.Departments.Remove(this);
					}
					this._Organisation.Entity = value;
					if ((value != null))
					{
						value.Departments.Add(this);
						this._OrganisationUID = value.UID;
					}
					else
					{
						this._OrganisationUID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Organisation");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Photo_Department", Storage="_Photo", ThisKey="PhotoUID", OtherKey="UID", IsForeignKey=true)]
		public Photo Photo
		{
			get
			{
				return this._Photo.Entity;
			}
			set
			{
				Photo previousValue = this._Photo.Entity;
				if (((previousValue != value) 
							|| (this._Photo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Photo.Entity = null;
						previousValue.Departments.Remove(this);
					}
					this._Photo.Entity = value;
					if ((value != null))
					{
						value.Departments.Add(this);
						this._PhotoUID = value.UID;
					}
					else
					{
						this._PhotoUID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Photo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Department", Storage="_Employee", ThisKey="ChiefUID", OtherKey="UID", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.Departments.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.Departments.Add(this);
						this._ChiefUID = value.UID;
					}
					else
					{
						this._ChiefUID = default(System.Guid);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Department1", Storage="_Employee1", ThisKey="ContactEmployeeUID", OtherKey="UID", IsForeignKey=true)]
		public Employee Employee1
		{
			get
			{
				return this._Employee1.Entity;
			}
			set
			{
				Employee previousValue = this._Employee1.Entity;
				if (((previousValue != value) 
							|| (this._Employee1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee1.Entity = null;
						previousValue.Departments1.Remove(this);
					}
					this._Employee1.Entity = value;
					if ((value != null))
					{
						value.Departments1.Add(this);
						this._ContactEmployeeUID = value.UID;
					}
					else
					{
						this._ContactEmployeeUID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Employee1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Department2", Storage="_Employee2", ThisKey="AttendantUID", OtherKey="UID", IsForeignKey=true)]
		public Employee Employee2
		{
			get
			{
				return this._Employee2.Entity;
			}
			set
			{
				Employee previousValue = this._Employee2.Entity;
				if (((previousValue != value) 
							|| (this._Employee2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee2.Entity = null;
						previousValue.Departments2.Remove(this);
					}
					this._Employee2.Entity = value;
					if ((value != null))
					{
						value.Departments2.Add(this);
						this._AttendantUID = value.UID;
					}
					else
					{
						this._AttendantUID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Employee2");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Departments(Department entity)
		{
			this.SendPropertyChanging();
			entity.Department1 = this;
		}
		
		private void detach_Departments(Department entity)
		{
			this.SendPropertyChanging();
			entity.Department1 = null;
		}
		
		private void attach_Employees(Employee entity)
		{
			this.SendPropertyChanging();
			entity.Department = this;
		}
		
		private void detach_Employees(Employee entity)
		{
			this.SendPropertyChanging();
			entity.Department = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GKCards")]
	public partial class GKCard : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UID;
		
		private string _IPAddress;
		
		private int _GKNo;
		
		private int _CardNo;
		
		private string _FIO;
		
		private bool _IsActive;
		
		private byte _UserType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUIDChanging(System.Guid value);
    partial void OnUIDChanged();
    partial void OnIPAddressChanging(string value);
    partial void OnIPAddressChanged();
    partial void OnGKNoChanging(int value);
    partial void OnGKNoChanged();
    partial void OnCardNoChanging(int value);
    partial void OnCardNoChanged();
    partial void OnFIOChanging(string value);
    partial void OnFIOChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnUserTypeChanging(byte value);
    partial void OnUserTypeChanged();
    #endregion
		
		public GKCard()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UID
		{
			get
			{
				return this._UID;
			}
			set
			{
				if ((this._UID != value))
				{
					this.OnUIDChanging(value);
					this.SendPropertyChanging();
					this._UID = value;
					this.SendPropertyChanged("UID");
					this.OnUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IPAddress", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string IPAddress
		{
			get
			{
				return this._IPAddress;
			}
			set
			{
				if ((this._IPAddress != value))
				{
					this.OnIPAddressChanging(value);
					this.SendPropertyChanging();
					this._IPAddress = value;
					this.SendPropertyChanged("IPAddress");
					this.OnIPAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GKNo", DbType="Int NOT NULL")]
		public int GKNo
		{
			get
			{
				return this._GKNo;
			}
			set
			{
				if ((this._GKNo != value))
				{
					this.OnGKNoChanging(value);
					this.SendPropertyChanging();
					this._GKNo = value;
					this.SendPropertyChanged("GKNo");
					this.OnGKNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CardNo", DbType="Int NOT NULL")]
		public int CardNo
		{
			get
			{
				return this._CardNo;
			}
			set
			{
				if ((this._CardNo != value))
				{
					this.OnCardNoChanging(value);
					this.SendPropertyChanging();
					this._CardNo = value;
					this.SendPropertyChanged("CardNo");
					this.OnCardNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FIO", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string FIO
		{
			get
			{
				return this._FIO;
			}
			set
			{
				if ((this._FIO != value))
				{
					this.OnFIOChanging(value);
					this.SendPropertyChanging();
					this._FIO = value;
					this.SendPropertyChanged("FIO");
					this.OnFIOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserType", DbType="TinyInt NOT NULL")]
		public byte UserType
		{
			get
			{
				return this._UserType;
			}
			set
			{
				if ((this._UserType != value))
				{
					this.OnUserTypeChanging(value);
					this.SendPropertyChanging();
					this._UserType = value;
					this.SendPropertyChanged("UserType");
					this.OnUserTypeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GKMetadata")]
	public partial class GKMetadata : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UID;
		
		private string _IPAddress;
		
		private string _SerialNo;
		
		private int _LastJournalNo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUIDChanging(System.Guid value);
    partial void OnUIDChanged();
    partial void OnIPAddressChanging(string value);
    partial void OnIPAddressChanged();
    partial void OnSerialNoChanging(string value);
    partial void OnSerialNoChanged();
    partial void OnLastJournalNoChanging(int value);
    partial void OnLastJournalNoChanged();
    #endregion
		
		public GKMetadata()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UID
		{
			get
			{
				return this._UID;
			}
			set
			{
				if ((this._UID != value))
				{
					this.OnUIDChanging(value);
					this.SendPropertyChanging();
					this._UID = value;
					this.SendPropertyChanged("UID");
					this.OnUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IPAddress", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string IPAddress
		{
			get
			{
				return this._IPAddress;
			}
			set
			{
				if ((this._IPAddress != value))
				{
					this.OnIPAddressChanging(value);
					this.SendPropertyChanging();
					this._IPAddress = value;
					this.SendPropertyChanged("IPAddress");
					this.OnIPAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SerialNo", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string SerialNo
		{
			get
			{
				return this._SerialNo;
			}
			set
			{
				if ((this._SerialNo != value))
				{
					this.OnSerialNoChanging(value);
					this.SendPropertyChanging();
					this._SerialNo = value;
					this.SendPropertyChanged("SerialNo");
					this.OnSerialNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastJournalNo", DbType="Int NOT NULL")]
		public int LastJournalNo
		{
			get
			{
				return this._LastJournalNo;
			}
			set
			{
				if ((this._LastJournalNo != value))
				{
					this.OnLastJournalNoChanging(value);
					this.SendPropertyChanging();
					this._LastJournalNo = value;
					this.SendPropertyChanged("LastJournalNo");
					this.OnLastJournalNoChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Holiday")]
	public partial class Holiday : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UID;
		
		private string _Name;
		
		private int _Type;
		
		private System.DateTime _Date;
		
		private System.Nullable<System.DateTime> _TransferDate;
		
		private int _Reduction;
		
		private bool _IsDeleted;
		
		private System.DateTime _RemovalDate;
		
		private System.Nullable<System.Guid> _OrganisationUID;
		
		private EntityRef<Organisation> _Organisation;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUIDChanging(System.Guid value);
    partial void OnUIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnTransferDateChanging(System.Nullable<System.DateTime> value);
    partial void OnTransferDateChanged();
    partial void OnReductionChanging(int value);
    partial void OnReductionChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnRemovalDateChanging(System.DateTime value);
    partial void OnRemovalDateChanged();
    partial void OnOrganisationUIDChanging(System.Nullable<System.Guid> value);
    partial void OnOrganisationUIDChanged();
    #endregion
		
		public Holiday()
		{
			this._Organisation = default(EntityRef<Organisation>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UID
		{
			get
			{
				return this._UID;
			}
			set
			{
				if ((this._UID != value))
				{
					this.OnUIDChanging(value);
					this.SendPropertyChanging();
					this._UID = value;
					this.SendPropertyChanged("UID");
					this.OnUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransferDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> TransferDate
		{
			get
			{
				return this._TransferDate;
			}
			set
			{
				if ((this._TransferDate != value))
				{
					this.OnTransferDateChanging(value);
					this.SendPropertyChanging();
					this._TransferDate = value;
					this.SendPropertyChanged("TransferDate");
					this.OnTransferDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reduction", DbType="Int NOT NULL")]
		public int Reduction
		{
			get
			{
				return this._Reduction;
			}
			set
			{
				if ((this._Reduction != value))
				{
					this.OnReductionChanging(value);
					this.SendPropertyChanging();
					this._Reduction = value;
					this.SendPropertyChanged("Reduction");
					this.OnReductionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RemovalDate", DbType="DateTime NOT NULL")]
		public System.DateTime RemovalDate
		{
			get
			{
				return this._RemovalDate;
			}
			set
			{
				if ((this._RemovalDate != value))
				{
					this.OnRemovalDateChanging(value);
					this.SendPropertyChanging();
					this._RemovalDate = value;
					this.SendPropertyChanged("RemovalDate");
					this.OnRemovalDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrganisationUID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> OrganisationUID
		{
			get
			{
				return this._OrganisationUID;
			}
			set
			{
				if ((this._OrganisationUID != value))
				{
					if (this._Organisation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrganisationUIDChanging(value);
					this.SendPropertyChanging();
					this._OrganisationUID = value;
					this.SendPropertyChanged("OrganisationUID");
					this.OnOrganisationUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organisation_Holiday", Storage="_Organisation", ThisKey="OrganisationUID", OtherKey="UID", IsForeignKey=true)]
		public Organisation Organisation
		{
			get
			{
				return this._Organisation.Entity;
			}
			set
			{
				Organisation previousValue = this._Organisation.Entity;
				if (((previousValue != value) 
							|| (this._Organisation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Organisation.Entity = null;
						previousValue.Holidays.Remove(this);
					}
					this._Organisation.Entity = value;
					if ((value != null))
					{
						value.Holidays.Add(this);
						this._OrganisationUID = value.UID;
					}
					else
					{
						this._OrganisationUID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Organisation");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.JournalMetadata")]
	public partial class JournalMetadata : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UID;
		
		private int _No;
		
		private System.DateTime _StartDateTime;
		
		private System.DateTime _EndDateTime;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUIDChanging(System.Guid value);
    partial void OnUIDChanged();
    partial void OnNoChanging(int value);
    partial void OnNoChanged();
    partial void OnStartDateTimeChanging(System.DateTime value);
    partial void OnStartDateTimeChanged();
    partial void OnEndDateTimeChanging(System.DateTime value);
    partial void OnEndDateTimeChanged();
    #endregion
		
		public JournalMetadata()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UID
		{
			get
			{
				return this._UID;
			}
			set
			{
				if ((this._UID != value))
				{
					this.OnUIDChanging(value);
					this.SendPropertyChanging();
					this._UID = value;
					this.SendPropertyChanged("UID");
					this.OnUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_No", DbType="Int NOT NULL")]
		public int No
		{
			get
			{
				return this._No;
			}
			set
			{
				if ((this._No != value))
				{
					this.OnNoChanging(value);
					this.SendPropertyChanging();
					this._No = value;
					this.SendPropertyChanged("No");
					this.OnNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime StartDateTime
		{
			get
			{
				return this._StartDateTime;
			}
			set
			{
				if ((this._StartDateTime != value))
				{
					this.OnStartDateTimeChanging(value);
					this.SendPropertyChanging();
					this._StartDateTime = value;
					this.SendPropertyChanged("StartDateTime");
					this.OnStartDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime EndDateTime
		{
			get
			{
				return this._EndDateTime;
			}
			set
			{
				if ((this._EndDateTime != value))
				{
					this.OnEndDateTimeChanging(value);
					this.SendPropertyChanging();
					this._EndDateTime = value;
					this.SendPropertyChanged("EndDateTime");
					this.OnEndDateTimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Organisation")]
	public partial class Organisation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UID;
		
		private string _Name;
		
		private string _Description;
		
		private System.Nullable<System.Guid> _PhotoUID;
		
		private bool _IsDeleted;
		
		private System.DateTime _RemovalDate;
		
		private System.Guid _ChiefUID;
		
		private System.Guid _HRChiefUID;
		
		private string _Phone;
		
		private string _ExternalKey;
		
		private EntitySet<AccessTemplate> _AccessTemplates;
		
		private EntitySet<AdditionalColumnType> _AdditionalColumnTypes;
		
		private EntitySet<DayInterval> _DayIntervals;
		
		private EntitySet<Department> _Departments;
		
		private EntitySet<Holiday> _Holidays;
		
		private EntitySet<OrganisationDoor> _OrganisationDoors;
		
		private EntitySet<OrganisationUser> _OrganisationUsers;
		
		private EntitySet<PassCardTemplate> _PassCardTemplates;
		
		private EntitySet<Position> _Positions;
		
		private EntitySet<Schedule> _Schedules;
		
		private EntitySet<ScheduleScheme> _ScheduleSchemes;
		
		private EntitySet<TimeTrackDocumentType> _TimeTrackDocumentTypes;
		
		private EntitySet<NightSetting> _NightSettings;
		
		private EntitySet<Employee> _Employees;
		
		private EntityRef<Photo> _Photo;
		
		private EntityRef<Employee> _Employee;
		
		private EntityRef<Employee> _Employee1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUIDChanging(System.Guid value);
    partial void OnUIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnPhotoUIDChanging(System.Nullable<System.Guid> value);
    partial void OnPhotoUIDChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnRemovalDateChanging(System.DateTime value);
    partial void OnRemovalDateChanged();
    partial void OnChiefUIDChanging(System.Guid value);
    partial void OnChiefUIDChanged();
    partial void OnHRChiefUIDChanging(System.Guid value);
    partial void OnHRChiefUIDChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnExternalKeyChanging(string value);
    partial void OnExternalKeyChanged();
    #endregion
		
		public Organisation()
		{
			this._AccessTemplates = new EntitySet<AccessTemplate>(new Action<AccessTemplate>(this.attach_AccessTemplates), new Action<AccessTemplate>(this.detach_AccessTemplates));
			this._AdditionalColumnTypes = new EntitySet<AdditionalColumnType>(new Action<AdditionalColumnType>(this.attach_AdditionalColumnTypes), new Action<AdditionalColumnType>(this.detach_AdditionalColumnTypes));
			this._DayIntervals = new EntitySet<DayInterval>(new Action<DayInterval>(this.attach_DayIntervals), new Action<DayInterval>(this.detach_DayIntervals));
			this._Departments = new EntitySet<Department>(new Action<Department>(this.attach_Departments), new Action<Department>(this.detach_Departments));
			this._Holidays = new EntitySet<Holiday>(new Action<Holiday>(this.attach_Holidays), new Action<Holiday>(this.detach_Holidays));
			this._OrganisationDoors = new EntitySet<OrganisationDoor>(new Action<OrganisationDoor>(this.attach_OrganisationDoors), new Action<OrganisationDoor>(this.detach_OrganisationDoors));
			this._OrganisationUsers = new EntitySet<OrganisationUser>(new Action<OrganisationUser>(this.attach_OrganisationUsers), new Action<OrganisationUser>(this.detach_OrganisationUsers));
			this._PassCardTemplates = new EntitySet<PassCardTemplate>(new Action<PassCardTemplate>(this.attach_PassCardTemplates), new Action<PassCardTemplate>(this.detach_PassCardTemplates));
			this._Positions = new EntitySet<Position>(new Action<Position>(this.attach_Positions), new Action<Position>(this.detach_Positions));
			this._Schedules = new EntitySet<Schedule>(new Action<Schedule>(this.attach_Schedules), new Action<Schedule>(this.detach_Schedules));
			this._ScheduleSchemes = new EntitySet<ScheduleScheme>(new Action<ScheduleScheme>(this.attach_ScheduleSchemes), new Action<ScheduleScheme>(this.detach_ScheduleSchemes));
			this._TimeTrackDocumentTypes = new EntitySet<TimeTrackDocumentType>(new Action<TimeTrackDocumentType>(this.attach_TimeTrackDocumentTypes), new Action<TimeTrackDocumentType>(this.detach_TimeTrackDocumentTypes));
			this._NightSettings = new EntitySet<NightSetting>(new Action<NightSetting>(this.attach_NightSettings), new Action<NightSetting>(this.detach_NightSettings));
			this._Employees = new EntitySet<Employee>(new Action<Employee>(this.attach_Employees), new Action<Employee>(this.detach_Employees));
			this._Photo = default(EntityRef<Photo>);
			this._Employee = default(EntityRef<Employee>);
			this._Employee1 = default(EntityRef<Employee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UID
		{
			get
			{
				return this._UID;
			}
			set
			{
				if ((this._UID != value))
				{
					this.OnUIDChanging(value);
					this.SendPropertyChanging();
					this._UID = value;
					this.SendPropertyChanged("UID");
					this.OnUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhotoUID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PhotoUID
		{
			get
			{
				return this._PhotoUID;
			}
			set
			{
				if ((this._PhotoUID != value))
				{
					if (this._Photo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPhotoUIDChanging(value);
					this.SendPropertyChanging();
					this._PhotoUID = value;
					this.SendPropertyChanged("PhotoUID");
					this.OnPhotoUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RemovalDate", DbType="DateTime NOT NULL")]
		public System.DateTime RemovalDate
		{
			get
			{
				return this._RemovalDate;
			}
			set
			{
				if ((this._RemovalDate != value))
				{
					this.OnRemovalDateChanging(value);
					this.SendPropertyChanging();
					this._RemovalDate = value;
					this.SendPropertyChanged("RemovalDate");
					this.OnRemovalDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChiefUID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ChiefUID
		{
			get
			{
				return this._ChiefUID;
			}
			set
			{
				if ((this._ChiefUID != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnChiefUIDChanging(value);
					this.SendPropertyChanging();
					this._ChiefUID = value;
					this.SendPropertyChanged("ChiefUID");
					this.OnChiefUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HRChiefUID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid HRChiefUID
		{
			get
			{
				return this._HRChiefUID;
			}
			set
			{
				if ((this._HRChiefUID != value))
				{
					if (this._Employee1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHRChiefUIDChanging(value);
					this.SendPropertyChanging();
					this._HRChiefUID = value;
					this.SendPropertyChanged("HRChiefUID");
					this.OnHRChiefUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(50)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternalKey", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string ExternalKey
		{
			get
			{
				return this._ExternalKey;
			}
			set
			{
				if ((this._ExternalKey != value))
				{
					this.OnExternalKeyChanging(value);
					this.SendPropertyChanging();
					this._ExternalKey = value;
					this.SendPropertyChanged("ExternalKey");
					this.OnExternalKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organisation_AccessTemplate", Storage="_AccessTemplates", ThisKey="UID", OtherKey="OrganisationUID")]
		public EntitySet<AccessTemplate> AccessTemplates
		{
			get
			{
				return this._AccessTemplates;
			}
			set
			{
				this._AccessTemplates.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organisation_AdditionalColumnType", Storage="_AdditionalColumnTypes", ThisKey="UID", OtherKey="OrganisationUID")]
		public EntitySet<AdditionalColumnType> AdditionalColumnTypes
		{
			get
			{
				return this._AdditionalColumnTypes;
			}
			set
			{
				this._AdditionalColumnTypes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organisation_DayInterval", Storage="_DayIntervals", ThisKey="UID", OtherKey="OrganisationUID")]
		public EntitySet<DayInterval> DayIntervals
		{
			get
			{
				return this._DayIntervals;
			}
			set
			{
				this._DayIntervals.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organisation_Department", Storage="_Departments", ThisKey="UID", OtherKey="OrganisationUID")]
		public EntitySet<Department> Departments
		{
			get
			{
				return this._Departments;
			}
			set
			{
				this._Departments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organisation_Holiday", Storage="_Holidays", ThisKey="UID", OtherKey="OrganisationUID")]
		public EntitySet<Holiday> Holidays
		{
			get
			{
				return this._Holidays;
			}
			set
			{
				this._Holidays.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organisation_OrganisationDoor", Storage="_OrganisationDoors", ThisKey="UID", OtherKey="OrganisationUID")]
		public EntitySet<OrganisationDoor> OrganisationDoors
		{
			get
			{
				return this._OrganisationDoors;
			}
			set
			{
				this._OrganisationDoors.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organisation_OrganisationUser", Storage="_OrganisationUsers", ThisKey="UID", OtherKey="OrganisationUID")]
		public EntitySet<OrganisationUser> OrganisationUsers
		{
			get
			{
				return this._OrganisationUsers;
			}
			set
			{
				this._OrganisationUsers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organisation_PassCardTemplate", Storage="_PassCardTemplates", ThisKey="UID", OtherKey="OrganisationUID")]
		public EntitySet<PassCardTemplate> PassCardTemplates
		{
			get
			{
				return this._PassCardTemplates;
			}
			set
			{
				this._PassCardTemplates.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organisation_Position", Storage="_Positions", ThisKey="UID", OtherKey="OrganisationUID")]
		public EntitySet<Position> Positions
		{
			get
			{
				return this._Positions;
			}
			set
			{
				this._Positions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organisation_Schedule", Storage="_Schedules", ThisKey="UID", OtherKey="OrganisationUID")]
		public EntitySet<Schedule> Schedules
		{
			get
			{
				return this._Schedules;
			}
			set
			{
				this._Schedules.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organisation_ScheduleScheme", Storage="_ScheduleSchemes", ThisKey="UID", OtherKey="OrganisationUID")]
		public EntitySet<ScheduleScheme> ScheduleSchemes
		{
			get
			{
				return this._ScheduleSchemes;
			}
			set
			{
				this._ScheduleSchemes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organisation_TimeTrackDocumentType", Storage="_TimeTrackDocumentTypes", ThisKey="UID", OtherKey="OrganisationUID")]
		public EntitySet<TimeTrackDocumentType> TimeTrackDocumentTypes
		{
			get
			{
				return this._TimeTrackDocumentTypes;
			}
			set
			{
				this._TimeTrackDocumentTypes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organisation_NightSetting", Storage="_NightSettings", ThisKey="UID", OtherKey="OrganisationUID")]
		public EntitySet<NightSetting> NightSettings
		{
			get
			{
				return this._NightSettings;
			}
			set
			{
				this._NightSettings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organisation_Employee", Storage="_Employees", ThisKey="UID", OtherKey="OrganisationUID")]
		public EntitySet<Employee> Employees
		{
			get
			{
				return this._Employees;
			}
			set
			{
				this._Employees.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Photo_Organisation", Storage="_Photo", ThisKey="PhotoUID", OtherKey="UID", IsForeignKey=true)]
		public Photo Photo
		{
			get
			{
				return this._Photo.Entity;
			}
			set
			{
				Photo previousValue = this._Photo.Entity;
				if (((previousValue != value) 
							|| (this._Photo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Photo.Entity = null;
						previousValue.Organisations.Remove(this);
					}
					this._Photo.Entity = value;
					if ((value != null))
					{
						value.Organisations.Add(this);
						this._PhotoUID = value.UID;
					}
					else
					{
						this._PhotoUID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Photo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Organisation", Storage="_Employee", ThisKey="ChiefUID", OtherKey="UID", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.Organisations.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.Organisations.Add(this);
						this._ChiefUID = value.UID;
					}
					else
					{
						this._ChiefUID = default(System.Guid);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Organisation1", Storage="_Employee1", ThisKey="HRChiefUID", OtherKey="UID", IsForeignKey=true)]
		public Employee Employee1
		{
			get
			{
				return this._Employee1.Entity;
			}
			set
			{
				Employee previousValue = this._Employee1.Entity;
				if (((previousValue != value) 
							|| (this._Employee1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee1.Entity = null;
						previousValue.Organisations1.Remove(this);
					}
					this._Employee1.Entity = value;
					if ((value != null))
					{
						value.Organisations1.Add(this);
						this._HRChiefUID = value.UID;
					}
					else
					{
						this._HRChiefUID = default(System.Guid);
					}
					this.SendPropertyChanged("Employee1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AccessTemplates(AccessTemplate entity)
		{
			this.SendPropertyChanging();
			entity.Organisation = this;
		}
		
		private void detach_AccessTemplates(AccessTemplate entity)
		{
			this.SendPropertyChanging();
			entity.Organisation = null;
		}
		
		private void attach_AdditionalColumnTypes(AdditionalColumnType entity)
		{
			this.SendPropertyChanging();
			entity.Organisation = this;
		}
		
		private void detach_AdditionalColumnTypes(AdditionalColumnType entity)
		{
			this.SendPropertyChanging();
			entity.Organisation = null;
		}
		
		private void attach_DayIntervals(DayInterval entity)
		{
			this.SendPropertyChanging();
			entity.Organisation = this;
		}
		
		private void detach_DayIntervals(DayInterval entity)
		{
			this.SendPropertyChanging();
			entity.Organisation = null;
		}
		
		private void attach_Departments(Department entity)
		{
			this.SendPropertyChanging();
			entity.Organisation = this;
		}
		
		private void detach_Departments(Department entity)
		{
			this.SendPropertyChanging();
			entity.Organisation = null;
		}
		
		private void attach_Holidays(Holiday entity)
		{
			this.SendPropertyChanging();
			entity.Organisation = this;
		}
		
		private void detach_Holidays(Holiday entity)
		{
			this.SendPropertyChanging();
			entity.Organisation = null;
		}
		
		private void attach_OrganisationDoors(OrganisationDoor entity)
		{
			this.SendPropertyChanging();
			entity.Organisation = this;
		}
		
		private void detach_OrganisationDoors(OrganisationDoor entity)
		{
			this.SendPropertyChanging();
			entity.Organisation = null;
		}
		
		private void attach_OrganisationUsers(OrganisationUser entity)
		{
			this.SendPropertyChanging();
			entity.Organisation = this;
		}
		
		private void detach_OrganisationUsers(OrganisationUser entity)
		{
			this.SendPropertyChanging();
			entity.Organisation = null;
		}
		
		private void attach_PassCardTemplates(PassCardTemplate entity)
		{
			this.SendPropertyChanging();
			entity.Organisation = this;
		}
		
		private void detach_PassCardTemplates(PassCardTemplate entity)
		{
			this.SendPropertyChanging();
			entity.Organisation = null;
		}
		
		private void attach_Positions(Position entity)
		{
			this.SendPropertyChanging();
			entity.Organisation = this;
		}
		
		private void detach_Positions(Position entity)
		{
			this.SendPropertyChanging();
			entity.Organisation = null;
		}
		
		private void attach_Schedules(Schedule entity)
		{
			this.SendPropertyChanging();
			entity.Organisation = this;
		}
		
		private void detach_Schedules(Schedule entity)
		{
			this.SendPropertyChanging();
			entity.Organisation = null;
		}
		
		private void attach_ScheduleSchemes(ScheduleScheme entity)
		{
			this.SendPropertyChanging();
			entity.Organisation = this;
		}
		
		private void detach_ScheduleSchemes(ScheduleScheme entity)
		{
			this.SendPropertyChanging();
			entity.Organisation = null;
		}
		
		private void attach_TimeTrackDocumentTypes(TimeTrackDocumentType entity)
		{
			this.SendPropertyChanging();
			entity.Organisation = this;
		}
		
		private void detach_TimeTrackDocumentTypes(TimeTrackDocumentType entity)
		{
			this.SendPropertyChanging();
			entity.Organisation = null;
		}
		
		private void attach_NightSettings(NightSetting entity)
		{
			this.SendPropertyChanging();
			entity.Organisation = this;
		}
		
		private void detach_NightSettings(NightSetting entity)
		{
			this.SendPropertyChanging();
			entity.Organisation = null;
		}
		
		private void attach_Employees(Employee entity)
		{
			this.SendPropertyChanging();
			entity.Organisation = this;
		}
		
		private void detach_Employees(Employee entity)
		{
			this.SendPropertyChanging();
			entity.Organisation = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrganisationDoor")]
	public partial class OrganisationDoor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UID;
		
		private System.Guid _DoorUID;
		
		private System.Guid _OrganisationUID;
		
		private EntityRef<Organisation> _Organisation;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUIDChanging(System.Guid value);
    partial void OnUIDChanged();
    partial void OnDoorUIDChanging(System.Guid value);
    partial void OnDoorUIDChanged();
    partial void OnOrganisationUIDChanging(System.Guid value);
    partial void OnOrganisationUIDChanged();
    #endregion
		
		public OrganisationDoor()
		{
			this._Organisation = default(EntityRef<Organisation>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UID
		{
			get
			{
				return this._UID;
			}
			set
			{
				if ((this._UID != value))
				{
					this.OnUIDChanging(value);
					this.SendPropertyChanging();
					this._UID = value;
					this.SendPropertyChanged("UID");
					this.OnUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoorUID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid DoorUID
		{
			get
			{
				return this._DoorUID;
			}
			set
			{
				if ((this._DoorUID != value))
				{
					this.OnDoorUIDChanging(value);
					this.SendPropertyChanging();
					this._DoorUID = value;
					this.SendPropertyChanged("DoorUID");
					this.OnDoorUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrganisationUID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid OrganisationUID
		{
			get
			{
				return this._OrganisationUID;
			}
			set
			{
				if ((this._OrganisationUID != value))
				{
					if (this._Organisation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrganisationUIDChanging(value);
					this.SendPropertyChanging();
					this._OrganisationUID = value;
					this.SendPropertyChanged("OrganisationUID");
					this.OnOrganisationUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organisation_OrganisationDoor", Storage="_Organisation", ThisKey="OrganisationUID", OtherKey="UID", IsForeignKey=true)]
		public Organisation Organisation
		{
			get
			{
				return this._Organisation.Entity;
			}
			set
			{
				Organisation previousValue = this._Organisation.Entity;
				if (((previousValue != value) 
							|| (this._Organisation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Organisation.Entity = null;
						previousValue.OrganisationDoors.Remove(this);
					}
					this._Organisation.Entity = value;
					if ((value != null))
					{
						value.OrganisationDoors.Add(this);
						this._OrganisationUID = value.UID;
					}
					else
					{
						this._OrganisationUID = default(System.Guid);
					}
					this.SendPropertyChanged("Organisation");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrganisationUser")]
	public partial class OrganisationUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UID;
		
		private System.Guid _UserUID;
		
		private System.Guid _OrganisationUID;
		
		private EntityRef<Organisation> _Organisation;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUIDChanging(System.Guid value);
    partial void OnUIDChanged();
    partial void OnUserUIDChanging(System.Guid value);
    partial void OnUserUIDChanged();
    partial void OnOrganisationUIDChanging(System.Guid value);
    partial void OnOrganisationUIDChanged();
    #endregion
		
		public OrganisationUser()
		{
			this._Organisation = default(EntityRef<Organisation>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UID
		{
			get
			{
				return this._UID;
			}
			set
			{
				if ((this._UID != value))
				{
					this.OnUIDChanging(value);
					this.SendPropertyChanging();
					this._UID = value;
					this.SendPropertyChanged("UID");
					this.OnUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserUID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UserUID
		{
			get
			{
				return this._UserUID;
			}
			set
			{
				if ((this._UserUID != value))
				{
					this.OnUserUIDChanging(value);
					this.SendPropertyChanging();
					this._UserUID = value;
					this.SendPropertyChanged("UserUID");
					this.OnUserUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrganisationUID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid OrganisationUID
		{
			get
			{
				return this._OrganisationUID;
			}
			set
			{
				if ((this._OrganisationUID != value))
				{
					if (this._Organisation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrganisationUIDChanging(value);
					this.SendPropertyChanging();
					this._OrganisationUID = value;
					this.SendPropertyChanged("OrganisationUID");
					this.OnOrganisationUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organisation_OrganisationUser", Storage="_Organisation", ThisKey="OrganisationUID", OtherKey="UID", IsForeignKey=true)]
		public Organisation Organisation
		{
			get
			{
				return this._Organisation.Entity;
			}
			set
			{
				Organisation previousValue = this._Organisation.Entity;
				if (((previousValue != value) 
							|| (this._Organisation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Organisation.Entity = null;
						previousValue.OrganisationUsers.Remove(this);
					}
					this._Organisation.Entity = value;
					if ((value != null))
					{
						value.OrganisationUsers.Add(this);
						this._OrganisationUID = value.UID;
					}
					else
					{
						this._OrganisationUID = default(System.Guid);
					}
					this.SendPropertyChanged("Organisation");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PassCardTemplate")]
	public partial class PassCardTemplate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UID;
		
		private string _Name;
		
		private string _Description;
		
		private bool _IsDeleted;
		
		private System.DateTime _RemovalDate;
		
		private System.Nullable<System.Guid> _OrganisationUID;
		
		private System.Data.Linq.Binary _Data;
		
		private EntityRef<Organisation> _Organisation;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUIDChanging(System.Guid value);
    partial void OnUIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnRemovalDateChanging(System.DateTime value);
    partial void OnRemovalDateChanged();
    partial void OnOrganisationUIDChanging(System.Nullable<System.Guid> value);
    partial void OnOrganisationUIDChanged();
    partial void OnDataChanging(System.Data.Linq.Binary value);
    partial void OnDataChanged();
    #endregion
		
		public PassCardTemplate()
		{
			this._Organisation = default(EntityRef<Organisation>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UID
		{
			get
			{
				return this._UID;
			}
			set
			{
				if ((this._UID != value))
				{
					this.OnUIDChanging(value);
					this.SendPropertyChanging();
					this._UID = value;
					this.SendPropertyChanged("UID");
					this.OnUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RemovalDate", DbType="DateTime NOT NULL")]
		public System.DateTime RemovalDate
		{
			get
			{
				return this._RemovalDate;
			}
			set
			{
				if ((this._RemovalDate != value))
				{
					this.OnRemovalDateChanging(value);
					this.SendPropertyChanging();
					this._RemovalDate = value;
					this.SendPropertyChanged("RemovalDate");
					this.OnRemovalDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrganisationUID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> OrganisationUID
		{
			get
			{
				return this._OrganisationUID;
			}
			set
			{
				if ((this._OrganisationUID != value))
				{
					if (this._Organisation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrganisationUIDChanging(value);
					this.SendPropertyChanging();
					this._OrganisationUID = value;
					this.SendPropertyChanged("OrganisationUID");
					this.OnOrganisationUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Data
		{
			get
			{
				return this._Data;
			}
			set
			{
				if ((this._Data != value))
				{
					this.OnDataChanging(value);
					this.SendPropertyChanging();
					this._Data = value;
					this.SendPropertyChanged("Data");
					this.OnDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organisation_PassCardTemplate", Storage="_Organisation", ThisKey="OrganisationUID", OtherKey="UID", IsForeignKey=true)]
		public Organisation Organisation
		{
			get
			{
				return this._Organisation.Entity;
			}
			set
			{
				Organisation previousValue = this._Organisation.Entity;
				if (((previousValue != value) 
							|| (this._Organisation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Organisation.Entity = null;
						previousValue.PassCardTemplates.Remove(this);
					}
					this._Organisation.Entity = value;
					if ((value != null))
					{
						value.PassCardTemplates.Add(this);
						this._OrganisationUID = value.UID;
					}
					else
					{
						this._OrganisationUID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Organisation");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PassJournalMetadata")]
	public partial class PassJournalMetadata : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UID;
		
		private int _No;
		
		private System.DateTime _StartDateTime;
		
		private System.DateTime _EndDateTime;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUIDChanging(System.Guid value);
    partial void OnUIDChanged();
    partial void OnNoChanging(int value);
    partial void OnNoChanged();
    partial void OnStartDateTimeChanging(System.DateTime value);
    partial void OnStartDateTimeChanged();
    partial void OnEndDateTimeChanging(System.DateTime value);
    partial void OnEndDateTimeChanged();
    #endregion
		
		public PassJournalMetadata()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UID
		{
			get
			{
				return this._UID;
			}
			set
			{
				if ((this._UID != value))
				{
					this.OnUIDChanging(value);
					this.SendPropertyChanging();
					this._UID = value;
					this.SendPropertyChanged("UID");
					this.OnUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_No", DbType="Int NOT NULL")]
		public int No
		{
			get
			{
				return this._No;
			}
			set
			{
				if ((this._No != value))
				{
					this.OnNoChanging(value);
					this.SendPropertyChanging();
					this._No = value;
					this.SendPropertyChanged("No");
					this.OnNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime StartDateTime
		{
			get
			{
				return this._StartDateTime;
			}
			set
			{
				if ((this._StartDateTime != value))
				{
					this.OnStartDateTimeChanging(value);
					this.SendPropertyChanging();
					this._StartDateTime = value;
					this.SendPropertyChanged("StartDateTime");
					this.OnStartDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime EndDateTime
		{
			get
			{
				return this._EndDateTime;
			}
			set
			{
				if ((this._EndDateTime != value))
				{
					this.OnEndDateTimeChanging(value);
					this.SendPropertyChanging();
					this._EndDateTime = value;
					this.SendPropertyChanged("EndDateTime");
					this.OnEndDateTimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Patches")]
	public partial class Patch
	{
		
		private string _Id;
		
		public Patch()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PendingCard")]
	public partial class PendingCard : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UID;
		
		private System.Guid _CardUID;
		
		private System.Guid _ControllerUID;
		
		private int _Action;
		
		private EntityRef<Card> _Card;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUIDChanging(System.Guid value);
    partial void OnUIDChanged();
    partial void OnCardUIDChanging(System.Guid value);
    partial void OnCardUIDChanged();
    partial void OnControllerUIDChanging(System.Guid value);
    partial void OnControllerUIDChanged();
    partial void OnActionChanging(int value);
    partial void OnActionChanged();
    #endregion
		
		public PendingCard()
		{
			this._Card = default(EntityRef<Card>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UID
		{
			get
			{
				return this._UID;
			}
			set
			{
				if ((this._UID != value))
				{
					this.OnUIDChanging(value);
					this.SendPropertyChanging();
					this._UID = value;
					this.SendPropertyChanged("UID");
					this.OnUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CardUID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid CardUID
		{
			get
			{
				return this._CardUID;
			}
			set
			{
				if ((this._CardUID != value))
				{
					if (this._Card.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCardUIDChanging(value);
					this.SendPropertyChanging();
					this._CardUID = value;
					this.SendPropertyChanged("CardUID");
					this.OnCardUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControllerUID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ControllerUID
		{
			get
			{
				return this._ControllerUID;
			}
			set
			{
				if ((this._ControllerUID != value))
				{
					this.OnControllerUIDChanging(value);
					this.SendPropertyChanging();
					this._ControllerUID = value;
					this.SendPropertyChanged("ControllerUID");
					this.OnControllerUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Action", DbType="Int NOT NULL")]
		public int Action
		{
			get
			{
				return this._Action;
			}
			set
			{
				if ((this._Action != value))
				{
					this.OnActionChanging(value);
					this.SendPropertyChanging();
					this._Action = value;
					this.SendPropertyChanged("Action");
					this.OnActionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Card_PendingCard", Storage="_Card", ThisKey="CardUID", OtherKey="UID", IsForeignKey=true)]
		public Card Card
		{
			get
			{
				return this._Card.Entity;
			}
			set
			{
				Card previousValue = this._Card.Entity;
				if (((previousValue != value) 
							|| (this._Card.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Card.Entity = null;
						previousValue.PendingCards.Remove(this);
					}
					this._Card.Entity = value;
					if ((value != null))
					{
						value.PendingCards.Add(this);
						this._CardUID = value.UID;
					}
					else
					{
						this._CardUID = default(System.Guid);
					}
					this.SendPropertyChanged("Card");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Photo")]
	public partial class Photo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UID;
		
		private System.Data.Linq.Binary _Data;
		
		private EntitySet<AdditionalColumn> _AdditionalColumns;
		
		private EntitySet<Department> _Departments;
		
		private EntitySet<Organisation> _Organisations;
		
		private EntitySet<Position> _Positions;
		
		private EntitySet<Employee> _Employees;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUIDChanging(System.Guid value);
    partial void OnUIDChanged();
    partial void OnDataChanging(System.Data.Linq.Binary value);
    partial void OnDataChanged();
    #endregion
		
		public Photo()
		{
			this._AdditionalColumns = new EntitySet<AdditionalColumn>(new Action<AdditionalColumn>(this.attach_AdditionalColumns), new Action<AdditionalColumn>(this.detach_AdditionalColumns));
			this._Departments = new EntitySet<Department>(new Action<Department>(this.attach_Departments), new Action<Department>(this.detach_Departments));
			this._Organisations = new EntitySet<Organisation>(new Action<Organisation>(this.attach_Organisations), new Action<Organisation>(this.detach_Organisations));
			this._Positions = new EntitySet<Position>(new Action<Position>(this.attach_Positions), new Action<Position>(this.detach_Positions));
			this._Employees = new EntitySet<Employee>(new Action<Employee>(this.attach_Employees), new Action<Employee>(this.detach_Employees));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UID
		{
			get
			{
				return this._UID;
			}
			set
			{
				if ((this._UID != value))
				{
					this.OnUIDChanging(value);
					this.SendPropertyChanging();
					this._UID = value;
					this.SendPropertyChanged("UID");
					this.OnUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Data
		{
			get
			{
				return this._Data;
			}
			set
			{
				if ((this._Data != value))
				{
					this.OnDataChanging(value);
					this.SendPropertyChanging();
					this._Data = value;
					this.SendPropertyChanged("Data");
					this.OnDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Photo_AdditionalColumn", Storage="_AdditionalColumns", ThisKey="UID", OtherKey="PhotoUID")]
		public EntitySet<AdditionalColumn> AdditionalColumns
		{
			get
			{
				return this._AdditionalColumns;
			}
			set
			{
				this._AdditionalColumns.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Photo_Department", Storage="_Departments", ThisKey="UID", OtherKey="PhotoUID")]
		public EntitySet<Department> Departments
		{
			get
			{
				return this._Departments;
			}
			set
			{
				this._Departments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Photo_Organisation", Storage="_Organisations", ThisKey="UID", OtherKey="PhotoUID")]
		public EntitySet<Organisation> Organisations
		{
			get
			{
				return this._Organisations;
			}
			set
			{
				this._Organisations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Photo_Position", Storage="_Positions", ThisKey="UID", OtherKey="PhotoUID")]
		public EntitySet<Position> Positions
		{
			get
			{
				return this._Positions;
			}
			set
			{
				this._Positions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Photo_Employee", Storage="_Employees", ThisKey="UID", OtherKey="PhotoUID")]
		public EntitySet<Employee> Employees
		{
			get
			{
				return this._Employees;
			}
			set
			{
				this._Employees.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AdditionalColumns(AdditionalColumn entity)
		{
			this.SendPropertyChanging();
			entity.Photo = this;
		}
		
		private void detach_AdditionalColumns(AdditionalColumn entity)
		{
			this.SendPropertyChanging();
			entity.Photo = null;
		}
		
		private void attach_Departments(Department entity)
		{
			this.SendPropertyChanging();
			entity.Photo = this;
		}
		
		private void detach_Departments(Department entity)
		{
			this.SendPropertyChanging();
			entity.Photo = null;
		}
		
		private void attach_Organisations(Organisation entity)
		{
			this.SendPropertyChanging();
			entity.Photo = this;
		}
		
		private void detach_Organisations(Organisation entity)
		{
			this.SendPropertyChanging();
			entity.Photo = null;
		}
		
		private void attach_Positions(Position entity)
		{
			this.SendPropertyChanging();
			entity.Photo = this;
		}
		
		private void detach_Positions(Position entity)
		{
			this.SendPropertyChanging();
			entity.Photo = null;
		}
		
		private void attach_Employees(Employee entity)
		{
			this.SendPropertyChanging();
			entity.Photo = this;
		}
		
		private void detach_Employees(Employee entity)
		{
			this.SendPropertyChanging();
			entity.Photo = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Position")]
	public partial class Position : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UID;
		
		private string _Name;
		
		private string _Description;
		
		private bool _IsDeleted;
		
		private System.DateTime _RemovalDate;
		
		private System.Nullable<System.Guid> _OrganisationUID;
		
		private System.Nullable<System.Guid> _PhotoUID;
		
		private string _ExternalKey;
		
		private EntitySet<Employee> _Employees;
		
		private EntityRef<Organisation> _Organisation;
		
		private EntityRef<Photo> _Photo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUIDChanging(System.Guid value);
    partial void OnUIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnRemovalDateChanging(System.DateTime value);
    partial void OnRemovalDateChanged();
    partial void OnOrganisationUIDChanging(System.Nullable<System.Guid> value);
    partial void OnOrganisationUIDChanged();
    partial void OnPhotoUIDChanging(System.Nullable<System.Guid> value);
    partial void OnPhotoUIDChanged();
    partial void OnExternalKeyChanging(string value);
    partial void OnExternalKeyChanged();
    #endregion
		
		public Position()
		{
			this._Employees = new EntitySet<Employee>(new Action<Employee>(this.attach_Employees), new Action<Employee>(this.detach_Employees));
			this._Organisation = default(EntityRef<Organisation>);
			this._Photo = default(EntityRef<Photo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UID
		{
			get
			{
				return this._UID;
			}
			set
			{
				if ((this._UID != value))
				{
					this.OnUIDChanging(value);
					this.SendPropertyChanging();
					this._UID = value;
					this.SendPropertyChanged("UID");
					this.OnUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RemovalDate", DbType="DateTime NOT NULL")]
		public System.DateTime RemovalDate
		{
			get
			{
				return this._RemovalDate;
			}
			set
			{
				if ((this._RemovalDate != value))
				{
					this.OnRemovalDateChanging(value);
					this.SendPropertyChanging();
					this._RemovalDate = value;
					this.SendPropertyChanged("RemovalDate");
					this.OnRemovalDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrganisationUID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> OrganisationUID
		{
			get
			{
				return this._OrganisationUID;
			}
			set
			{
				if ((this._OrganisationUID != value))
				{
					if (this._Organisation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrganisationUIDChanging(value);
					this.SendPropertyChanging();
					this._OrganisationUID = value;
					this.SendPropertyChanged("OrganisationUID");
					this.OnOrganisationUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhotoUID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PhotoUID
		{
			get
			{
				return this._PhotoUID;
			}
			set
			{
				if ((this._PhotoUID != value))
				{
					if (this._Photo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPhotoUIDChanging(value);
					this.SendPropertyChanging();
					this._PhotoUID = value;
					this.SendPropertyChanged("PhotoUID");
					this.OnPhotoUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternalKey", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string ExternalKey
		{
			get
			{
				return this._ExternalKey;
			}
			set
			{
				if ((this._ExternalKey != value))
				{
					this.OnExternalKeyChanging(value);
					this.SendPropertyChanging();
					this._ExternalKey = value;
					this.SendPropertyChanged("ExternalKey");
					this.OnExternalKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Position_Employee", Storage="_Employees", ThisKey="UID", OtherKey="PositionUID")]
		public EntitySet<Employee> Employees
		{
			get
			{
				return this._Employees;
			}
			set
			{
				this._Employees.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organisation_Position", Storage="_Organisation", ThisKey="OrganisationUID", OtherKey="UID", IsForeignKey=true)]
		public Organisation Organisation
		{
			get
			{
				return this._Organisation.Entity;
			}
			set
			{
				Organisation previousValue = this._Organisation.Entity;
				if (((previousValue != value) 
							|| (this._Organisation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Organisation.Entity = null;
						previousValue.Positions.Remove(this);
					}
					this._Organisation.Entity = value;
					if ((value != null))
					{
						value.Positions.Add(this);
						this._OrganisationUID = value.UID;
					}
					else
					{
						this._OrganisationUID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Organisation");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Photo_Position", Storage="_Photo", ThisKey="PhotoUID", OtherKey="UID", IsForeignKey=true)]
		public Photo Photo
		{
			get
			{
				return this._Photo.Entity;
			}
			set
			{
				Photo previousValue = this._Photo.Entity;
				if (((previousValue != value) 
							|| (this._Photo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Photo.Entity = null;
						previousValue.Positions.Remove(this);
					}
					this._Photo.Entity = value;
					if ((value != null))
					{
						value.Positions.Add(this);
						this._PhotoUID = value.UID;
					}
					else
					{
						this._PhotoUID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Photo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Employees(Employee entity)
		{
			this.SendPropertyChanging();
			entity.Position = this;
		}
		
		private void detach_Employees(Employee entity)
		{
			this.SendPropertyChanging();
			entity.Position = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Schedule")]
	public partial class Schedule : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UID;
		
		private string _Name;
		
		private System.Nullable<System.Guid> _ScheduleSchemeUID;
		
		private bool _IsIgnoreHoliday;
		
		private bool _IsOnlyFirstEnter;
		
		private int _AllowedLate;
		
		private int _AllowedEarlyLeave;
		
		private bool _IsDeleted;
		
		private System.DateTime _RemovalDate;
		
		private System.Nullable<System.Guid> _OrganisationUID;
		
		private int _AllowedAbsentLowThan;
		
		private int _NotAllowOvertimeLowerThan;
		
		private bool _IsEnabledAllowLate;
		
		private bool _IsEnabledAllowEarlyLeave;
		
		private bool _IsAllowAbsent;
		
		private bool _IsEnabledOvertime;
		
		private EntitySet<ScheduleZone> _ScheduleZones;
		
		private EntitySet<Employee> _Employees;
		
		private EntityRef<Organisation> _Organisation;
		
		private EntityRef<ScheduleScheme> _ScheduleScheme;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUIDChanging(System.Guid value);
    partial void OnUIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnScheduleSchemeUIDChanging(System.Nullable<System.Guid> value);
    partial void OnScheduleSchemeUIDChanged();
    partial void OnIsIgnoreHolidayChanging(bool value);
    partial void OnIsIgnoreHolidayChanged();
    partial void OnIsOnlyFirstEnterChanging(bool value);
    partial void OnIsOnlyFirstEnterChanged();
    partial void OnAllowedLateChanging(int value);
    partial void OnAllowedLateChanged();
    partial void OnAllowedEarlyLeaveChanging(int value);
    partial void OnAllowedEarlyLeaveChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnRemovalDateChanging(System.DateTime value);
    partial void OnRemovalDateChanged();
    partial void OnOrganisationUIDChanging(System.Nullable<System.Guid> value);
    partial void OnOrganisationUIDChanged();
    partial void OnAllowedAbsentLowThanChanging(int value);
    partial void OnAllowedAbsentLowThanChanged();
    partial void OnNotAllowOvertimeLowerThanChanging(int value);
    partial void OnNotAllowOvertimeLowerThanChanged();
    partial void OnIsEnabledAllowLateChanging(bool value);
    partial void OnIsEnabledAllowLateChanged();
    partial void OnIsEnabledAllowEarlyLeaveChanging(bool value);
    partial void OnIsEnabledAllowEarlyLeaveChanged();
    partial void OnIsAllowAbsentChanging(bool value);
    partial void OnIsAllowAbsentChanged();
    partial void OnIsEnabledOvertimeChanging(bool value);
    partial void OnIsEnabledOvertimeChanged();
    #endregion
		
		public Schedule()
		{
			this._ScheduleZones = new EntitySet<ScheduleZone>(new Action<ScheduleZone>(this.attach_ScheduleZones), new Action<ScheduleZone>(this.detach_ScheduleZones));
			this._Employees = new EntitySet<Employee>(new Action<Employee>(this.attach_Employees), new Action<Employee>(this.detach_Employees));
			this._Organisation = default(EntityRef<Organisation>);
			this._ScheduleScheme = default(EntityRef<ScheduleScheme>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UID
		{
			get
			{
				return this._UID;
			}
			set
			{
				if ((this._UID != value))
				{
					this.OnUIDChanging(value);
					this.SendPropertyChanging();
					this._UID = value;
					this.SendPropertyChanged("UID");
					this.OnUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScheduleSchemeUID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ScheduleSchemeUID
		{
			get
			{
				return this._ScheduleSchemeUID;
			}
			set
			{
				if ((this._ScheduleSchemeUID != value))
				{
					if (this._ScheduleScheme.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnScheduleSchemeUIDChanging(value);
					this.SendPropertyChanging();
					this._ScheduleSchemeUID = value;
					this.SendPropertyChanged("ScheduleSchemeUID");
					this.OnScheduleSchemeUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsIgnoreHoliday", DbType="Bit NOT NULL")]
		public bool IsIgnoreHoliday
		{
			get
			{
				return this._IsIgnoreHoliday;
			}
			set
			{
				if ((this._IsIgnoreHoliday != value))
				{
					this.OnIsIgnoreHolidayChanging(value);
					this.SendPropertyChanging();
					this._IsIgnoreHoliday = value;
					this.SendPropertyChanged("IsIgnoreHoliday");
					this.OnIsIgnoreHolidayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsOnlyFirstEnter", DbType="Bit NOT NULL")]
		public bool IsOnlyFirstEnter
		{
			get
			{
				return this._IsOnlyFirstEnter;
			}
			set
			{
				if ((this._IsOnlyFirstEnter != value))
				{
					this.OnIsOnlyFirstEnterChanging(value);
					this.SendPropertyChanging();
					this._IsOnlyFirstEnter = value;
					this.SendPropertyChanged("IsOnlyFirstEnter");
					this.OnIsOnlyFirstEnterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowedLate", DbType="Int NOT NULL")]
		public int AllowedLate
		{
			get
			{
				return this._AllowedLate;
			}
			set
			{
				if ((this._AllowedLate != value))
				{
					this.OnAllowedLateChanging(value);
					this.SendPropertyChanging();
					this._AllowedLate = value;
					this.SendPropertyChanged("AllowedLate");
					this.OnAllowedLateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowedEarlyLeave", DbType="Int NOT NULL")]
		public int AllowedEarlyLeave
		{
			get
			{
				return this._AllowedEarlyLeave;
			}
			set
			{
				if ((this._AllowedEarlyLeave != value))
				{
					this.OnAllowedEarlyLeaveChanging(value);
					this.SendPropertyChanging();
					this._AllowedEarlyLeave = value;
					this.SendPropertyChanged("AllowedEarlyLeave");
					this.OnAllowedEarlyLeaveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RemovalDate", DbType="DateTime NOT NULL")]
		public System.DateTime RemovalDate
		{
			get
			{
				return this._RemovalDate;
			}
			set
			{
				if ((this._RemovalDate != value))
				{
					this.OnRemovalDateChanging(value);
					this.SendPropertyChanging();
					this._RemovalDate = value;
					this.SendPropertyChanged("RemovalDate");
					this.OnRemovalDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrganisationUID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> OrganisationUID
		{
			get
			{
				return this._OrganisationUID;
			}
			set
			{
				if ((this._OrganisationUID != value))
				{
					if (this._Organisation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrganisationUIDChanging(value);
					this.SendPropertyChanging();
					this._OrganisationUID = value;
					this.SendPropertyChanged("OrganisationUID");
					this.OnOrganisationUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowedAbsentLowThan", DbType="Int NOT NULL")]
		public int AllowedAbsentLowThan
		{
			get
			{
				return this._AllowedAbsentLowThan;
			}
			set
			{
				if ((this._AllowedAbsentLowThan != value))
				{
					this.OnAllowedAbsentLowThanChanging(value);
					this.SendPropertyChanging();
					this._AllowedAbsentLowThan = value;
					this.SendPropertyChanged("AllowedAbsentLowThan");
					this.OnAllowedAbsentLowThanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotAllowOvertimeLowerThan", DbType="Int NOT NULL")]
		public int NotAllowOvertimeLowerThan
		{
			get
			{
				return this._NotAllowOvertimeLowerThan;
			}
			set
			{
				if ((this._NotAllowOvertimeLowerThan != value))
				{
					this.OnNotAllowOvertimeLowerThanChanging(value);
					this.SendPropertyChanging();
					this._NotAllowOvertimeLowerThan = value;
					this.SendPropertyChanged("NotAllowOvertimeLowerThan");
					this.OnNotAllowOvertimeLowerThanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsEnabledAllowLate", DbType="Bit NOT NULL")]
		public bool IsEnabledAllowLate
		{
			get
			{
				return this._IsEnabledAllowLate;
			}
			set
			{
				if ((this._IsEnabledAllowLate != value))
				{
					this.OnIsEnabledAllowLateChanging(value);
					this.SendPropertyChanging();
					this._IsEnabledAllowLate = value;
					this.SendPropertyChanged("IsEnabledAllowLate");
					this.OnIsEnabledAllowLateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsEnabledAllowEarlyLeave", DbType="Bit NOT NULL")]
		public bool IsEnabledAllowEarlyLeave
		{
			get
			{
				return this._IsEnabledAllowEarlyLeave;
			}
			set
			{
				if ((this._IsEnabledAllowEarlyLeave != value))
				{
					this.OnIsEnabledAllowEarlyLeaveChanging(value);
					this.SendPropertyChanging();
					this._IsEnabledAllowEarlyLeave = value;
					this.SendPropertyChanged("IsEnabledAllowEarlyLeave");
					this.OnIsEnabledAllowEarlyLeaveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAllowAbsent", DbType="Bit NOT NULL")]
		public bool IsAllowAbsent
		{
			get
			{
				return this._IsAllowAbsent;
			}
			set
			{
				if ((this._IsAllowAbsent != value))
				{
					this.OnIsAllowAbsentChanging(value);
					this.SendPropertyChanging();
					this._IsAllowAbsent = value;
					this.SendPropertyChanged("IsAllowAbsent");
					this.OnIsAllowAbsentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsEnabledOvertime", DbType="Bit NOT NULL")]
		public bool IsEnabledOvertime
		{
			get
			{
				return this._IsEnabledOvertime;
			}
			set
			{
				if ((this._IsEnabledOvertime != value))
				{
					this.OnIsEnabledOvertimeChanging(value);
					this.SendPropertyChanging();
					this._IsEnabledOvertime = value;
					this.SendPropertyChanged("IsEnabledOvertime");
					this.OnIsEnabledOvertimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Schedule_ScheduleZone", Storage="_ScheduleZones", ThisKey="UID", OtherKey="ScheduleUID")]
		public EntitySet<ScheduleZone> ScheduleZones
		{
			get
			{
				return this._ScheduleZones;
			}
			set
			{
				this._ScheduleZones.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Schedule_Employee", Storage="_Employees", ThisKey="UID", OtherKey="ScheduleUID")]
		public EntitySet<Employee> Employees
		{
			get
			{
				return this._Employees;
			}
			set
			{
				this._Employees.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organisation_Schedule", Storage="_Organisation", ThisKey="OrganisationUID", OtherKey="UID", IsForeignKey=true)]
		public Organisation Organisation
		{
			get
			{
				return this._Organisation.Entity;
			}
			set
			{
				Organisation previousValue = this._Organisation.Entity;
				if (((previousValue != value) 
							|| (this._Organisation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Organisation.Entity = null;
						previousValue.Schedules.Remove(this);
					}
					this._Organisation.Entity = value;
					if ((value != null))
					{
						value.Schedules.Add(this);
						this._OrganisationUID = value.UID;
					}
					else
					{
						this._OrganisationUID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Organisation");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ScheduleScheme_Schedule", Storage="_ScheduleScheme", ThisKey="ScheduleSchemeUID", OtherKey="UID", IsForeignKey=true)]
		public ScheduleScheme ScheduleScheme
		{
			get
			{
				return this._ScheduleScheme.Entity;
			}
			set
			{
				ScheduleScheme previousValue = this._ScheduleScheme.Entity;
				if (((previousValue != value) 
							|| (this._ScheduleScheme.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ScheduleScheme.Entity = null;
						previousValue.Schedules.Remove(this);
					}
					this._ScheduleScheme.Entity = value;
					if ((value != null))
					{
						value.Schedules.Add(this);
						this._ScheduleSchemeUID = value.UID;
					}
					else
					{
						this._ScheduleSchemeUID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("ScheduleScheme");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ScheduleZones(ScheduleZone entity)
		{
			this.SendPropertyChanging();
			entity.Schedule = this;
		}
		
		private void detach_ScheduleZones(ScheduleZone entity)
		{
			this.SendPropertyChanging();
			entity.Schedule = null;
		}
		
		private void attach_Employees(Employee entity)
		{
			this.SendPropertyChanging();
			entity.Schedule = this;
		}
		
		private void detach_Employees(Employee entity)
		{
			this.SendPropertyChanging();
			entity.Schedule = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ScheduleDay")]
	public partial class ScheduleDay : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UID;
		
		private System.Nullable<System.Guid> _DayIntervalUID;
		
		private System.Guid _ScheduleSchemeUID;
		
		private int _Number;
		
		private EntityRef<DayInterval> _DayInterval;
		
		private EntityRef<ScheduleScheme> _ScheduleScheme;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUIDChanging(System.Guid value);
    partial void OnUIDChanged();
    partial void OnDayIntervalUIDChanging(System.Nullable<System.Guid> value);
    partial void OnDayIntervalUIDChanged();
    partial void OnScheduleSchemeUIDChanging(System.Guid value);
    partial void OnScheduleSchemeUIDChanged();
    partial void OnNumberChanging(int value);
    partial void OnNumberChanged();
    #endregion
		
		public ScheduleDay()
		{
			this._DayInterval = default(EntityRef<DayInterval>);
			this._ScheduleScheme = default(EntityRef<ScheduleScheme>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UID
		{
			get
			{
				return this._UID;
			}
			set
			{
				if ((this._UID != value))
				{
					this.OnUIDChanging(value);
					this.SendPropertyChanging();
					this._UID = value;
					this.SendPropertyChanged("UID");
					this.OnUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DayIntervalUID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> DayIntervalUID
		{
			get
			{
				return this._DayIntervalUID;
			}
			set
			{
				if ((this._DayIntervalUID != value))
				{
					if (this._DayInterval.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDayIntervalUIDChanging(value);
					this.SendPropertyChanging();
					this._DayIntervalUID = value;
					this.SendPropertyChanged("DayIntervalUID");
					this.OnDayIntervalUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScheduleSchemeUID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ScheduleSchemeUID
		{
			get
			{
				return this._ScheduleSchemeUID;
			}
			set
			{
				if ((this._ScheduleSchemeUID != value))
				{
					if (this._ScheduleScheme.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnScheduleSchemeUIDChanging(value);
					this.SendPropertyChanging();
					this._ScheduleSchemeUID = value;
					this.SendPropertyChanged("ScheduleSchemeUID");
					this.OnScheduleSchemeUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Number", DbType="Int NOT NULL")]
		public int Number
		{
			get
			{
				return this._Number;
			}
			set
			{
				if ((this._Number != value))
				{
					this.OnNumberChanging(value);
					this.SendPropertyChanging();
					this._Number = value;
					this.SendPropertyChanged("Number");
					this.OnNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DayInterval_ScheduleDay", Storage="_DayInterval", ThisKey="DayIntervalUID", OtherKey="UID", IsForeignKey=true)]
		public DayInterval DayInterval
		{
			get
			{
				return this._DayInterval.Entity;
			}
			set
			{
				DayInterval previousValue = this._DayInterval.Entity;
				if (((previousValue != value) 
							|| (this._DayInterval.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DayInterval.Entity = null;
						previousValue.ScheduleDays.Remove(this);
					}
					this._DayInterval.Entity = value;
					if ((value != null))
					{
						value.ScheduleDays.Add(this);
						this._DayIntervalUID = value.UID;
					}
					else
					{
						this._DayIntervalUID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("DayInterval");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ScheduleScheme_ScheduleDay", Storage="_ScheduleScheme", ThisKey="ScheduleSchemeUID", OtherKey="UID", IsForeignKey=true)]
		public ScheduleScheme ScheduleScheme
		{
			get
			{
				return this._ScheduleScheme.Entity;
			}
			set
			{
				ScheduleScheme previousValue = this._ScheduleScheme.Entity;
				if (((previousValue != value) 
							|| (this._ScheduleScheme.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ScheduleScheme.Entity = null;
						previousValue.ScheduleDays.Remove(this);
					}
					this._ScheduleScheme.Entity = value;
					if ((value != null))
					{
						value.ScheduleDays.Add(this);
						this._ScheduleSchemeUID = value.UID;
					}
					else
					{
						this._ScheduleSchemeUID = default(System.Guid);
					}
					this.SendPropertyChanged("ScheduleScheme");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ScheduleScheme")]
	public partial class ScheduleScheme : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UID;
		
		private string _Name;
		
		private int _Type;
		
		private string _Description;
		
		private int _DaysCount;
		
		private bool _IsDeleted;
		
		private System.DateTime _RemovalDate;
		
		private System.Nullable<System.Guid> _OrganisationUID;
		
		private EntitySet<Schedule> _Schedules;
		
		private EntitySet<ScheduleDay> _ScheduleDays;
		
		private EntityRef<Organisation> _Organisation;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUIDChanging(System.Guid value);
    partial void OnUIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnDaysCountChanging(int value);
    partial void OnDaysCountChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnRemovalDateChanging(System.DateTime value);
    partial void OnRemovalDateChanged();
    partial void OnOrganisationUIDChanging(System.Nullable<System.Guid> value);
    partial void OnOrganisationUIDChanged();
    #endregion
		
		public ScheduleScheme()
		{
			this._Schedules = new EntitySet<Schedule>(new Action<Schedule>(this.attach_Schedules), new Action<Schedule>(this.detach_Schedules));
			this._ScheduleDays = new EntitySet<ScheduleDay>(new Action<ScheduleDay>(this.attach_ScheduleDays), new Action<ScheduleDay>(this.detach_ScheduleDays));
			this._Organisation = default(EntityRef<Organisation>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UID
		{
			get
			{
				return this._UID;
			}
			set
			{
				if ((this._UID != value))
				{
					this.OnUIDChanging(value);
					this.SendPropertyChanging();
					this._UID = value;
					this.SendPropertyChanged("UID");
					this.OnUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DaysCount", DbType="Int NOT NULL")]
		public int DaysCount
		{
			get
			{
				return this._DaysCount;
			}
			set
			{
				if ((this._DaysCount != value))
				{
					this.OnDaysCountChanging(value);
					this.SendPropertyChanging();
					this._DaysCount = value;
					this.SendPropertyChanged("DaysCount");
					this.OnDaysCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RemovalDate", DbType="DateTime NOT NULL")]
		public System.DateTime RemovalDate
		{
			get
			{
				return this._RemovalDate;
			}
			set
			{
				if ((this._RemovalDate != value))
				{
					this.OnRemovalDateChanging(value);
					this.SendPropertyChanging();
					this._RemovalDate = value;
					this.SendPropertyChanged("RemovalDate");
					this.OnRemovalDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrganisationUID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> OrganisationUID
		{
			get
			{
				return this._OrganisationUID;
			}
			set
			{
				if ((this._OrganisationUID != value))
				{
					if (this._Organisation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrganisationUIDChanging(value);
					this.SendPropertyChanging();
					this._OrganisationUID = value;
					this.SendPropertyChanged("OrganisationUID");
					this.OnOrganisationUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ScheduleScheme_Schedule", Storage="_Schedules", ThisKey="UID", OtherKey="ScheduleSchemeUID")]
		public EntitySet<Schedule> Schedules
		{
			get
			{
				return this._Schedules;
			}
			set
			{
				this._Schedules.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ScheduleScheme_ScheduleDay", Storage="_ScheduleDays", ThisKey="UID", OtherKey="ScheduleSchemeUID")]
		public EntitySet<ScheduleDay> ScheduleDays
		{
			get
			{
				return this._ScheduleDays;
			}
			set
			{
				this._ScheduleDays.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organisation_ScheduleScheme", Storage="_Organisation", ThisKey="OrganisationUID", OtherKey="UID", IsForeignKey=true)]
		public Organisation Organisation
		{
			get
			{
				return this._Organisation.Entity;
			}
			set
			{
				Organisation previousValue = this._Organisation.Entity;
				if (((previousValue != value) 
							|| (this._Organisation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Organisation.Entity = null;
						previousValue.ScheduleSchemes.Remove(this);
					}
					this._Organisation.Entity = value;
					if ((value != null))
					{
						value.ScheduleSchemes.Add(this);
						this._OrganisationUID = value.UID;
					}
					else
					{
						this._OrganisationUID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Organisation");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Schedules(Schedule entity)
		{
			this.SendPropertyChanging();
			entity.ScheduleScheme = this;
		}
		
		private void detach_Schedules(Schedule entity)
		{
			this.SendPropertyChanging();
			entity.ScheduleScheme = null;
		}
		
		private void attach_ScheduleDays(ScheduleDay entity)
		{
			this.SendPropertyChanging();
			entity.ScheduleScheme = this;
		}
		
		private void detach_ScheduleDays(ScheduleDay entity)
		{
			this.SendPropertyChanging();
			entity.ScheduleScheme = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ScheduleZone")]
	public partial class ScheduleZone : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UID;
		
		private System.Guid _ZoneUID;
		
		private System.Guid _DoorUID;
		
		private System.Guid _ScheduleUID;
		
		private EntityRef<Schedule> _Schedule;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUIDChanging(System.Guid value);
    partial void OnUIDChanged();
    partial void OnZoneUIDChanging(System.Guid value);
    partial void OnZoneUIDChanged();
    partial void OnDoorUIDChanging(System.Guid value);
    partial void OnDoorUIDChanged();
    partial void OnScheduleUIDChanging(System.Guid value);
    partial void OnScheduleUIDChanged();
    #endregion
		
		public ScheduleZone()
		{
			this._Schedule = default(EntityRef<Schedule>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UID
		{
			get
			{
				return this._UID;
			}
			set
			{
				if ((this._UID != value))
				{
					this.OnUIDChanging(value);
					this.SendPropertyChanging();
					this._UID = value;
					this.SendPropertyChanged("UID");
					this.OnUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZoneUID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ZoneUID
		{
			get
			{
				return this._ZoneUID;
			}
			set
			{
				if ((this._ZoneUID != value))
				{
					this.OnZoneUIDChanging(value);
					this.SendPropertyChanging();
					this._ZoneUID = value;
					this.SendPropertyChanged("ZoneUID");
					this.OnZoneUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoorUID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid DoorUID
		{
			get
			{
				return this._DoorUID;
			}
			set
			{
				if ((this._DoorUID != value))
				{
					this.OnDoorUIDChanging(value);
					this.SendPropertyChanging();
					this._DoorUID = value;
					this.SendPropertyChanged("DoorUID");
					this.OnDoorUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScheduleUID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ScheduleUID
		{
			get
			{
				return this._ScheduleUID;
			}
			set
			{
				if ((this._ScheduleUID != value))
				{
					if (this._Schedule.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnScheduleUIDChanging(value);
					this.SendPropertyChanging();
					this._ScheduleUID = value;
					this.SendPropertyChanged("ScheduleUID");
					this.OnScheduleUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Schedule_ScheduleZone", Storage="_Schedule", ThisKey="ScheduleUID", OtherKey="UID", IsForeignKey=true)]
		public Schedule Schedule
		{
			get
			{
				return this._Schedule.Entity;
			}
			set
			{
				Schedule previousValue = this._Schedule.Entity;
				if (((previousValue != value) 
							|| (this._Schedule.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Schedule.Entity = null;
						previousValue.ScheduleZones.Remove(this);
					}
					this._Schedule.Entity = value;
					if ((value != null))
					{
						value.ScheduleZones.Add(this);
						this._ScheduleUID = value.UID;
					}
					else
					{
						this._ScheduleUID = default(System.Guid);
					}
					this.SendPropertyChanged("Schedule");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TimeTrackDocumentType")]
	public partial class TimeTrackDocumentType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UID;
		
		private string _Name;
		
		private string _ShortName;
		
		private int _DocumentCode;
		
		private int _DocumentType;
		
		private System.Guid _OrganisationUID;
		
		private EntityRef<Organisation> _Organisation;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUIDChanging(System.Guid value);
    partial void OnUIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnDocumentCodeChanging(int value);
    partial void OnDocumentCodeChanged();
    partial void OnDocumentTypeChanging(int value);
    partial void OnDocumentTypeChanged();
    partial void OnOrganisationUIDChanging(System.Guid value);
    partial void OnOrganisationUIDChanged();
    #endregion
		
		public TimeTrackDocumentType()
		{
			this._Organisation = default(EntityRef<Organisation>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UID
		{
			get
			{
				return this._UID;
			}
			set
			{
				if ((this._UID != value))
				{
					this.OnUIDChanging(value);
					this.SendPropertyChanging();
					this._UID = value;
					this.SendPropertyChanged("UID");
					this.OnUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentCode", DbType="Int NOT NULL")]
		public int DocumentCode
		{
			get
			{
				return this._DocumentCode;
			}
			set
			{
				if ((this._DocumentCode != value))
				{
					this.OnDocumentCodeChanging(value);
					this.SendPropertyChanging();
					this._DocumentCode = value;
					this.SendPropertyChanged("DocumentCode");
					this.OnDocumentCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentType", DbType="Int NOT NULL")]
		public int DocumentType
		{
			get
			{
				return this._DocumentType;
			}
			set
			{
				if ((this._DocumentType != value))
				{
					this.OnDocumentTypeChanging(value);
					this.SendPropertyChanging();
					this._DocumentType = value;
					this.SendPropertyChanged("DocumentType");
					this.OnDocumentTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrganisationUID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid OrganisationUID
		{
			get
			{
				return this._OrganisationUID;
			}
			set
			{
				if ((this._OrganisationUID != value))
				{
					if (this._Organisation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrganisationUIDChanging(value);
					this.SendPropertyChanging();
					this._OrganisationUID = value;
					this.SendPropertyChanged("OrganisationUID");
					this.OnOrganisationUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organisation_TimeTrackDocumentType", Storage="_Organisation", ThisKey="OrganisationUID", OtherKey="UID", IsForeignKey=true)]
		public Organisation Organisation
		{
			get
			{
				return this._Organisation.Entity;
			}
			set
			{
				Organisation previousValue = this._Organisation.Entity;
				if (((previousValue != value) 
							|| (this._Organisation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Organisation.Entity = null;
						previousValue.TimeTrackDocumentTypes.Remove(this);
					}
					this._Organisation.Entity = value;
					if ((value != null))
					{
						value.TimeTrackDocumentTypes.Add(this);
						this._OrganisationUID = value.UID;
					}
					else
					{
						this._OrganisationUID = default(System.Guid);
					}
					this.SendPropertyChanged("Organisation");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TimeTrackException")]
	public partial class TimeTrackException : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UID;
		
		private System.Guid _EmployeeUID;
		
		private System.DateTime _StartDateTime;
		
		private System.DateTime _EndDateTime;
		
		private int _DocumentType;
		
		private string _Comment;
		
		private EntityRef<Employee> _Employee;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUIDChanging(System.Guid value);
    partial void OnUIDChanged();
    partial void OnEmployeeUIDChanging(System.Guid value);
    partial void OnEmployeeUIDChanged();
    partial void OnStartDateTimeChanging(System.DateTime value);
    partial void OnStartDateTimeChanged();
    partial void OnEndDateTimeChanging(System.DateTime value);
    partial void OnEndDateTimeChanged();
    partial void OnDocumentTypeChanging(int value);
    partial void OnDocumentTypeChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    #endregion
		
		public TimeTrackException()
		{
			this._Employee = default(EntityRef<Employee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UID
		{
			get
			{
				return this._UID;
			}
			set
			{
				if ((this._UID != value))
				{
					this.OnUIDChanging(value);
					this.SendPropertyChanging();
					this._UID = value;
					this.SendPropertyChanged("UID");
					this.OnUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeUID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid EmployeeUID
		{
			get
			{
				return this._EmployeeUID;
			}
			set
			{
				if ((this._EmployeeUID != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeUIDChanging(value);
					this.SendPropertyChanging();
					this._EmployeeUID = value;
					this.SendPropertyChanged("EmployeeUID");
					this.OnEmployeeUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime StartDateTime
		{
			get
			{
				return this._StartDateTime;
			}
			set
			{
				if ((this._StartDateTime != value))
				{
					this.OnStartDateTimeChanging(value);
					this.SendPropertyChanging();
					this._StartDateTime = value;
					this.SendPropertyChanged("StartDateTime");
					this.OnStartDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime EndDateTime
		{
			get
			{
				return this._EndDateTime;
			}
			set
			{
				if ((this._EndDateTime != value))
				{
					this.OnEndDateTimeChanging(value);
					this.SendPropertyChanging();
					this._EndDateTime = value;
					this.SendPropertyChanged("EndDateTime");
					this.OnEndDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentType", DbType="Int NOT NULL")]
		public int DocumentType
		{
			get
			{
				return this._DocumentType;
			}
			set
			{
				if ((this._DocumentType != value))
				{
					this.OnDocumentTypeChanging(value);
					this.SendPropertyChanging();
					this._DocumentType = value;
					this.SendPropertyChanged("DocumentType");
					this.OnDocumentTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(100)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_TimeTrackException", Storage="_Employee", ThisKey="EmployeeUID", OtherKey="UID", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.TimeTrackExceptions.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.TimeTrackExceptions.Add(this);
						this._EmployeeUID = value.UID;
					}
					else
					{
						this._EmployeeUID = default(System.Guid);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NightSettings")]
	public partial class NightSetting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UID;
		
		private System.Nullable<System.Guid> _OrganisationUID;
		
		private long _NightStartTime;
		
		private long _NightEndTime;
		
		private EntityRef<Organisation> _Organisation;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUIDChanging(System.Guid value);
    partial void OnUIDChanged();
    partial void OnOrganisationUIDChanging(System.Nullable<System.Guid> value);
    partial void OnOrganisationUIDChanged();
    partial void OnNightStartTimeChanging(long value);
    partial void OnNightStartTimeChanged();
    partial void OnNightEndTimeChanging(long value);
    partial void OnNightEndTimeChanged();
    #endregion
		
		public NightSetting()
		{
			this._Organisation = default(EntityRef<Organisation>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UID
		{
			get
			{
				return this._UID;
			}
			set
			{
				if ((this._UID != value))
				{
					this.OnUIDChanging(value);
					this.SendPropertyChanging();
					this._UID = value;
					this.SendPropertyChanged("UID");
					this.OnUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrganisationUID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> OrganisationUID
		{
			get
			{
				return this._OrganisationUID;
			}
			set
			{
				if ((this._OrganisationUID != value))
				{
					if (this._Organisation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrganisationUIDChanging(value);
					this.SendPropertyChanging();
					this._OrganisationUID = value;
					this.SendPropertyChanged("OrganisationUID");
					this.OnOrganisationUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NightStartTime", DbType="BigInt NOT NULL")]
		public long NightStartTime
		{
			get
			{
				return this._NightStartTime;
			}
			set
			{
				if ((this._NightStartTime != value))
				{
					this.OnNightStartTimeChanging(value);
					this.SendPropertyChanging();
					this._NightStartTime = value;
					this.SendPropertyChanged("NightStartTime");
					this.OnNightStartTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NightEndTime", DbType="BigInt NOT NULL")]
		public long NightEndTime
		{
			get
			{
				return this._NightEndTime;
			}
			set
			{
				if ((this._NightEndTime != value))
				{
					this.OnNightEndTimeChanging(value);
					this.SendPropertyChanging();
					this._NightEndTime = value;
					this.SendPropertyChanged("NightEndTime");
					this.OnNightEndTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organisation_NightSetting", Storage="_Organisation", ThisKey="OrganisationUID", OtherKey="UID", IsForeignKey=true)]
		public Organisation Organisation
		{
			get
			{
				return this._Organisation.Entity;
			}
			set
			{
				Organisation previousValue = this._Organisation.Entity;
				if (((previousValue != value) 
							|| (this._Organisation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Organisation.Entity = null;
						previousValue.NightSettings.Remove(this);
					}
					this._Organisation.Entity = value;
					if ((value != null))
					{
						value.NightSettings.Add(this);
						this._OrganisationUID = value.UID;
					}
					else
					{
						this._OrganisationUID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Organisation");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Employee")]
	public partial class Employee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UID;
		
		private string _FirstName;
		
		private string _SecondName;
		
		private string _LastName;
		
		private System.Nullable<System.Guid> _PhotoUID;
		
		private System.Nullable<System.Guid> _PositionUID;
		
		private System.Nullable<System.Guid> _DepartmentUID;
		
		private System.Nullable<System.Guid> _ScheduleUID;
		
		private System.DateTime _ScheduleStartDate;
		
		private System.Nullable<int> _Type;
		
		private string _TabelNo;
		
		private System.DateTime _CredentialsStartDate;
		
		private System.Nullable<System.Guid> _EscortUID;
		
		private bool _IsDeleted;
		
		private System.DateTime _RemovalDate;
		
		private System.Nullable<System.Guid> _OrganisationUID;
		
		private string _DocumentNumber;
		
		private System.Nullable<System.DateTime> _BirthDate;
		
		private string _BirthPlace;
		
		private System.Nullable<System.DateTime> _DocumentGivenDate;
		
		private string _DocumentGivenBy;
		
		private System.Nullable<System.DateTime> _DocumentValidTo;
		
		private System.Nullable<int> _Gender;
		
		private string _DocumentDepartmentCode;
		
		private string _Citizenship;
		
		private System.Nullable<int> _DocumentType;
		
		private string _Phone;
		
		private string _Description;
		
		private System.DateTime _LastEmployeeDayUpdate;
		
		private string _ExternalKey;
		
		private EntitySet<AdditionalColumn> _AdditionalColumns;
		
		private EntitySet<Department> _Departments;
		
		private EntitySet<Department> _Departments1;
		
		private EntitySet<Department> _Departments2;
		
		private EntitySet<Organisation> _Organisations;
		
		private EntitySet<Organisation> _Organisations1;
		
		private EntitySet<TimeTrackException> _TimeTrackExceptions;
		
		private EntitySet<Employee> _Employees;
		
		private EntitySet<Card> _Cards;
		
		private EntityRef<Department> _Department;
		
		private EntityRef<Employee> _Employee1;
		
		private EntityRef<Organisation> _Organisation;
		
		private EntityRef<Photo> _Photo;
		
		private EntityRef<Position> _Position;
		
		private EntityRef<Schedule> _Schedule;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUIDChanging(System.Guid value);
    partial void OnUIDChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnSecondNameChanging(string value);
    partial void OnSecondNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnPhotoUIDChanging(System.Nullable<System.Guid> value);
    partial void OnPhotoUIDChanged();
    partial void OnPositionUIDChanging(System.Nullable<System.Guid> value);
    partial void OnPositionUIDChanged();
    partial void OnDepartmentUIDChanging(System.Nullable<System.Guid> value);
    partial void OnDepartmentUIDChanged();
    partial void OnScheduleUIDChanging(System.Nullable<System.Guid> value);
    partial void OnScheduleUIDChanged();
    partial void OnScheduleStartDateChanging(System.DateTime value);
    partial void OnScheduleStartDateChanged();
    partial void OnTypeChanging(System.Nullable<int> value);
    partial void OnTypeChanged();
    partial void OnTabelNoChanging(string value);
    partial void OnTabelNoChanged();
    partial void OnCredentialsStartDateChanging(System.DateTime value);
    partial void OnCredentialsStartDateChanged();
    partial void OnEscortUIDChanging(System.Nullable<System.Guid> value);
    partial void OnEscortUIDChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnRemovalDateChanging(System.DateTime value);
    partial void OnRemovalDateChanged();
    partial void OnOrganisationUIDChanging(System.Nullable<System.Guid> value);
    partial void OnOrganisationUIDChanged();
    partial void OnDocumentNumberChanging(string value);
    partial void OnDocumentNumberChanged();
    partial void OnBirthDateChanging(System.Nullable<System.DateTime> value);
    partial void OnBirthDateChanged();
    partial void OnBirthPlaceChanging(string value);
    partial void OnBirthPlaceChanged();
    partial void OnDocumentGivenDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDocumentGivenDateChanged();
    partial void OnDocumentGivenByChanging(string value);
    partial void OnDocumentGivenByChanged();
    partial void OnDocumentValidToChanging(System.Nullable<System.DateTime> value);
    partial void OnDocumentValidToChanged();
    partial void OnGenderChanging(System.Nullable<int> value);
    partial void OnGenderChanged();
    partial void OnDocumentDepartmentCodeChanging(string value);
    partial void OnDocumentDepartmentCodeChanged();
    partial void OnCitizenshipChanging(string value);
    partial void OnCitizenshipChanged();
    partial void OnDocumentTypeChanging(System.Nullable<int> value);
    partial void OnDocumentTypeChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnLastEmployeeDayUpdateChanging(System.DateTime value);
    partial void OnLastEmployeeDayUpdateChanged();
    partial void OnExternalKeyChanging(string value);
    partial void OnExternalKeyChanged();
    #endregion
		
		public Employee()
		{
			this._AdditionalColumns = new EntitySet<AdditionalColumn>(new Action<AdditionalColumn>(this.attach_AdditionalColumns), new Action<AdditionalColumn>(this.detach_AdditionalColumns));
			this._Departments = new EntitySet<Department>(new Action<Department>(this.attach_Departments), new Action<Department>(this.detach_Departments));
			this._Departments1 = new EntitySet<Department>(new Action<Department>(this.attach_Departments1), new Action<Department>(this.detach_Departments1));
			this._Departments2 = new EntitySet<Department>(new Action<Department>(this.attach_Departments2), new Action<Department>(this.detach_Departments2));
			this._Organisations = new EntitySet<Organisation>(new Action<Organisation>(this.attach_Organisations), new Action<Organisation>(this.detach_Organisations));
			this._Organisations1 = new EntitySet<Organisation>(new Action<Organisation>(this.attach_Organisations1), new Action<Organisation>(this.detach_Organisations1));
			this._TimeTrackExceptions = new EntitySet<TimeTrackException>(new Action<TimeTrackException>(this.attach_TimeTrackExceptions), new Action<TimeTrackException>(this.detach_TimeTrackExceptions));
			this._Employees = new EntitySet<Employee>(new Action<Employee>(this.attach_Employees), new Action<Employee>(this.detach_Employees));
			this._Cards = new EntitySet<Card>(new Action<Card>(this.attach_Cards), new Action<Card>(this.detach_Cards));
			this._Department = default(EntityRef<Department>);
			this._Employee1 = default(EntityRef<Employee>);
			this._Organisation = default(EntityRef<Organisation>);
			this._Photo = default(EntityRef<Photo>);
			this._Position = default(EntityRef<Position>);
			this._Schedule = default(EntityRef<Schedule>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UID
		{
			get
			{
				return this._UID;
			}
			set
			{
				if ((this._UID != value))
				{
					this.OnUIDChanging(value);
					this.SendPropertyChanging();
					this._UID = value;
					this.SendPropertyChanged("UID");
					this.OnUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(50)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecondName", DbType="NVarChar(50)")]
		public string SecondName
		{
			get
			{
				return this._SecondName;
			}
			set
			{
				if ((this._SecondName != value))
				{
					this.OnSecondNameChanging(value);
					this.SendPropertyChanging();
					this._SecondName = value;
					this.SendPropertyChanged("SecondName");
					this.OnSecondNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(50)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhotoUID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PhotoUID
		{
			get
			{
				return this._PhotoUID;
			}
			set
			{
				if ((this._PhotoUID != value))
				{
					if (this._Photo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPhotoUIDChanging(value);
					this.SendPropertyChanging();
					this._PhotoUID = value;
					this.SendPropertyChanged("PhotoUID");
					this.OnPhotoUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PositionUID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PositionUID
		{
			get
			{
				return this._PositionUID;
			}
			set
			{
				if ((this._PositionUID != value))
				{
					if (this._Position.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPositionUIDChanging(value);
					this.SendPropertyChanging();
					this._PositionUID = value;
					this.SendPropertyChanged("PositionUID");
					this.OnPositionUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentUID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> DepartmentUID
		{
			get
			{
				return this._DepartmentUID;
			}
			set
			{
				if ((this._DepartmentUID != value))
				{
					if (this._Department.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDepartmentUIDChanging(value);
					this.SendPropertyChanging();
					this._DepartmentUID = value;
					this.SendPropertyChanged("DepartmentUID");
					this.OnDepartmentUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScheduleUID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ScheduleUID
		{
			get
			{
				return this._ScheduleUID;
			}
			set
			{
				if ((this._ScheduleUID != value))
				{
					if (this._Schedule.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnScheduleUIDChanging(value);
					this.SendPropertyChanging();
					this._ScheduleUID = value;
					this.SendPropertyChanged("ScheduleUID");
					this.OnScheduleUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScheduleStartDate", DbType="DateTime NOT NULL")]
		public System.DateTime ScheduleStartDate
		{
			get
			{
				return this._ScheduleStartDate;
			}
			set
			{
				if ((this._ScheduleStartDate != value))
				{
					this.OnScheduleStartDateChanging(value);
					this.SendPropertyChanging();
					this._ScheduleStartDate = value;
					this.SendPropertyChanged("ScheduleStartDate");
					this.OnScheduleStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int")]
		public System.Nullable<int> Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TabelNo", DbType="NVarChar(50)")]
		public string TabelNo
		{
			get
			{
				return this._TabelNo;
			}
			set
			{
				if ((this._TabelNo != value))
				{
					this.OnTabelNoChanging(value);
					this.SendPropertyChanging();
					this._TabelNo = value;
					this.SendPropertyChanged("TabelNo");
					this.OnTabelNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CredentialsStartDate", DbType="DateTime NOT NULL")]
		public System.DateTime CredentialsStartDate
		{
			get
			{
				return this._CredentialsStartDate;
			}
			set
			{
				if ((this._CredentialsStartDate != value))
				{
					this.OnCredentialsStartDateChanging(value);
					this.SendPropertyChanging();
					this._CredentialsStartDate = value;
					this.SendPropertyChanged("CredentialsStartDate");
					this.OnCredentialsStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EscortUID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> EscortUID
		{
			get
			{
				return this._EscortUID;
			}
			set
			{
				if ((this._EscortUID != value))
				{
					if (this._Employee1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEscortUIDChanging(value);
					this.SendPropertyChanging();
					this._EscortUID = value;
					this.SendPropertyChanged("EscortUID");
					this.OnEscortUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RemovalDate", DbType="DateTime NOT NULL")]
		public System.DateTime RemovalDate
		{
			get
			{
				return this._RemovalDate;
			}
			set
			{
				if ((this._RemovalDate != value))
				{
					this.OnRemovalDateChanging(value);
					this.SendPropertyChanging();
					this._RemovalDate = value;
					this.SendPropertyChanged("RemovalDate");
					this.OnRemovalDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrganisationUID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> OrganisationUID
		{
			get
			{
				return this._OrganisationUID;
			}
			set
			{
				if ((this._OrganisationUID != value))
				{
					if (this._Organisation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrganisationUIDChanging(value);
					this.SendPropertyChanging();
					this._OrganisationUID = value;
					this.SendPropertyChanged("OrganisationUID");
					this.OnOrganisationUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentNumber", DbType="NVarChar(50)")]
		public string DocumentNumber
		{
			get
			{
				return this._DocumentNumber;
			}
			set
			{
				if ((this._DocumentNumber != value))
				{
					this.OnDocumentNumberChanging(value);
					this.SendPropertyChanging();
					this._DocumentNumber = value;
					this.SendPropertyChanged("DocumentNumber");
					this.OnDocumentNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthDate", DbType="DateTime NOT NULL")]
		public System.Nullable<System.DateTime> BirthDate
		{
			get
			{
				return this._BirthDate;
			}
			set
			{
				if ((this._BirthDate != value))
				{
					this.OnBirthDateChanging(value);
					this.SendPropertyChanging();
					this._BirthDate = value;
					this.SendPropertyChanged("BirthDate");
					this.OnBirthDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthPlace", DbType="NVarChar(MAX)")]
		public string BirthPlace
		{
			get
			{
				return this._BirthPlace;
			}
			set
			{
				if ((this._BirthPlace != value))
				{
					this.OnBirthPlaceChanging(value);
					this.SendPropertyChanging();
					this._BirthPlace = value;
					this.SendPropertyChanged("BirthPlace");
					this.OnBirthPlaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentGivenDate", DbType="DateTime NOT NULL")]
		public System.Nullable<System.DateTime> DocumentGivenDate
		{
			get
			{
				return this._DocumentGivenDate;
			}
			set
			{
				if ((this._DocumentGivenDate != value))
				{
					this.OnDocumentGivenDateChanging(value);
					this.SendPropertyChanging();
					this._DocumentGivenDate = value;
					this.SendPropertyChanged("DocumentGivenDate");
					this.OnDocumentGivenDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentGivenBy", DbType="NVarChar(MAX)")]
		public string DocumentGivenBy
		{
			get
			{
				return this._DocumentGivenBy;
			}
			set
			{
				if ((this._DocumentGivenBy != value))
				{
					this.OnDocumentGivenByChanging(value);
					this.SendPropertyChanging();
					this._DocumentGivenBy = value;
					this.SendPropertyChanged("DocumentGivenBy");
					this.OnDocumentGivenByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentValidTo", DbType="DateTime NOT NULL")]
		public System.Nullable<System.DateTime> DocumentValidTo
		{
			get
			{
				return this._DocumentValidTo;
			}
			set
			{
				if ((this._DocumentValidTo != value))
				{
					this.OnDocumentValidToChanging(value);
					this.SendPropertyChanging();
					this._DocumentValidTo = value;
					this.SendPropertyChanged("DocumentValidTo");
					this.OnDocumentValidToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="Int NULL")]
		public System.Nullable<int> Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentDepartmentCode", DbType="NVarChar(50)")]
		public string DocumentDepartmentCode
		{
			get
			{
				return this._DocumentDepartmentCode;
			}
			set
			{
				if ((this._DocumentDepartmentCode != value))
				{
					this.OnDocumentDepartmentCodeChanging(value);
					this.SendPropertyChanging();
					this._DocumentDepartmentCode = value;
					this.SendPropertyChanged("DocumentDepartmentCode");
					this.OnDocumentDepartmentCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Citizenship", DbType="NVarChar(MAX)")]
		public string Citizenship
		{
			get
			{
				return this._Citizenship;
			}
			set
			{
				if ((this._Citizenship != value))
				{
					this.OnCitizenshipChanging(value);
					this.SendPropertyChanging();
					this._Citizenship = value;
					this.SendPropertyChanged("Citizenship");
					this.OnCitizenshipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentType", DbType="Int NULL")]
		public System.Nullable<int> DocumentType
		{
			get
			{
				return this._DocumentType;
			}
			set
			{
				if ((this._DocumentType != value))
				{
					this.OnDocumentTypeChanging(value);
					this.SendPropertyChanging();
					this._DocumentType = value;
					this.SendPropertyChanged("DocumentType");
					this.OnDocumentTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(50)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastEmployeeDayUpdate", DbType="DateTime NOT NULL")]
		public System.DateTime LastEmployeeDayUpdate
		{
			get
			{
				return this._LastEmployeeDayUpdate;
			}
			set
			{
				if ((this._LastEmployeeDayUpdate != value))
				{
					this.OnLastEmployeeDayUpdateChanging(value);
					this.SendPropertyChanging();
					this._LastEmployeeDayUpdate = value;
					this.SendPropertyChanged("LastEmployeeDayUpdate");
					this.OnLastEmployeeDayUpdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternalKey", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
		public string ExternalKey
		{
			get
			{
				return this._ExternalKey;
			}
			set
			{
				if ((this._ExternalKey != value))
				{
					this.OnExternalKeyChanging(value);
					this.SendPropertyChanging();
					this._ExternalKey = value;
					this.SendPropertyChanged("ExternalKey");
					this.OnExternalKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_AdditionalColumn", Storage="_AdditionalColumns", ThisKey="UID", OtherKey="EmployeeUID")]
		public EntitySet<AdditionalColumn> AdditionalColumns
		{
			get
			{
				return this._AdditionalColumns;
			}
			set
			{
				this._AdditionalColumns.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Department", Storage="_Departments", ThisKey="UID", OtherKey="ChiefUID")]
		public EntitySet<Department> Departments
		{
			get
			{
				return this._Departments;
			}
			set
			{
				this._Departments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Department1", Storage="_Departments1", ThisKey="UID", OtherKey="ContactEmployeeUID")]
		public EntitySet<Department> Departments1
		{
			get
			{
				return this._Departments1;
			}
			set
			{
				this._Departments1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Department2", Storage="_Departments2", ThisKey="UID", OtherKey="AttendantUID")]
		public EntitySet<Department> Departments2
		{
			get
			{
				return this._Departments2;
			}
			set
			{
				this._Departments2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Organisation", Storage="_Organisations", ThisKey="UID", OtherKey="ChiefUID")]
		public EntitySet<Organisation> Organisations
		{
			get
			{
				return this._Organisations;
			}
			set
			{
				this._Organisations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Organisation1", Storage="_Organisations1", ThisKey="UID", OtherKey="HRChiefUID")]
		public EntitySet<Organisation> Organisations1
		{
			get
			{
				return this._Organisations1;
			}
			set
			{
				this._Organisations1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_TimeTrackException", Storage="_TimeTrackExceptions", ThisKey="UID", OtherKey="EmployeeUID")]
		public EntitySet<TimeTrackException> TimeTrackExceptions
		{
			get
			{
				return this._TimeTrackExceptions;
			}
			set
			{
				this._TimeTrackExceptions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Employee", Storage="_Employees", ThisKey="UID", OtherKey="EscortUID")]
		public EntitySet<Employee> Employees
		{
			get
			{
				return this._Employees;
			}
			set
			{
				this._Employees.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Card", Storage="_Cards", ThisKey="UID", OtherKey="EmployeeUID")]
		public EntitySet<Card> Cards
		{
			get
			{
				return this._Cards;
			}
			set
			{
				this._Cards.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Employee", Storage="_Department", ThisKey="DepartmentUID", OtherKey="UID", IsForeignKey=true)]
		public Department Department
		{
			get
			{
				return this._Department.Entity;
			}
			set
			{
				Department previousValue = this._Department.Entity;
				if (((previousValue != value) 
							|| (this._Department.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Department.Entity = null;
						previousValue.Employees.Remove(this);
					}
					this._Department.Entity = value;
					if ((value != null))
					{
						value.Employees.Add(this);
						this._DepartmentUID = value.UID;
					}
					else
					{
						this._DepartmentUID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Department");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Employee", Storage="_Employee1", ThisKey="EscortUID", OtherKey="UID", IsForeignKey=true)]
		public Employee Employee1
		{
			get
			{
				return this._Employee1.Entity;
			}
			set
			{
				Employee previousValue = this._Employee1.Entity;
				if (((previousValue != value) 
							|| (this._Employee1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee1.Entity = null;
						previousValue.Employees.Remove(this);
					}
					this._Employee1.Entity = value;
					if ((value != null))
					{
						value.Employees.Add(this);
						this._EscortUID = value.UID;
					}
					else
					{
						this._EscortUID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Employee1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organisation_Employee", Storage="_Organisation", ThisKey="OrganisationUID", OtherKey="UID", IsForeignKey=true)]
		public Organisation Organisation
		{
			get
			{
				return this._Organisation.Entity;
			}
			set
			{
				Organisation previousValue = this._Organisation.Entity;
				if (((previousValue != value) 
							|| (this._Organisation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Organisation.Entity = null;
						previousValue.Employees.Remove(this);
					}
					this._Organisation.Entity = value;
					if ((value != null))
					{
						value.Employees.Add(this);
						this._OrganisationUID = value.UID;
					}
					else
					{
						this._OrganisationUID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Organisation");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Photo_Employee", Storage="_Photo", ThisKey="PhotoUID", OtherKey="UID", IsForeignKey=true)]
		public Photo Photo
		{
			get
			{
				return this._Photo.Entity;
			}
			set
			{
				Photo previousValue = this._Photo.Entity;
				if (((previousValue != value) 
							|| (this._Photo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Photo.Entity = null;
						previousValue.Employees.Remove(this);
					}
					this._Photo.Entity = value;
					if ((value != null))
					{
						value.Employees.Add(this);
						this._PhotoUID = value.UID;
					}
					else
					{
						this._PhotoUID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Photo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Position_Employee", Storage="_Position", ThisKey="PositionUID", OtherKey="UID", IsForeignKey=true)]
		public Position Position
		{
			get
			{
				return this._Position.Entity;
			}
			set
			{
				Position previousValue = this._Position.Entity;
				if (((previousValue != value) 
							|| (this._Position.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Position.Entity = null;
						previousValue.Employees.Remove(this);
					}
					this._Position.Entity = value;
					if ((value != null))
					{
						value.Employees.Add(this);
						this._PositionUID = value.UID;
					}
					else
					{
						this._PositionUID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Position");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Schedule_Employee", Storage="_Schedule", ThisKey="ScheduleUID", OtherKey="UID", IsForeignKey=true)]
		public Schedule Schedule
		{
			get
			{
				return this._Schedule.Entity;
			}
			set
			{
				Schedule previousValue = this._Schedule.Entity;
				if (((previousValue != value) 
							|| (this._Schedule.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Schedule.Entity = null;
						previousValue.Employees.Remove(this);
					}
					this._Schedule.Entity = value;
					if ((value != null))
					{
						value.Employees.Add(this);
						this._ScheduleUID = value.UID;
					}
					else
					{
						this._ScheduleUID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Schedule");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AdditionalColumns(AdditionalColumn entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_AdditionalColumns(AdditionalColumn entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
		
		private void attach_Departments(Department entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_Departments(Department entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
		
		private void attach_Departments1(Department entity)
		{
			this.SendPropertyChanging();
			entity.Employee1 = this;
		}
		
		private void detach_Departments1(Department entity)
		{
			this.SendPropertyChanging();
			entity.Employee1 = null;
		}
		
		private void attach_Departments2(Department entity)
		{
			this.SendPropertyChanging();
			entity.Employee2 = this;
		}
		
		private void detach_Departments2(Department entity)
		{
			this.SendPropertyChanging();
			entity.Employee2 = null;
		}
		
		private void attach_Organisations(Organisation entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_Organisations(Organisation entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
		
		private void attach_Organisations1(Organisation entity)
		{
			this.SendPropertyChanging();
			entity.Employee1 = this;
		}
		
		private void detach_Organisations1(Organisation entity)
		{
			this.SendPropertyChanging();
			entity.Employee1 = null;
		}
		
		private void attach_TimeTrackExceptions(TimeTrackException entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_TimeTrackExceptions(TimeTrackException entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
		
		private void attach_Employees(Employee entity)
		{
			this.SendPropertyChanging();
			entity.Employee1 = this;
		}
		
		private void detach_Employees(Employee entity)
		{
			this.SendPropertyChanging();
			entity.Employee1 = null;
		}
		
		private void attach_Cards(Card entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_Cards(Card entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TimeTrackDocument")]
	public partial class TimeTrackDocument : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UID;
		
		private System.Guid _EmployeeUID;
		
		private System.DateTime _StartDateTime;
		
		private System.DateTime _EndDateTime;
		
		private int _DocumentCode;
		
		private string _Comment;
		
		private System.DateTime _DocumentDateTime;
		
		private int _DocumentNumber;
		
		private string _FileName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUIDChanging(System.Guid value);
    partial void OnUIDChanged();
    partial void OnEmployeeUIDChanging(System.Guid value);
    partial void OnEmployeeUIDChanged();
    partial void OnStartDateTimeChanging(System.DateTime value);
    partial void OnStartDateTimeChanged();
    partial void OnEndDateTimeChanging(System.DateTime value);
    partial void OnEndDateTimeChanged();
    partial void OnDocumentCodeChanging(int value);
    partial void OnDocumentCodeChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnDocumentDateTimeChanging(System.DateTime value);
    partial void OnDocumentDateTimeChanged();
    partial void OnDocumentNumberChanging(int value);
    partial void OnDocumentNumberChanged();
    partial void OnFileNameChanging(string value);
    partial void OnFileNameChanged();
    #endregion
		
		public TimeTrackDocument()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UID
		{
			get
			{
				return this._UID;
			}
			set
			{
				if ((this._UID != value))
				{
					this.OnUIDChanging(value);
					this.SendPropertyChanging();
					this._UID = value;
					this.SendPropertyChanged("UID");
					this.OnUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeUID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid EmployeeUID
		{
			get
			{
				return this._EmployeeUID;
			}
			set
			{
				if ((this._EmployeeUID != value))
				{
					this.OnEmployeeUIDChanging(value);
					this.SendPropertyChanging();
					this._EmployeeUID = value;
					this.SendPropertyChanged("EmployeeUID");
					this.OnEmployeeUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime StartDateTime
		{
			get
			{
				return this._StartDateTime;
			}
			set
			{
				if ((this._StartDateTime != value))
				{
					this.OnStartDateTimeChanging(value);
					this.SendPropertyChanging();
					this._StartDateTime = value;
					this.SendPropertyChanged("StartDateTime");
					this.OnStartDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime EndDateTime
		{
			get
			{
				return this._EndDateTime;
			}
			set
			{
				if ((this._EndDateTime != value))
				{
					this.OnEndDateTimeChanging(value);
					this.SendPropertyChanging();
					this._EndDateTime = value;
					this.SendPropertyChanged("EndDateTime");
					this.OnEndDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentCode", DbType="Int NOT NULL")]
		public int DocumentCode
		{
			get
			{
				return this._DocumentCode;
			}
			set
			{
				if ((this._DocumentCode != value))
				{
					this.OnDocumentCodeChanging(value);
					this.SendPropertyChanging();
					this._DocumentCode = value;
					this.SendPropertyChanged("DocumentCode");
					this.OnDocumentCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(100)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime DocumentDateTime
		{
			get
			{
				return this._DocumentDateTime;
			}
			set
			{
				if ((this._DocumentDateTime != value))
				{
					this.OnDocumentDateTimeChanging(value);
					this.SendPropertyChanging();
					this._DocumentDateTime = value;
					this.SendPropertyChanged("DocumentDateTime");
					this.OnDocumentDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentNumber", DbType="Int NOT NULL")]
		public int DocumentNumber
		{
			get
			{
				return this._DocumentNumber;
			}
			set
			{
				if ((this._DocumentNumber != value))
				{
					this.OnDocumentNumberChanging(value);
					this.SendPropertyChanging();
					this._DocumentNumber = value;
					this.SendPropertyChanged("DocumentNumber");
					this.OnDocumentNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="NVarChar(100)")]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this.OnFileNameChanging(value);
					this.SendPropertyChanging();
					this._FileName = value;
					this.SendPropertyChanged("FileName");
					this.OnFileNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Card")]
	public partial class Card : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UID;
		
		private int _Number;
		
		private System.Nullable<System.Guid> _EmployeeUID;
		
		private System.Nullable<System.Guid> _AccessTemplateUID;
		
		private System.Nullable<int> _CardType;
		
		private System.DateTime _StartDate;
		
		private System.DateTime _EndDate;
		
		private bool _IsInStopList;
		
		private string _StopReason;
		
		private System.Nullable<System.Guid> _PassCardTemplateUID;
		
		private string _Password;
		
		private System.Nullable<System.Guid> _DeactivationControllerUID;
		
		private int _UserTime;
		
		private string _ExternalKey;
		
		private bool _IsHandicappedCard;
		
		private EntitySet<CardDoor> _CardDoors;
		
		private EntitySet<PendingCard> _PendingCards;
		
		private EntityRef<AccessTemplate> _AccessTemplate;
		
		private EntityRef<Employee> _Employee;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUIDChanging(System.Guid value);
    partial void OnUIDChanged();
    partial void OnNumberChanging(int value);
    partial void OnNumberChanged();
    partial void OnEmployeeUIDChanging(System.Nullable<System.Guid> value);
    partial void OnEmployeeUIDChanged();
    partial void OnAccessTemplateUIDChanging(System.Nullable<System.Guid> value);
    partial void OnAccessTemplateUIDChanged();
    partial void OnCardTypeChanging(System.Nullable<int> value);
    partial void OnCardTypeChanged();
    partial void OnStartDateChanging(System.DateTime value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.DateTime value);
    partial void OnEndDateChanged();
    partial void OnIsInStopListChanging(bool value);
    partial void OnIsInStopListChanged();
    partial void OnStopReasonChanging(string value);
    partial void OnStopReasonChanged();
    partial void OnPassCardTemplateUIDChanging(System.Nullable<System.Guid> value);
    partial void OnPassCardTemplateUIDChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnDeactivationControllerUIDChanging(System.Nullable<System.Guid> value);
    partial void OnDeactivationControllerUIDChanged();
    partial void OnUserTimeChanging(int value);
    partial void OnUserTimeChanged();
    partial void OnExternalKeyChanging(string value);
    partial void OnExternalKeyChanged();
    partial void OnIsHandicappedCardChanging(bool value);
    partial void OnIsHandicappedCardChanged();
    #endregion
		
		public Card()
		{
			this._CardDoors = new EntitySet<CardDoor>(new Action<CardDoor>(this.attach_CardDoors), new Action<CardDoor>(this.detach_CardDoors));
			this._PendingCards = new EntitySet<PendingCard>(new Action<PendingCard>(this.attach_PendingCards), new Action<PendingCard>(this.detach_PendingCards));
			this._AccessTemplate = default(EntityRef<AccessTemplate>);
			this._Employee = default(EntityRef<Employee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UID
		{
			get
			{
				return this._UID;
			}
			set
			{
				if ((this._UID != value))
				{
					this.OnUIDChanging(value);
					this.SendPropertyChanging();
					this._UID = value;
					this.SendPropertyChanged("UID");
					this.OnUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Number", DbType="Int NOT NULL")]
		public int Number
		{
			get
			{
				return this._Number;
			}
			set
			{
				if ((this._Number != value))
				{
					this.OnNumberChanging(value);
					this.SendPropertyChanging();
					this._Number = value;
					this.SendPropertyChanged("Number");
					this.OnNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeUID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> EmployeeUID
		{
			get
			{
				return this._EmployeeUID;
			}
			set
			{
				if ((this._EmployeeUID != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeUIDChanging(value);
					this.SendPropertyChanging();
					this._EmployeeUID = value;
					this.SendPropertyChanged("EmployeeUID");
					this.OnEmployeeUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccessTemplateUID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> AccessTemplateUID
		{
			get
			{
				return this._AccessTemplateUID;
			}
			set
			{
				if ((this._AccessTemplateUID != value))
				{
					if (this._AccessTemplate.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccessTemplateUIDChanging(value);
					this.SendPropertyChanging();
					this._AccessTemplateUID = value;
					this.SendPropertyChanged("AccessTemplateUID");
					this.OnAccessTemplateUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CardType", DbType="Int")]
		public System.Nullable<int> CardType
		{
			get
			{
				return this._CardType;
			}
			set
			{
				if ((this._CardType != value))
				{
					this.OnCardTypeChanging(value);
					this.SendPropertyChanging();
					this._CardType = value;
					this.SendPropertyChanged("CardType");
					this.OnCardTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime NOT NULL")]
		public System.DateTime StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime NOT NULL")]
		public System.DateTime EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsInStopList", DbType="Bit NOT NULL")]
		public bool IsInStopList
		{
			get
			{
				return this._IsInStopList;
			}
			set
			{
				if ((this._IsInStopList != value))
				{
					this.OnIsInStopListChanging(value);
					this.SendPropertyChanging();
					this._IsInStopList = value;
					this.SendPropertyChanged("IsInStopList");
					this.OnIsInStopListChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StopReason", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string StopReason
		{
			get
			{
				return this._StopReason;
			}
			set
			{
				if ((this._StopReason != value))
				{
					this.OnStopReasonChanging(value);
					this.SendPropertyChanging();
					this._StopReason = value;
					this.SendPropertyChanged("StopReason");
					this.OnStopReasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PassCardTemplateUID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PassCardTemplateUID
		{
			get
			{
				return this._PassCardTemplateUID;
			}
			set
			{
				if ((this._PassCardTemplateUID != value))
				{
					this.OnPassCardTemplateUIDChanging(value);
					this.SendPropertyChanging();
					this._PassCardTemplateUID = value;
					this.SendPropertyChanged("PassCardTemplateUID");
					this.OnPassCardTemplateUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(50)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeactivationControllerUID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> DeactivationControllerUID
		{
			get
			{
				return this._DeactivationControllerUID;
			}
			set
			{
				if ((this._DeactivationControllerUID != value))
				{
					this.OnDeactivationControllerUIDChanging(value);
					this.SendPropertyChanging();
					this._DeactivationControllerUID = value;
					this.SendPropertyChanged("DeactivationControllerUID");
					this.OnDeactivationControllerUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserTime", DbType="Int NOT NULL")]
		public int UserTime
		{
			get
			{
				return this._UserTime;
			}
			set
			{
				if ((this._UserTime != value))
				{
					this.OnUserTimeChanging(value);
					this.SendPropertyChanging();
					this._UserTime = value;
					this.SendPropertyChanged("UserTime");
					this.OnUserTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternalKey", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
		public string ExternalKey
		{
			get
			{
				return this._ExternalKey;
			}
			set
			{
				if ((this._ExternalKey != value))
				{
					this.OnExternalKeyChanging(value);
					this.SendPropertyChanging();
					this._ExternalKey = value;
					this.SendPropertyChanged("ExternalKey");
					this.OnExternalKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsHandicappedCard")]
		public bool IsHandicappedCard
		{
			get
			{
				return this._IsHandicappedCard;
			}
			set
			{
				if ((this._IsHandicappedCard != value))
				{
					this.OnIsHandicappedCardChanging(value);
					this.SendPropertyChanging();
					this._IsHandicappedCard = value;
					this.SendPropertyChanged("IsHandicappedCard");
					this.OnIsHandicappedCardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Card_CardDoor", Storage="_CardDoors", ThisKey="UID", OtherKey="CardUID")]
		public EntitySet<CardDoor> CardDoors
		{
			get
			{
				return this._CardDoors;
			}
			set
			{
				this._CardDoors.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Card_PendingCard", Storage="_PendingCards", ThisKey="UID", OtherKey="CardUID")]
		public EntitySet<PendingCard> PendingCards
		{
			get
			{
				return this._PendingCards;
			}
			set
			{
				this._PendingCards.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AccessTemplate_Card", Storage="_AccessTemplate", ThisKey="AccessTemplateUID", OtherKey="UID", IsForeignKey=true)]
		public AccessTemplate AccessTemplate
		{
			get
			{
				return this._AccessTemplate.Entity;
			}
			set
			{
				AccessTemplate previousValue = this._AccessTemplate.Entity;
				if (((previousValue != value) 
							|| (this._AccessTemplate.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AccessTemplate.Entity = null;
						previousValue.Cards.Remove(this);
					}
					this._AccessTemplate.Entity = value;
					if ((value != null))
					{
						value.Cards.Add(this);
						this._AccessTemplateUID = value.UID;
					}
					else
					{
						this._AccessTemplateUID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("AccessTemplate");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Card", Storage="_Employee", ThisKey="EmployeeUID", OtherKey="UID", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.Cards.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.Cards.Add(this);
						this._EmployeeUID = value.UID;
					}
					else
					{
						this._EmployeeUID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CardDoors(CardDoor entity)
		{
			this.SendPropertyChanging();
			entity.Card = this;
		}
		
		private void detach_CardDoors(CardDoor entity)
		{
			this.SendPropertyChanging();
			entity.Card = null;
		}
		
		private void attach_PendingCards(PendingCard entity)
		{
			this.SendPropertyChanging();
			entity.Card = this;
		}
		
		private void detach_PendingCards(PendingCard entity)
		{
			this.SendPropertyChanging();
			entity.Card = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GKScheduleDay")]
	public partial class GKScheduleDay : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UID;
		
		private System.Guid _ScheduleUID;
		
		private System.DateTime _DateTime;
		
		private EntityRef<GKSchedule> _GKSchedule;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUIDChanging(System.Guid value);
    partial void OnUIDChanged();
    partial void OnScheduleUIDChanging(System.Guid value);
    partial void OnScheduleUIDChanged();
    partial void OnDateTimeChanging(System.DateTime value);
    partial void OnDateTimeChanged();
    #endregion
		
		public GKScheduleDay()
		{
			this._GKSchedule = default(EntityRef<GKSchedule>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UID
		{
			get
			{
				return this._UID;
			}
			set
			{
				if ((this._UID != value))
				{
					this.OnUIDChanging(value);
					this.SendPropertyChanging();
					this._UID = value;
					this.SendPropertyChanged("UID");
					this.OnUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScheduleUID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ScheduleUID
		{
			get
			{
				return this._ScheduleUID;
			}
			set
			{
				if ((this._ScheduleUID != value))
				{
					if (this._GKSchedule.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnScheduleUIDChanging(value);
					this.SendPropertyChanging();
					this._ScheduleUID = value;
					this.SendPropertyChanged("ScheduleUID");
					this.OnScheduleUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateTime", DbType="DateTime NOT NULL")]
		public System.DateTime DateTime
		{
			get
			{
				return this._DateTime;
			}
			set
			{
				if ((this._DateTime != value))
				{
					this.OnDateTimeChanging(value);
					this.SendPropertyChanging();
					this._DateTime = value;
					this.SendPropertyChanged("DateTime");
					this.OnDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GKSchedule_GKScheduleDay", Storage="_GKSchedule", ThisKey="ScheduleUID", OtherKey="UID", IsForeignKey=true)]
		public GKSchedule GKSchedule
		{
			get
			{
				return this._GKSchedule.Entity;
			}
			set
			{
				GKSchedule previousValue = this._GKSchedule.Entity;
				if (((previousValue != value) 
							|| (this._GKSchedule.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GKSchedule.Entity = null;
						previousValue.GKScheduleDays.Remove(this);
					}
					this._GKSchedule.Entity = value;
					if ((value != null))
					{
						value.GKScheduleDays.Add(this);
						this._ScheduleUID = value.UID;
					}
					else
					{
						this._ScheduleUID = default(System.Guid);
					}
					this.SendPropertyChanged("GKSchedule");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GKDaySchedule")]
	public partial class GKDaySchedule : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UID;
		
		private int _No;
		
		private string _Name;
		
		private string _Description;
		
		private EntitySet<GKDaySchedulePart> _GKDayScheduleParts;
		
		private EntitySet<ScheduleGKDaySchedule> _ScheduleGKDaySchedules;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUIDChanging(System.Guid value);
    partial void OnUIDChanged();
    partial void OnNoChanging(int value);
    partial void OnNoChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public GKDaySchedule()
		{
			this._GKDayScheduleParts = new EntitySet<GKDaySchedulePart>(new Action<GKDaySchedulePart>(this.attach_GKDayScheduleParts), new Action<GKDaySchedulePart>(this.detach_GKDayScheduleParts));
			this._ScheduleGKDaySchedules = new EntitySet<ScheduleGKDaySchedule>(new Action<ScheduleGKDaySchedule>(this.attach_ScheduleGKDaySchedules), new Action<ScheduleGKDaySchedule>(this.detach_ScheduleGKDaySchedules));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UID
		{
			get
			{
				return this._UID;
			}
			set
			{
				if ((this._UID != value))
				{
					this.OnUIDChanging(value);
					this.SendPropertyChanging();
					this._UID = value;
					this.SendPropertyChanged("UID");
					this.OnUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_No", DbType="Int NOT NULL")]
		public int No
		{
			get
			{
				return this._No;
			}
			set
			{
				if ((this._No != value))
				{
					this.OnNoChanging(value);
					this.SendPropertyChanging();
					this._No = value;
					this.SendPropertyChanged("No");
					this.OnNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(50)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GKDaySchedule_GKDaySchedulePart", Storage="_GKDayScheduleParts", ThisKey="UID", OtherKey="DayScheduleUID")]
		public EntitySet<GKDaySchedulePart> GKDayScheduleParts
		{
			get
			{
				return this._GKDayScheduleParts;
			}
			set
			{
				this._GKDayScheduleParts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GKDaySchedule_ScheduleGKDaySchedule", Storage="_ScheduleGKDaySchedules", ThisKey="UID", OtherKey="DayScheduleUID")]
		public EntitySet<ScheduleGKDaySchedule> ScheduleGKDaySchedules
		{
			get
			{
				return this._ScheduleGKDaySchedules;
			}
			set
			{
				this._ScheduleGKDaySchedules.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GKDayScheduleParts(GKDaySchedulePart entity)
		{
			this.SendPropertyChanging();
			entity.GKDaySchedule = this;
		}
		
		private void detach_GKDayScheduleParts(GKDaySchedulePart entity)
		{
			this.SendPropertyChanging();
			entity.GKDaySchedule = null;
		}
		
		private void attach_ScheduleGKDaySchedules(ScheduleGKDaySchedule entity)
		{
			this.SendPropertyChanging();
			entity.GKDaySchedule = this;
		}
		
		private void detach_ScheduleGKDaySchedules(ScheduleGKDaySchedule entity)
		{
			this.SendPropertyChanging();
			entity.GKDaySchedule = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GKDaySchedulePart")]
	public partial class GKDaySchedulePart : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UID;
		
		private int _No;
		
		private string _Name;
		
		private string _Description;
		
		private double _StartMilliseconds;
		
		private double _EndMilliseconds;
		
		private System.Guid _DayScheduleUID;
		
		private EntityRef<GKDaySchedule> _GKDaySchedule;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUIDChanging(System.Guid value);
    partial void OnUIDChanged();
    partial void OnNoChanging(int value);
    partial void OnNoChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnStartMillisecondsChanging(double value);
    partial void OnStartMillisecondsChanged();
    partial void OnEndMillisecondsChanging(double value);
    partial void OnEndMillisecondsChanged();
    partial void OnDayScheduleUIDChanging(System.Guid value);
    partial void OnDayScheduleUIDChanged();
    #endregion
		
		public GKDaySchedulePart()
		{
			this._GKDaySchedule = default(EntityRef<GKDaySchedule>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UID
		{
			get
			{
				return this._UID;
			}
			set
			{
				if ((this._UID != value))
				{
					this.OnUIDChanging(value);
					this.SendPropertyChanging();
					this._UID = value;
					this.SendPropertyChanged("UID");
					this.OnUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_No", DbType="Int NOT NULL")]
		public int No
		{
			get
			{
				return this._No;
			}
			set
			{
				if ((this._No != value))
				{
					this.OnNoChanging(value);
					this.SendPropertyChanging();
					this._No = value;
					this.SendPropertyChanged("No");
					this.OnNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(50)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartMilliseconds", DbType="Float NOT NULL")]
		public double StartMilliseconds
		{
			get
			{
				return this._StartMilliseconds;
			}
			set
			{
				if ((this._StartMilliseconds != value))
				{
					this.OnStartMillisecondsChanging(value);
					this.SendPropertyChanging();
					this._StartMilliseconds = value;
					this.SendPropertyChanged("StartMilliseconds");
					this.OnStartMillisecondsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndMilliseconds", DbType="Float NOT NULL")]
		public double EndMilliseconds
		{
			get
			{
				return this._EndMilliseconds;
			}
			set
			{
				if ((this._EndMilliseconds != value))
				{
					this.OnEndMillisecondsChanging(value);
					this.SendPropertyChanging();
					this._EndMilliseconds = value;
					this.SendPropertyChanged("EndMilliseconds");
					this.OnEndMillisecondsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DayScheduleUID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid DayScheduleUID
		{
			get
			{
				return this._DayScheduleUID;
			}
			set
			{
				if ((this._DayScheduleUID != value))
				{
					if (this._GKDaySchedule.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDayScheduleUIDChanging(value);
					this.SendPropertyChanging();
					this._DayScheduleUID = value;
					this.SendPropertyChanged("DayScheduleUID");
					this.OnDayScheduleUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GKDaySchedule_GKDaySchedulePart", Storage="_GKDaySchedule", ThisKey="DayScheduleUID", OtherKey="UID", IsForeignKey=true)]
		public GKDaySchedule GKDaySchedule
		{
			get
			{
				return this._GKDaySchedule.Entity;
			}
			set
			{
				GKDaySchedule previousValue = this._GKDaySchedule.Entity;
				if (((previousValue != value) 
							|| (this._GKDaySchedule.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GKDaySchedule.Entity = null;
						previousValue.GKDayScheduleParts.Remove(this);
					}
					this._GKDaySchedule.Entity = value;
					if ((value != null))
					{
						value.GKDayScheduleParts.Add(this);
						this._DayScheduleUID = value.UID;
					}
					else
					{
						this._DayScheduleUID = default(System.Guid);
					}
					this.SendPropertyChanged("GKDaySchedule");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ScheduleGKDaySchedule")]
	public partial class ScheduleGKDaySchedule : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UID;
		
		private System.Guid _ScheduleUID;
		
		private System.Guid _DayScheduleUID;
		
		private EntityRef<GKDaySchedule> _GKDaySchedule;
		
		private EntityRef<GKSchedule> _GKSchedule;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUIDChanging(System.Guid value);
    partial void OnUIDChanged();
    partial void OnScheduleUIDChanging(System.Guid value);
    partial void OnScheduleUIDChanged();
    partial void OnDayScheduleUIDChanging(System.Guid value);
    partial void OnDayScheduleUIDChanged();
    #endregion
		
		public ScheduleGKDaySchedule()
		{
			this._GKDaySchedule = default(EntityRef<GKDaySchedule>);
			this._GKSchedule = default(EntityRef<GKSchedule>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UID
		{
			get
			{
				return this._UID;
			}
			set
			{
				if ((this._UID != value))
				{
					this.OnUIDChanging(value);
					this.SendPropertyChanging();
					this._UID = value;
					this.SendPropertyChanged("UID");
					this.OnUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScheduleUID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ScheduleUID
		{
			get
			{
				return this._ScheduleUID;
			}
			set
			{
				if ((this._ScheduleUID != value))
				{
					if (this._GKSchedule.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnScheduleUIDChanging(value);
					this.SendPropertyChanging();
					this._ScheduleUID = value;
					this.SendPropertyChanged("ScheduleUID");
					this.OnScheduleUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DayScheduleUID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid DayScheduleUID
		{
			get
			{
				return this._DayScheduleUID;
			}
			set
			{
				if ((this._DayScheduleUID != value))
				{
					if (this._GKDaySchedule.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDayScheduleUIDChanging(value);
					this.SendPropertyChanging();
					this._DayScheduleUID = value;
					this.SendPropertyChanged("DayScheduleUID");
					this.OnDayScheduleUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GKDaySchedule_ScheduleGKDaySchedule", Storage="_GKDaySchedule", ThisKey="DayScheduleUID", OtherKey="UID", IsForeignKey=true)]
		public GKDaySchedule GKDaySchedule
		{
			get
			{
				return this._GKDaySchedule.Entity;
			}
			set
			{
				GKDaySchedule previousValue = this._GKDaySchedule.Entity;
				if (((previousValue != value) 
							|| (this._GKDaySchedule.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GKDaySchedule.Entity = null;
						previousValue.ScheduleGKDaySchedules.Remove(this);
					}
					this._GKDaySchedule.Entity = value;
					if ((value != null))
					{
						value.ScheduleGKDaySchedules.Add(this);
						this._DayScheduleUID = value.UID;
					}
					else
					{
						this._DayScheduleUID = default(System.Guid);
					}
					this.SendPropertyChanged("GKDaySchedule");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GKSchedule_ScheduleGKDaySchedule", Storage="_GKSchedule", ThisKey="ScheduleUID", OtherKey="UID", IsForeignKey=true)]
		public GKSchedule GKSchedule
		{
			get
			{
				return this._GKSchedule.Entity;
			}
			set
			{
				GKSchedule previousValue = this._GKSchedule.Entity;
				if (((previousValue != value) 
							|| (this._GKSchedule.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GKSchedule.Entity = null;
						previousValue.ScheduleGKDaySchedules.Remove(this);
					}
					this._GKSchedule.Entity = value;
					if ((value != null))
					{
						value.ScheduleGKDaySchedules.Add(this);
						this._ScheduleUID = value.UID;
					}
					else
					{
						this._ScheduleUID = default(System.Guid);
					}
					this.SendPropertyChanged("GKSchedule");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GKSchedule")]
	public partial class GKSchedule : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UID;
		
		private int _No;
		
		private string _Name;
		
		private string _Description;
		
		private int _Type;
		
		private int _PeriodType;
		
		private System.DateTime _StartDateTime;
		
		private int _HoursPeriod;
		
		private int _HolidayScheduleNo;
		
		private int _WorkingHolidayScheduleNo;
		
		private int _Year;
		
		private EntitySet<GKScheduleDay> _GKScheduleDays;
		
		private EntitySet<ScheduleGKDaySchedule> _ScheduleGKDaySchedules;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUIDChanging(System.Guid value);
    partial void OnUIDChanged();
    partial void OnNoChanging(int value);
    partial void OnNoChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OnPeriodTypeChanging(int value);
    partial void OnPeriodTypeChanged();
    partial void OnStartDateTimeChanging(System.DateTime value);
    partial void OnStartDateTimeChanged();
    partial void OnHoursPeriodChanging(int value);
    partial void OnHoursPeriodChanged();
    partial void OnHolidayScheduleNoChanging(int value);
    partial void OnHolidayScheduleNoChanged();
    partial void OnWorkingHolidayScheduleNoChanging(int value);
    partial void OnWorkingHolidayScheduleNoChanged();
    partial void OnYearChanging(int value);
    partial void OnYearChanged();
    #endregion
		
		public GKSchedule()
		{
			this._GKScheduleDays = new EntitySet<GKScheduleDay>(new Action<GKScheduleDay>(this.attach_GKScheduleDays), new Action<GKScheduleDay>(this.detach_GKScheduleDays));
			this._ScheduleGKDaySchedules = new EntitySet<ScheduleGKDaySchedule>(new Action<ScheduleGKDaySchedule>(this.attach_ScheduleGKDaySchedules), new Action<ScheduleGKDaySchedule>(this.detach_ScheduleGKDaySchedules));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UID
		{
			get
			{
				return this._UID;
			}
			set
			{
				if ((this._UID != value))
				{
					this.OnUIDChanging(value);
					this.SendPropertyChanging();
					this._UID = value;
					this.SendPropertyChanged("UID");
					this.OnUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_No", DbType="Int NOT NULL")]
		public int No
		{
			get
			{
				return this._No;
			}
			set
			{
				if ((this._No != value))
				{
					this.OnNoChanging(value);
					this.SendPropertyChanging();
					this._No = value;
					this.SendPropertyChanged("No");
					this.OnNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(50)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PeriodType", DbType="Int NOT NULL")]
		public int PeriodType
		{
			get
			{
				return this._PeriodType;
			}
			set
			{
				if ((this._PeriodType != value))
				{
					this.OnPeriodTypeChanging(value);
					this.SendPropertyChanging();
					this._PeriodType = value;
					this.SendPropertyChanged("PeriodType");
					this.OnPeriodTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime StartDateTime
		{
			get
			{
				return this._StartDateTime;
			}
			set
			{
				if ((this._StartDateTime != value))
				{
					this.OnStartDateTimeChanging(value);
					this.SendPropertyChanging();
					this._StartDateTime = value;
					this.SendPropertyChanged("StartDateTime");
					this.OnStartDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoursPeriod", DbType="Int NOT NULL")]
		public int HoursPeriod
		{
			get
			{
				return this._HoursPeriod;
			}
			set
			{
				if ((this._HoursPeriod != value))
				{
					this.OnHoursPeriodChanging(value);
					this.SendPropertyChanging();
					this._HoursPeriod = value;
					this.SendPropertyChanged("HoursPeriod");
					this.OnHoursPeriodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HolidayScheduleNo", DbType="Int NOT NULL")]
		public int HolidayScheduleNo
		{
			get
			{
				return this._HolidayScheduleNo;
			}
			set
			{
				if ((this._HolidayScheduleNo != value))
				{
					this.OnHolidayScheduleNoChanging(value);
					this.SendPropertyChanging();
					this._HolidayScheduleNo = value;
					this.SendPropertyChanged("HolidayScheduleNo");
					this.OnHolidayScheduleNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkingHolidayScheduleNo", DbType="Int NOT NULL")]
		public int WorkingHolidayScheduleNo
		{
			get
			{
				return this._WorkingHolidayScheduleNo;
			}
			set
			{
				if ((this._WorkingHolidayScheduleNo != value))
				{
					this.OnWorkingHolidayScheduleNoChanging(value);
					this.SendPropertyChanging();
					this._WorkingHolidayScheduleNo = value;
					this.SendPropertyChanged("WorkingHolidayScheduleNo");
					this.OnWorkingHolidayScheduleNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="Int NOT NULL")]
		public int Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GKSchedule_GKScheduleDay", Storage="_GKScheduleDays", ThisKey="UID", OtherKey="ScheduleUID")]
		public EntitySet<GKScheduleDay> GKScheduleDays
		{
			get
			{
				return this._GKScheduleDays;
			}
			set
			{
				this._GKScheduleDays.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GKSchedule_ScheduleGKDaySchedule", Storage="_ScheduleGKDaySchedules", ThisKey="UID", OtherKey="ScheduleUID")]
		public EntitySet<ScheduleGKDaySchedule> ScheduleGKDaySchedules
		{
			get
			{
				return this._ScheduleGKDaySchedules;
			}
			set
			{
				this._ScheduleGKDaySchedules.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GKScheduleDays(GKScheduleDay entity)
		{
			this.SendPropertyChanging();
			entity.GKSchedule = this;
		}
		
		private void detach_GKScheduleDays(GKScheduleDay entity)
		{
			this.SendPropertyChanging();
			entity.GKSchedule = null;
		}
		
		private void attach_ScheduleGKDaySchedules(ScheduleGKDaySchedule entity)
		{
			this.SendPropertyChanging();
			entity.GKSchedule = this;
		}
		
		private void detach_ScheduleGKDaySchedules(ScheduleGKDaySchedule entity)
		{
			this.SendPropertyChanging();
			entity.GKSchedule = null;
		}
	}
}
#pragma warning restore 1591
