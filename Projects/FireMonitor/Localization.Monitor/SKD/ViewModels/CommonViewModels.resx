<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AccessTemplProperties" xml:space="preserve">
    <value>Access Properties template: {0}</value>
    <comment>google</comment>
  </data>
  <data name="AccessTemplToGroup" xml:space="preserve">
    <value>Appointment of the group access pattern (visitors)</value>
  </data>
  <data name="Add" xml:space="preserve">
    <value>Add {0}</value>
  </data>
  <data name="AddDocument" xml:space="preserve">
    <value>Adding a document</value>
  </data>
  <data name="AdditionalColumn" xml:space="preserve">
    <value>an additional column</value>
  </data>
  <data name="AdditionalColumnForbiddenName" xml:space="preserve">
    <value>Prohibited name more columns</value>
  </data>
  <data name="AdditionalColumnProperties" xml:space="preserve">
    <value>Features an extra column: {0}</value>
  </data>
  <data name="AddPass" xml:space="preserve">
    <value>Add pass</value>
  </data>
  <data name="AddVisitor" xml:space="preserve">
    <value>Add visitor</value>
  </data>
  <data name="AlreadyIncludedZone" xml:space="preserve">
    <value>The selected area is already included</value>
  </data>
  <data name="Always" xml:space="preserve">
    <value>Always</value>
  </data>
  <data name="Archive" xml:space="preserve">
    <value>Are you sure you want to archive {0}?</value>
  </data>
  <data name="CanCancelEditIntervals" xml:space="preserve">
    <value>The entered information will be saved in the editing window interval. Continue cancellation changes?</value>
  </data>
  <data name="CanNotDeleteDaySchedule" xml:space="preserve">
    <value>You can not delete the selected daily chart!</value>
  </data>
  <data name="ChooseDepart" xml:space="preserve">
    <value>Select division</value>
  </data>
  <data name="ClickToSelectController" xml:space="preserve">
    <value>Click to select the controller</value>
  </data>
  <data name="ClickToSelectReader" xml:space="preserve">
    <value>Click to select the reader</value>
  </data>
  <data name="CreateAccessTempl" xml:space="preserve">
    <value>Creating Access Template</value>
  </data>
  <data name="CreateAdditionalColumn" xml:space="preserve">
    <value>Create additional column</value>
  </data>
  <data name="CreateDepart" xml:space="preserve">
    <value>Create units</value>
  </data>
  <data name="CreateOrganization" xml:space="preserve">
    <value>Creating a new organization</value>
  </data>
  <data name="CreatePasscard" xml:space="preserve">
    <value>Create badge</value>
  </data>
  <data name="CreatePasscardTempl" xml:space="preserve">
    <value>Creating a template skip</value>
  </data>
  <data name="CreatePosition" xml:space="preserve">
    <value>Create a post</value>
  </data>
  <data name="CrossIntervalBounds" xml:space="preserve">
    <value>Crossing the boundaries of the intervals</value>
  </data>
  <data name="DayScheduleEdtition" xml:space="preserve">
    <value>Editing the daily chart</value>
  </data>
  <data name="Deactivated" xml:space="preserve">
    <value>Deactivated</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Remove {0}</value>
  </data>
  <data name="DeleteCard" xml:space="preserve">
    <value>Are you sure you want to remove the card?</value>
  </data>
  <data name="DeleteDocument" xml:space="preserve">
    <value>Are you sure you want to delete a document?</value>
  </data>
  <data name="DeleteDocumentsForEmpl" xml:space="preserve">
    <value>Documents type "{0}" is entered for some employees. To remove the type of supporting documents, you must first delete the document or change their look</value>
  </data>
  <data name="DeleteDocumentType" xml:space="preserve">
    <value>Are you sure you want to delete a document type?</value>
  </data>
  <data name="DeleteOrganization" xml:space="preserve">
    <value>Are you sure you want to delete an organization?</value>
  </data>
  <data name="DepartProperties" xml:space="preserve">
    <value>unit properties: {0}</value>
  </data>
  <data name="DepartWithEmployee" xml:space="preserve">
    <value>There are bound to unit staff. Continue?</value>
  </data>
  <data name="DetachEmployee" xml:space="preserve">
    <value>Are you sure you want to detach the employee?</value>
  </data>
  <data name="DocumentEdition" xml:space="preserve">
    <value>Editing a document</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Edit {0}</value>
  </data>
  <data name="EditPass" xml:space="preserve">
    <value>Edit passage</value>
  </data>
  <data name="Employee" xml:space="preserve">
    <value>employee</value>
  </data>
  <data name="EmployeePasscardArchive" xml:space="preserve">
    <value>Tied to pass the employee will be deactivated. Prodozhit?</value>
  </data>
  <data name="EmployeeProperties" xml:space="preserve">
    <value>employee properties: {0}</value>
  </data>
  <data name="Employees" xml:space="preserve">
    <value>Employees</value>
  </data>
  <data name="EmployeeScheduleWithSchedule" xml:space="preserve">
    <value>There are schedules of employees, that contain the active schedule. Continue?</value>
  </data>
  <data name="EmployeeTime" xml:space="preserve">
    <value>Time employee {0} in the day {1}</value>
  </data>
  <data name="EmployeeWithEmptyDepart" xml:space="preserve">
    <value>Employee {0} does not belong to any of the units</value>
  </data>
  <data name="EmptyDocumentName" xml:space="preserve">
    <value>Do not set the document title</value>
  </data>
  <data name="EmptyLiteralCode" xml:space="preserve">
    <value>Do not set the letter code of the document</value>
  </data>
  <data name="EmtyDoors" xml:space="preserve">
    <value>There are no access points.</value>
  </data>
  <data name="EndDateLaterStartDate" xml:space="preserve">
    <value>The end date may not be earlier than start date</value>
  </data>
  <data name="EndDatePasscard" xml:space="preserve">
    <value>Date of the end of the action passes may not be less than the current date</value>
  </data>
  <data name="EndDatePasscardLaterStartDate" xml:space="preserve">
    <value>Date of the end of the action passes can not be earlier than start date</value>
  </data>
  <data name="EndDateTimeLaterStartDateTime" xml:space="preserve">
    <value>The date and time must be later than the date and start time</value>
  </data>
  <data name="EnterCardNumber" xml:space="preserve">
    <value>Entering the card USB-reader</value>
  </data>
  <data name="EventsTypes" xml:space="preserve">
    <value>Types of events</value>
  </data>
  <data name="Filters" xml:space="preserve">
    <value>filters</value>
  </data>
  <data name="ForbiddenName" xml:space="preserve">
    <value>forbidden name</value>
  </data>
  <data name="ForceClosingFailed" xml:space="preserve">
    <value>You can not close the slot. The interval was closed earlier.</value>
  </data>
  <data name="Holiday" xml:space="preserve">
    <value>holiday</value>
  </data>
  <data name="HolidayEdition" xml:space="preserve">
    <value>Edit public holiday</value>
  </data>
  <data name="HolidayName" xml:space="preserve">
    <value>Name of public holiday</value>
  </data>
  <data name="IntervalEdition" xml:space="preserve">
    <value>Editing interval</value>
  </data>
  <data name="Lost" xml:space="preserve">
    <value>Lost {0}</value>
  </data>
  <data name="NameOfCopyData" xml:space="preserve">
    <value>The name of the copied records must be shorter than 47 characters</value>
  </data>
  <data name="Never" xml:space="preserve">
    <value>Never</value>
  </data>
  <data name="NewAccessTemplate" xml:space="preserve">
    <value>The new access pattern</value>
  </data>
  <data name="NewAdditionalColumn" xml:space="preserve">
    <value>New additional column</value>
  </data>
  <data name="NewDaySchedule" xml:space="preserve">
    <value>New daily chart</value>
  </data>
  <data name="NewDepart" xml:space="preserve">
    <value>The new unit</value>
  </data>
  <data name="NewDocumentType" xml:space="preserve">
    <value>A new kind of document</value>
  </data>
  <data name="NewHoliday" xml:space="preserve">
    <value>New holiday</value>
  </data>
  <data name="NewInterval" xml:space="preserve">
    <value>New range</value>
  </data>
  <data name="NewPosition" xml:space="preserve">
    <value>New post</value>
  </data>
  <data name="NewSchedule" xml:space="preserve">
    <value>New schedule</value>
  </data>
  <data name="NewTemplate" xml:space="preserve">
    <value>New template</value>
  </data>
  <data name="NewWorkSchedule" xml:space="preserve">
    <value>New schedule</value>
  </data>
  <data name="NightTime" xml:space="preserve">
    <value>Night time with {0} to {1}</value>
  </data>
  <data name="NN" xml:space="preserve">
    <value>HH</value>
  </data>
  <data name="NO" xml:space="preserve">
    <value>NO</value>
  </data>
  <data name="NoEmployeeInReport" xml:space="preserve">
    <value>In the report there is no employee</value>
  </data>
  <data name="None" xml:space="preserve">
    <value>&lt;None&gt;</value>
  </data>
  <data name="NotInDB" xml:space="preserve">
    <value>[Not yet in the database]</value>
  </data>
  <data name="NotSaveDaySchedule" xml:space="preserve">
    <value>The selected daily schedule will not be saved!</value>
  </data>
  <data name="NotValidPeriod" xml:space="preserve">
    <value>Please enter a valid period</value>
  </data>
  <data name="NumbersInPass" xml:space="preserve">
    <value>The password can only contain numbers</value>
  </data>
  <data name="NumCodePositive" xml:space="preserve">
    <value>The numerical code of the document must be a positive number</value>
  </data>
  <data name="NumCodeSame" xml:space="preserve">
    <value>The numerical code of the document coincides with one of the predefined</value>
  </data>
  <data name="OnlyFirstMonthDataInReport" xml:space="preserve">
    <value>The report contains data for several months. Data are shown only for the first month of</value>
  </data>
  <data name="OnlySameDepartInReport" xml:space="preserve">
    <value>The report should dyt staff of only one unit</value>
  </data>
  <data name="OnlySameOrganizationInReport" xml:space="preserve">
    <value>The report should dyt staff from only one organization</value>
  </data>
  <data name="OrganizationObjectsArchive" xml:space="preserve">
    <value>Tied to the organization of the objects will also be archived. Continue?</value>
  </data>
  <data name="OrganizationProperties" xml:space="preserve">
    <value>Properties organization: {0}</value>
  </data>
  <data name="PassbackRestrictionResetAll" xml:space="preserve">
    <value>Restriction on the second pass for the transit reset all access points</value>
  </data>
  <data name="PassbackRestrictionResetOne" xml:space="preserve">
    <value>Restriction on the second pass for the transit reset the access point</value>
  </data>
  <data name="PassbackRestrucuinReset" xml:space="preserve">
    <value>Restriction on the second pass dropped for all passes to all of the access points</value>
  </data>
  <data name="Passcard" xml:space="preserve">
    <value>Skipping {0}</value>
  </data>
  <data name="PasscardLimitForEmpl" xml:space="preserve">
    <value>An employee can not be more than 100 passes</value>
  </data>
  <data name="PasscardNumber" xml:space="preserve">
    <value>Card number</value>
  </data>
  <data name="PasscardProperties" xml:space="preserve">
    <value>skip properties: {0}</value>
  </data>
  <data name="PassCardsWithDoors" xml:space="preserve">
    <value>There are maps, access patterns or graphics that are linked to a given access point \ nAre you sure you want to get right to the access point?</value>
  </data>
  <data name="PasscardTemplate" xml:space="preserve">
    <value>Template Pass: {0}</value>
  </data>
  <data name="PasscardTemplProperties" xml:space="preserve">
    <value>Properties element: pass template</value>
  </data>
  <data name="PasscardTypes" xml:space="preserve">
    <value>Types of passes</value>
  </data>
  <data name="Photo" xml:space="preserve">
    <value>A photo</value>
  </data>
  <data name="PhotoGraphData" xml:space="preserve">
    <value>Photos and graphics data</value>
  </data>
  <data name="PositionProperties" xml:space="preserve">
    <value>Properties positions: {0}</value>
  </data>
  <data name="PositionWithEmployee" xml:space="preserve">
    <value>There are bound to office staff. Continue?</value>
  </data>
  <data name="PrintPasscard" xml:space="preserve">
    <value>Print ID {0}</value>
  </data>
  <data name="Record" xml:space="preserve">
    <value>record</value>
  </data>
  <data name="ResetAdjustmentsQuestion" xml:space="preserve">
    <value>When you reset all adjustments manually entered data will be deleted. Continue?</value>
  </data>
  <data name="Restore" xml:space="preserve">
    <value>Are you sure you want to restore {0}?</value>
  </data>
  <data name="RestoreOrganization" xml:space="preserve">
    <value>Are you sure you want to restore the organization?</value>
  </data>
  <data name="SameDocumentName" xml:space="preserve">
    <value>Document name matches one of the predefined</value>
  </data>
  <data name="SameLiteralCode" xml:space="preserve">
    <value>Literal code of the document coincides with one of the predefined codes</value>
  </data>
  <data name="SameOrganizationName" xml:space="preserve">
    <value>Name of the organization coincides with the previously entered</value>
  </data>
  <data name="SamePasscardNumber" xml:space="preserve">
    <value>You can not add a card with a repeating number</value>
  </data>
  <data name="ScheduleDisable" xml:space="preserve">
    <value>Schedule {0} disabled</value>
  </data>
  <data name="ScheduleWithEmployee" xml:space="preserve">
    <value>There are bound to schedule staff. Continue?</value>
  </data>
  <data name="SelectController" xml:space="preserve">
    <value>Select controller</value>
  </data>
  <data name="SelectDepart" xml:space="preserve">
    <value>Site selection</value>
  </data>
  <data name="SelectDocumentType" xml:space="preserve">
    <value>You must select a document type</value>
  </data>
  <data name="SelectEmployee" xml:space="preserve">
    <value>Selection of personnel</value>
  </data>
  <data name="SelectParentDepart" xml:space="preserve">
    <value>The choice of the parent unit</value>
  </data>
  <data name="SelectPosition" xml:space="preserve">
    <value>Selecting positions</value>
  </data>
  <data name="SelectReader" xml:space="preserve">
    <value>Selecting reader</value>
  </data>
  <data name="SelectSpace" xml:space="preserve">
    <value>Selection of premises</value>
  </data>
  <data name="SelectWorkSchedule" xml:space="preserve">
    <value>Selecting the operating schedule</value>
  </data>
  <data name="SomeWithSome" xml:space="preserve">
    <value>{0} {1}</value>
  </data>
  <data name="SpaceEdition" xml:space="preserve">
    <value>Editing rooms</value>
  </data>
  <data name="STRAZHObjects" xml:space="preserve">
    <value>Objects Sentinel</value>
  </data>
  <data name="T13PrintSetup" xml:space="preserve">
    <value>Print Setup T-13 report</value>
  </data>
  <data name="TypeDocumentEdition" xml:space="preserve">
    <value>Editing the form of vouchers</value>
  </data>
  <data name="UR" xml:space="preserve">
    <value>UR</value>
  </data>
  <data name="UseDeactivatedPasscard" xml:space="preserve">
    <value>Map with this number was previously deactivated. Use it?</value>
  </data>
  <data name="Visitor" xml:space="preserve">
    <value>visitor</value>
  </data>
  <data name="VisitorPasscardLimit" xml:space="preserve">
    <value>The number of passes for the guest pass to be set in the range from 1 to {0}</value>
  </data>
  <data name="VisitorProperties" xml:space="preserve">
    <value>Properties visitor: {0}</value>
  </data>
  <data name="Visitors" xml:space="preserve">
    <value>Visitors</value>
  </data>
  <data name="WorkSchedule" xml:space="preserve">
    <value>work schedules</value>
  </data>
  <data name="WorkScheduleEdition" xml:space="preserve">
    <value>Editing work schedule</value>
  </data>
  <data name="WorkSchedulesWithDaySchedules" xml:space="preserve">
    <value>There are work schedules that contain the active daily chart. Continue?</value>
  </data>
  <data name="Year" xml:space="preserve">
    <value>A year is not equal to '{0}'</value>
  </data>
  <data name="Zones" xml:space="preserve">
    <value>zone</value>
  </data>
</root>