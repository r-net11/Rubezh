<UserControl
	x:Class="SKDModule.Views.EmployeeCardDetailsView"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:Converters="clr-namespace:SKDModule.Converters"
	xmlns:Views="clr-namespace:SKDModule.Views"
	xmlns:sys="clr-namespace:System;assembly=mscorlib"
	Width="475"
	MinHeight="500">
	<UserControl.Resources>
		<ResourceDictionary>
			<Converters:CardTypeToStringConverter x:Key="CardTypeToStringConverter" />
			<Converters:CardTypeToLongStringConverter x:Key="CardTypeToLongStringConverter" />
			<BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="pack://application:,,,/Controls;component/Themes/HyperlinkStyle.xaml" />
			</ResourceDictionary.MergedDictionaries>
		</ResourceDictionary>
	</UserControl.Resources>
	<TabControl>
		<TabItem Header="Основные" >
			<StackPanel Grid.IsSharedSizeScope="True">
				<Grid Visibility="{Binding IsNewCard, Converter={StaticResource BoolToVisibilityConverter}}" Margin="10">
					<Grid.RowDefinitions>
						<RowDefinition />
						<RowDefinition />
						<RowDefinition />
						<RowDefinition />
					</Grid.RowDefinitions>
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="Auto" SharedSizeGroup="FirstColumn" />
						<ColumnDefinition Width="Auto" />
						<ColumnDefinition />
					</Grid.ColumnDefinitions>
					<TextBlock
						Text="Ввод с клавиатуры"
						Foreground="White"
						VerticalAlignment="Center"
						Margin="5" />
					<RadioButton
						x:Name="EnableKeyboard"
						Grid.Column="1"
						Margin="5"
						IsChecked="{Binding IsFirstRadioButtonChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
						VerticalAlignment="Center"
						HorizontalAlignment="Center" />
					<TextBox
						Grid.Column="2"
						Margin="2 4"
						Width="200"
						HorizontalAlignment="Left"
						Validation.ErrorTemplate="{x:Null}"
						IsEnabled="{Binding IsChecked, ElementName=EnableKeyboard, UpdateSourceTrigger=PropertyChanged}">
						<TextBox.Style>
							<Style BasedOn="{StaticResource {x:Type TextBox}}" TargetType="{x:Type TextBox}">
								<Setter Property="Text" Value="{Binding Number}" />
								<Style.Triggers>
									<Trigger Property="IsEnabled" Value="False">
										<Setter Property="Text" Value="{x:Null}" />
									</Trigger>
								</Style.Triggers>
							</Style>
						</TextBox.Style>
						</TextBox>
					<TextBlock
						Grid.Row="1"
						Text="Из деактивированных"
						Foreground="White"
						Margin="5"
						VerticalAlignment="Center" />
					<RadioButton
						x:Name="EnableDeactivate"
						Grid.Column="1"
						Grid.Row="1"
						Margin="5"
						IsChecked="{Binding IsEnableFromDeactivationCard, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
						VerticalAlignment="Center"
						HorizontalAlignment="Center" />
					<ComboBox
						x:Name="StopListBox"
						Grid.Row="1"
						Grid.Column="2"
						Margin="2 4"
						HorizontalAlignment="Left"
						Width="200"
						IsEnabled="{Binding IsChecked, ElementName=EnableDeactivate, UpdateSourceTrigger=PropertyChanged}"
						ItemsSource="{Binding StopListCards}"
						SelectedItem="{Binding SelectedStopListCard}">
						<ComboBox.ItemTemplate>
							<DataTemplate>
								<TextBlock Margin="1" Text="{Binding Number}" />
							</DataTemplate>
						</ComboBox.ItemTemplate>
					</ComboBox>
					<TextBlock
						Grid.Row="2"
						Text="От контрольного считывателя"
						Foreground="White"
						Margin="5"
						VerticalAlignment="Center" />
					<RadioButton
						x:Name="EnableReader"
						Grid.Column="1"
						Grid.Row="2"
						Margin="5"
						IsChecked="{Binding UseReader, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
						VerticalAlignment="Center"
						HorizontalAlignment="Center" />
					<Views:ControlReaderComponent
						Grid.Column="2"
						Grid.Row="2"
						Margin="2 4"
						Validation.ErrorTemplate="{x:Null}"
						IsEnabled="{Binding ElementName=EnableReader, Path=IsChecked, UpdateSourceTrigger=PropertyChanged}"
						TextBoxWidth="{Binding ElementName=StopListBox, Path=ActualWidth}"

						IsLinkEnabled="{Binding IsChecked, ElementName=EnableReader, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
						ClickCommand="{Binding ChangeReaderCommand}"
						LinkText="{Binding ReaderName, UpdateSourceTrigger=PropertyChanged}"
						ContentText="{Binding NumberFromControlReader, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
						<Views:ControlReaderComponent.Style>
							<Style TargetType="{x:Type Views:ControlReaderComponent}">
								<Setter Property="IsReaderSelected" Value="{Binding IsReaderSelected, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
								<Style.Triggers>
									<Trigger Property="IsEnabled" Value="False">
										<Setter Property="IsReaderSelected" Value="False" />
									</Trigger>
								</Style.Triggers>
							</Style>
						</Views:ControlReaderComponent.Style>
					</Views:ControlReaderComponent>
					<!--<TextBlock
						Grid.Row="2"
						Grid.Column="2"
						Margin="2 4"
						VerticalAlignment="Center"
						Focusable="False"
						FocusVisualStyle="{x:Null}"
						TextWrapping="Wrap">
						<Hyperlink
							Focusable="False"
							FocusVisualStyle="{x:Null}"
							IsEnabled="{Binding IsChecked, ElementName=EnableReader, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
							Command="{Binding ChangeReaderCommand}"
							Style="{StaticResource HyperlinkStyle}">
								<TextBlock FocusVisualStyle="{x:Null}" Focusable="False" Text="{Binding ReaderName}">
									<TextBlock.Style>
										<Style>
											<Style.Triggers>
												<DataTrigger Binding="{Binding ElementName=EnableReader, Path=IsChecked}" Value="False">
													<Setter Property="TextBlock.Foreground" Value="LightGray" />
												</DataTrigger>
											</Style.Triggers>
										</Style>
									</TextBlock.Style>
								</TextBlock>
						</Hyperlink>
					</TextBlock>-->
					<TextBlock
						Grid.Row="3"
						Text="От USB-считывателя"
						Foreground="White"
						Margin="5"
						VerticalAlignment="Center" />
					<RadioButton
						x:Name="EnableUSB"
						Grid.Column="1"
						Grid.Row="3"
						Margin="5"
						IsChecked="{Binding EnableValidationForUSB, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
						VerticalAlignment="Center"
						HorizontalAlignment="Center" />
					<TextBox
						Grid.Column="2"
						Grid.Row="3"
						Margin="2 4"
						HorizontalAlignment="Left"
						Width="200"
						Validation.ErrorTemplate="{x:Null}"
						IsEnabled="{Binding IsChecked, ElementName=EnableUSB, UpdateSourceTrigger=PropertyChanged}">
						<TextBox.Style>
							<Style BasedOn="{StaticResource {x:Type TextBox}}" TargetType="{x:Type TextBox}">
								<Setter Property="Text" Value="{Binding NumberFromUSB}" />
								<Style.Triggers>
									<Trigger Property="IsEnabled" Value="False">
										<Setter Property="Text" Value="{x:Null}" />
									</Trigger>
								</Style.Triggers>
							</Style>
						</TextBox.Style>
						</TextBox>
				</Grid>
				<Separator
					Margin="20 10"
					Style="{x:Null}"
					Visibility="{Binding IsNewCard, Converter={StaticResource BoolToVisibilityConverter}}"
					Opacity="0.6"
					BorderBrush="LightBlue"
					BorderThickness="5"/>
				<Grid Margin="10">
					<Grid.RowDefinitions>
						<RowDefinition />
						<RowDefinition />
						<RowDefinition />
						<RowDefinition />
						<RowDefinition />
					</Grid.RowDefinitions>
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="Auto" SharedSizeGroup="FirstColumn" />
						<ColumnDefinition />
					</Grid.ColumnDefinitions>
					<TextBlock
						Text="Тип пропуска"
						Foreground="White"
						VerticalAlignment="Top"
						Margin="5" />
					<StackPanel
						Grid.Column="1"
						Width="225"
						HorizontalAlignment="Left"
						Margin="2">
						<ComboBox
							ItemsSource="{Binding CardTypes}"
							SelectedItem="{Binding SelectedCardType}"
							Margin="0 4">
							<ComboBox.ItemTemplate>
								<DataTemplate>
									<TextBlock Text="{Binding ., Converter={StaticResource CardTypeToStringConverter}}" />
								</DataTemplate>
							</ComboBox.ItemTemplate>
						</ComboBox>
						<TextBlock
							Margin="2"
							Foreground="White"
							Text="{Binding SelectedCardType, Converter={StaticResource CardTypeToLongStringConverter}}"
							TextWrapping="Wrap" />
					</StackPanel>
					<TextBlock
						Grid.Row="1"
						Foreground="White"
						Text="Пароль"
						VerticalAlignment="Center"
						Margin="5" />
					<TextBox
						Grid.Row="1"
						Grid.Column="1"
						MaxLength="50"
						Width="225"
						HorizontalAlignment="Left"
						VerticalAlignment="Center"
						Margin="2 4"
						Text="{Binding Password}" />
					<TextBlock
						Grid.Row="2"
						Text="Начало действия"
						Foreground="White"
						VerticalAlignment="Center"
						Margin="5" />
					<DatePicker
						Grid.Row="2"
						Grid.Column="1"
						IsTodayHighlighted="False"
						VerticalAlignment="Center"
						HorizontalAlignment="Left"
						Width="225"
						Margin="2 4"
						SelectedDate="{Binding StartDate}"
						DisplayDate="{Binding StartDate}"
						DisplayDateStart="{x:Static sys:DateTime.Now}" />
					<TextBlock
						Grid.Row="3"
						Text="Окончание действия"
						Foreground="White"
						VerticalAlignment="Center"
						Margin="5" />
					<DatePicker
						Grid.Row="3"
						Grid.Column="1"
						Margin="2 4"
						HorizontalAlignment="Left"
						VerticalAlignment="Center"
						Width="225"
						DisplayDate="{Binding EndDate}"
						IsEnabled="{Binding CanSelectEndDate}"
						IsTodayHighlighted="False"
						DisplayDateStart="{x:Static sys:DateTime.Now}"
						SelectedDate="{Binding EndDate}" />
					<CheckBox
						Grid.Row="4"
						Grid.Column="1"
						Margin="2 4"
						IsChecked="{Binding IsAlternativeLockParams, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
						<TextBlock
							Text="Альтернативные время закрытия и удержания (для карт лиц с ограниченными возможностями)"
							TextWrapping="Wrap"
							Foreground="White" />
					</CheckBox>
				</Grid>
			</StackPanel>
		</TabItem>
		<TabItem Header="Точки доступа">
			<Views:AccessDoorsSelectationView DataContext="{Binding AccessDoorsSelectationViewModel}" />
		</TabItem>
		<TabItem Header="Шаблон доступа">
			<DataGrid ItemsSource="{Binding AvailableAccessTemplates}" SelectedItem="{Binding SelectedAccessTemplate}">
				<DataGrid.Columns>
					<DataGridTemplateColumn Width="*" Header="Шаблон доступа">
						<DataGridTemplateColumn.CellTemplate>
							<DataTemplate>
								<StackPanel Orientation="Horizontal">
									<Image
										Margin="1 0 0 0"
										VerticalAlignment="Center"
										Source="/Controls;component/Images/Zone.png" />
									<TextBlock
										Margin="2"
										HorizontalAlignment="Stretch"
										VerticalAlignment="Center"
										Text="{Binding Name}" />
								</StackPanel>
							</DataTemplate>
						</DataGridTemplateColumn.CellTemplate>
					</DataGridTemplateColumn>
				</DataGrid.Columns>
			</DataGrid>
		</TabItem>
	</TabControl>
</UserControl>